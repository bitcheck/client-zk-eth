{
  "contractName": "ETHShakerV2",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IVerifier",
          "name": "_verifier",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_denomination",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_commonWithdrawAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "commitment",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "leafIndex",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "orderStatus",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "effectiveTime",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "nullifierHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "commonFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "commonFeeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "commonWithdrawAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "councilAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "denomination",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "_commitments",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "_orderStatus",
          "type": "uint8"
        },
        {
          "internalType": "address payable",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_effectiveTime",
          "type": "uint256"
        }
      ],
      "name": "depositERC20Batch",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_nullifierHash",
          "type": "bytes32"
        },
        {
          "internalType": "address payable",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_relayer",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "_orderStatus",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_oldCommitment",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_newCommitment",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_effectiveTime",
          "type": "uint256"
        }
      ],
      "name": "endorse",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getRelayerWithdrawAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_nullifierHash",
          "type": "bytes32"
        }
      ],
      "name": "isSpent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_nullifierHashes",
          "type": "bytes32[]"
        }
      ],
      "name": "isSpentArray",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "spent",
          "type": "bool[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lockCommitments",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_nullifierHash",
          "type": "bytes32"
        },
        {
          "internalType": "address payable",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_relayer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_refund",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_commitment",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "lockDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "lockReason",
      "outputs": [
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "datetime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "locker",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "refund",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_councilAddress",
          "type": "address"
        }
      ],
      "name": "setCouncial",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "unlockDeposit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rate",
          "type": "uint256"
        }
      ],
      "name": "updateCommonFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_commonWithdrawAddress",
          "type": "address"
        }
      ],
      "name": "updateCommonWithdrawAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOperator",
          "type": "address"
        }
      ],
      "name": "updateOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_relayer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_withdrawAddress",
          "type": "address"
        }
      ],
      "name": "updateRelayer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_newVerifier",
          "type": "address"
        }
      ],
      "name": "updateVerifier",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "verifier",
      "outputs": [
        {
          "internalType": "contract IVerifier",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_nullifierHash",
          "type": "bytes32"
        },
        {
          "internalType": "address payable",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_relayer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_refund",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_commitment",
          "type": "bytes32"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IVerifier\",\"name\":\"_verifier\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_denomination\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_commonWithdrawAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"leafIndex\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"orderStatus\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"effectiveTime\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"nullifierHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"commonFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"commonFeeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"commonWithdrawAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"councilAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"denomination\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"_commitments\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"_orderStatus\",\"type\":\"uint8\"},{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_effectiveTime\",\"type\":\"uint256\"}],\"name\":\"depositERC20Batch\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_nullifierHash\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_relayer\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_orderStatus\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_oldCommitment\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_newCommitment\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_effectiveTime\",\"type\":\"uint256\"}],\"name\":\"endorse\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRelayerWithdrawAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_nullifierHash\",\"type\":\"bytes32\"}],\"name\":\"isSpent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_nullifierHashes\",\"type\":\"bytes32[]\"}],\"name\":\"isSpentArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"spent\",\"type\":\"bool[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lockCommitments\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_nullifierHash\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_relayer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_refund\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_commitment\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"lockDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"lockReason\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"datetime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"locker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_councilAddress\",\"type\":\"address\"}],\"name\":\"setCouncial\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"unlockDeposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"updateCommonFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_commonWithdrawAddress\",\"type\":\"address\"}],\"name\":\"updateCommonWithdrawAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOperator\",\"type\":\"address\"}],\"name\":\"updateOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_relayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_withdrawAddress\",\"type\":\"address\"}],\"name\":\"updateRelayer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newVerifier\",\"type\":\"address\"}],\"name\":\"updateVerifier\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"verifier\",\"outputs\":[{\"internalType\":\"contract IVerifier\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_nullifierHash\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_relayer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_refund\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_commitment\",\"type\":\"bytes32\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"depositERC20Batch(uint256[],bytes32[],uint8,address,uint256)\":{\"details\":\"Deposit a set of amount and commitments\",\"params\":{\"_amounts\":\", array of ERC20 amount\",\"_commitments\":\", array of commitments\",\"_effectiveTime\":\", effective time of the Withdrawal\",\"_orderStatus\":\", status of deposit, 0: cheque for bearer, 1: cheque for order\",\"_recipient\":\", recipient address if cheque for order\"}},\"endorse(bytes,bytes32,bytes32,address,address,uint8,uint256,bytes32,bytes32,uint256)\":{\"details\":\"this function is for cheque endorsement\",\"params\":{\"_amount\":\", endorsed amount, the endorsement amount can be part of balance of old cheque\",\"_effectiveTime\":\", new effectiveTime of note\",\"_newCommitment\":\", new commitment from frontend\",\"_nullifierHash\":\", old nullifierHashe\",\"_oldCommitment\":\", old commitment which will be endorsed\",\"_orderStatus\":\", old cheque order type, 0- to Bearer cheque, 1- to order cheque\",\"_proof\":\", Proof of zkSNARK\",\"_recipient\":\", new recipient address, if orderStatus is 0, the _recipient is sender. Otherwise the _recipient is to order\",\"_relayer\":\", relayer address\",\"_root\":\", root of merkle tree\"}},\"getRelayerWithdrawAddress()\":{\"details\":\"get relayer Withdrawal address \"},\"isSpent(bytes32)\":{\"details\":\"whether a note is already spent \"},\"isSpentArray(bytes32[])\":{\"details\":\"whether an array of notes is already spent \"},\"lockDeposit(bytes,bytes32,bytes32,address,address,uint256,uint256,bytes32,string)\":{\"details\":\"lock commitment, this operation can be only called by note holder \"},\"setCouncial(address)\":{\"details\":\"set council address \"},\"unlockDeposit(uint256)\":{\"details\":\"unlock commitment by council \"},\"updateCommonFee(uint256,uint256)\":{\"details\":\"set common fee and fee rate \"},\"updateCommonWithdrawAddress(address)\":{\"details\":\"update commonWithdrawAddress \"},\"updateOperator(address)\":{\"details\":\"operator can change his address \"},\"updateRelayer(address,address)\":{\"details\":\"update authority relayer \"},\"updateVerifier(address)\":{\"details\":\"allow operator to update SNARK verification keys. This is needed to update keys after the final trusted setup ceremony is held. After that operator rights are supposed to be transferred to zero address\"},\"withdraw(bytes,bytes32,bytes32,address,address,uint256,uint256,bytes32)\":{\"details\":\"Withdraw a deposit from the contract. `proof` is a zkSNARK proof data, and input is an array of circuit public inputs `input` array consists of: - merkle root of all deposits in the contract - hash of unique deposit nullifier to prevent double spends - the recipient of funds - optional fee that goes to the transaction sender (usually a relay)\",\"params\":{\"_fee\":\", relayer decide the fee amount\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/guqianfeng/web/my_dapps/hunbi/tornado-core/contracts/ETHShakerV2.sol\":\"ETHShakerV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/guqianfeng/web/my_dapps/hunbi/tornado-core/contracts/ETHShakerV2.sol\":{\"keccak256\":\"0xcd3aa0f5ad373dda711e0defb2960d69e07b019c232a381e91edeaa35ca375e2\",\"urls\":[\"bzz-raw://6f86488e8f8f4e05dcfd6c234c473401138aa8337a2d6fcb774a28ef2de5f8d8\",\"dweb:/ipfs/QmVGJSr258E7BDksg57ijYwzNPrY3qaYy4uDGwSuAVPqmY\"]},\"/Users/guqianfeng/web/my_dapps/hunbi/tornado-core/contracts/ReentrancyGuard.sol\":{\"keccak256\":\"0x1f0687b27b70098e945c0673bad1a2a9ff1b7300cb15b66411804474e3d0bc22\",\"urls\":[\"bzz-raw://c5ab9cad47ff8a3aeb90a3976ee5f293fa469f33ba11eb5df327f736951ecdd1\",\"dweb:/ipfs/QmWoRR8NtLS7hLKsuMskotVGZP6tmtevn7MSKrQYK2SrJL\"]},\"/Users/guqianfeng/web/my_dapps/hunbi/tornado-core/contracts/SafeMath.sol\":{\"keccak256\":\"0x28ffe1fc796e4c7b098bf83160d62b28fa2fa57fe58583cb1c8ae071dabf8a15\",\"urls\":[\"bzz-raw://e8d70c999f19cb42cfbe34f2212ad12ebea4db423ccaf1fc93771480f957d721\",\"dweb:/ipfs/QmfH2vvRxM2MCcDmzgEqpNmgtkcgUXFLszjJnyd21JAdi9\"]},\"/Users/guqianfeng/web/my_dapps/hunbi/tornado-core/contracts/ShakerV2.sol\":{\"keccak256\":\"0x94a018fa0b9529fc8b5050f4054b0b56f40b541b2b786856305e87045978e540\",\"urls\":[\"bzz-raw://4ff0f399f91ecfa055d792fa237ef78beb7112e60a58f0d37f665a0b288d7b21\",\"dweb:/ipfs/QmSy6B8csfptJEFYsMQfR6kcEPsbanhiZv4XkWqqkcZ6Aq\"]}},\"version\":1}",
  "bytecode": "0x6080604052600060015560006002556000600f55600060105534801561002457600080fd5b506040516128933803806128938339818101604052608081101561004757600080fd5b5080516020820151604083015160609093015160016000559192909183838383826100a35760405162461bcd60e51b815260040180806020018281038252602581526020018061286e6025913960400191505060405180910390fd5b600380546001600160a01b039586166001600160a01b0319918216179091556004805493861693821693909317909255600692909255600e805492909316911617905550505050612775806100f96000396000f3fe6080604052600436106101665760003560e01c8063807c7ba3116100d1578063a8be3cd61161008a578063bbe9cd8c11610064578063bbe9cd8c146106f9578063da90803914610729578063e5285dcc146107c9578063eece3bd51461080757610166565b8063a8be3cd6146105db578063ac7475ed146106b1578063ad7a672f146106e457610166565b8063807c7ba3146103bb578063827a2600146103e55780638bca6d161461049557806397fc007c146104aa5780639fa12d0b146104dd578063a4cab45c146105a857610166565b80634d10b2fb116101235780634d10b2fb1461023f57806354b45fc314610254578063570ca735146102875780635c64ae911461029c57806362bc0cd61461037c57806377b9de8e1461039157610166565b806315d232db1461016b5780631a39d8ef1461019c578063266c0aa7146101c35780632b7ac3f31461020057806335795ea7146102155780634adf3d151461022a575b600080fd5b34801561017757600080fd5b506101806108fc565b604080516001600160a01b039092168252519081900360200190f35b3480156101a857600080fd5b506101b161096e565b60408051918252519081900360200190f35b3480156101cf57600080fd5b506101fe600480360360408110156101e657600080fd5b506001600160a01b0381358116916020013516610974565b005b34801561020c57600080fd5b506101806109eb565b34801561022157600080fd5b506101b16109fa565b34801561023657600080fd5b506101b1610a00565b34801561024b57600080fd5b50610180610a06565b34801561026057600080fd5b506101fe6004803603602081101561027757600080fd5b50356001600160a01b0316610a15565b34801561029357600080fd5b50610180610a80565b3480156102a857600080fd5b506102c6600480360360208110156102bf57600080fd5b5035610a8f565b6040805160ff88166020808301919091529181018790526001600160a01b0380871660608301528581166080830152841660a082015260c0810183905260e08082528951908201528851909182916101008301918b019080838360005b8381101561033b578181015183820152602001610323565b50505050905090810190601f1680156103685780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b34801561038857600080fd5b50610180610b68565b34801561039d57600080fd5b506101fe600480360360208110156103b457600080fd5b5035610b77565b3480156103c757600080fd5b506101b1600480360360208110156103de57600080fd5b5035610c46565b6101fe60048036036101408110156103fc57600080fd5b810190602081018135600160201b81111561041657600080fd5b82018360208201111561042857600080fd5b803590602001918460018302840111600160201b8311171561044957600080fd5b91935091508035906020810135906001600160a01b03604082013581169160608101359091169060ff6080820135169060a08101359060c08101359060e0810135906101000135610c64565b3480156104a157600080fd5b506101b16112f7565b3480156104b657600080fd5b506101fe600480360360208110156104cd57600080fd5b50356001600160a01b03166112fd565b3480156104e957600080fd5b506105586004803603602081101561050057600080fd5b810190602081018135600160201b81111561051a57600080fd5b82018360208201111561052c57600080fd5b803590602001918460208302840111600160201b8311171561054d57600080fd5b509092509050611368565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561059457818101518382015260200161057c565b505050509050019250505060405180910390f35b3480156105b457600080fd5b506101fe600480360360208110156105cb57600080fd5b50356001600160a01b03166113f0565b6101fe600480360360a08110156105f157600080fd5b810190602081018135600160201b81111561060b57600080fd5b82018360208201111561061d57600080fd5b803590602001918460208302840111600160201b8311171561063e57600080fd5b919390929091602081019035600160201b81111561065b57600080fd5b82018360208201111561066d57600080fd5b803590602001918460208302840111600160201b8311171561068e57600080fd5b919350915060ff813516906001600160a01b03602082013516906040013561145b565b3480156106bd57600080fd5b506101fe600480360360208110156106d457600080fd5b50356001600160a01b031661155a565b3480156106f057600080fd5b506101b16115c5565b34801561070557600080fd5b506101fe6004803603604081101561071c57600080fd5b50803590602001356115cb565b6101fe600480360361010081101561074057600080fd5b810190602081018135600160201b81111561075a57600080fd5b82018360208201111561076c57600080fd5b803590602001918460018302840111600160201b8311171561078d57600080fd5b91935091508035906020810135906001600160a01b03604082013581169160608101359091169060808101359060a08101359060c0013561161f565b3480156107d557600080fd5b506107f3600480360360208110156107ec57600080fd5b5035611c6e565b604080519115158252519081900360200190f35b6101b1600480360361012081101561081e57600080fd5b810190602081018135600160201b81111561083857600080fd5b82018360208201111561084a57600080fd5b803590602001918460018302840111600160201b8311171561086b57600080fd5b919390928235926020810135926001600160a01b03604083013581169360608401359091169260808101359260a08201359260c08301359261010081019060e00135600160201b8111156108be57600080fd5b8201836020820111156108d057600080fd5b803590602001918460018302840111600160201b831117156108f157600080fd5b509092509050611c83565b336000908152600d60205260408120546001600160a01b03166109505760405162461bcd60e51b81526004018080602001828103825260248152602001806126576024913960400191505060405180910390fd5b50336000908152600d60205260409020546001600160a01b03165b90565b60015481565b6004546001600160a01b031633146109bd5760405162461bcd60e51b81526004018080602001828103825260258152602001806126c36025913960400191505060405180910390fd5b6001600160a01b039182166000908152600d6020526040902080546001600160a01b03191691909216179055565b6003546001600160a01b031681565b600f5481565b60105481565b600e546001600160a01b031681565b6004546001600160a01b03163314610a5e5760405162461bcd60e51b81526004018080602001828103825260258152602001806126c36025913960400191505060405180910390fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b031681565b60116020908152600091825260409182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452909291839190830182828015610b265780601f10610afb57610100808354040283529160200191610b26565b820191906000526020600020905b815481529060010190602001808311610b0957829003601f168201915b50505060018401546002850154600386015460048701546005880154600690980154969760ff909416969295506001600160a01b039182169450811692169087565b6005546001600160a01b031681565b6005546001600160a01b03163314610bc05760405162461bcd60e51b815260040180806020018281038252602c8152602001806125e0602c913960400191505060405180910390fd5b6011600060128381548110610bd157fe5b60009182526020808320909101548352820192909252604001902060019081015460ff161415610c435760026011600060128481548110610c0e57fe5b9060005260206000200154815260200190815260200160002060010160006101000a81548160ff021916908360ff1602179055505b50565b60128181548110610c5357fe5b600091825260209091200154905081565b60026000541415610caa576040805162461bcd60e51b815260206004820152601f6024820152600080516020612490833981519152604482015290519081900360640190fd5b6002600090815583815260116020526040902060019081015460ff161415610d13576040805162461bcd60e51b8152602060048201526017602482015276151a1a5cc819195c1bdcda5d081dd85cc81b1bd8dad959604a1b604482015290519081900360640190fd5b60008381526008602052604090205460ff16610d76576040805162461bcd60e51b815260206004820152601b60248201527f4f6c6420636f6d6d69746d656e742063616e206e6f742066696e640000000000604482015290519081900360640190fd5b60008281526008602052604090205460ff1615610dc45760405162461bcd60e51b81526004018080602001828103825260258152602001806125356025913960400191505060405180910390fd5b60008881526007602052604090205460ff1615610e28576040805162461bcd60e51b815260206004820152601f60248201527f546865206e6f746520686173206265656e20616c7265616479207370656e7400604482015290519081900360640190fd5b600083815260096020526040902054610e88576040805162461bcd60e51b815260206004820152601f60248201527f4e6f2062616c616e636520616d6f756e74206f6620746869732070726f6f6600604482015290519081900360640190fd5b6000838152600960205260408120548510610eb157600084815260096020526040902054610eb3565b845b905060008111610f0a576040805162461bcd60e51b815260206004820152601d60248201527f526566756e6420616d6f756e742063616e206e6f74206265207a65726f000000604482015290519081900360640190fd5b6000848152600a602052604090205460ff166001148015610f4157506000848152600b60205260409020546001600160a01b031633145b80610f5b57506000848152600a602052604090205460ff16155b610f965760405162461bcd60e51b81526004018080602001828103825260248152602001806126e86024913960400191505060405180910390fd5b600360009054906101000a90046001600160a01b03166001600160a01b031663695ef6f98d8d6040518060c001604052808f60001c81526020018e60001c81526020018d6001600160a01b031681526020018c6001600160a01b031681526020018b60ff1681526020018a8152506040518463ffffffff1660e01b8152600401808060200183600660200280838360005b8381101561103f578181015183820152602001611027565b505050509050018281038252858582818152602001925080828437600081840152601f19601f820116905080830192505050945050505050602060405180830381600087803b15801561109157600080fd5b505af11580156110a5573d6000803e3d6000fd5b505050506040513d60208110156110bb57600080fd5b505161110e576040805162461bcd60e51b815260206004820152601960248201527f496e76616c696420656e646f7273656d656e742070726f6f6600000000000000604482015290519081900360640190fd5b6000821580159061112d57506000858152600c60205260409020544210155b15611148576000848152600c6020526040902083905561115f565b6000858152600c6020526040808220548683529120555b6000848152600860209081526040808320805460ff199081166001908117909255600984528285208b9055600a9093529220805460ff8b16921682179055146111a857336111aa565b885b6000858152600b6020908152604080832080546001600160a01b0319166001600160a01b0395909516949094179093558782526009905220546111ed9083611fae565b60008681526009602052604090208190551561120a57600061120d565b60015b60008b815260076020908152604091829020805493151560ff1990941693909317909255805163ffffffff84168152429281019290925260ff8916828201526001600160a01b038b166060830152608082018590525185917ff052b28ca720e670068c23c54488dc5b4db3ed42fde7c3fd2d0ea7aee06406eb919081900360a00190a2604080516000808252602082018d9052818301526060810184905290516001600160a01b038a16917f6d7aac54bd3d1c91db3b1fd7b8d6cb45324ad6b5e373c0f0ea4d7b2606c4c2c8919081900360800190a2505060016000555050505050505050505050565b60065481565b6004546001600160a01b031633146113465760405162461bcd60e51b81526004018080602001828103825260258152602001806126c36025913960400191505060405180910390fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b604080518281526020808402820101909152606090828015611394578160200160208202803883390190505b50905060005b828110156113e9576113bd8484838181106113b157fe5b90506020020135611c6e565b156113e15760018282815181106113d057fe5b911515602092830291909101909101525b60010161139a565b5092915050565b6004546001600160a01b031633146114395760405162461bcd60e51b81526004018080602001828103825260258152602001806126c36025913960400191505060405180910390fd5b600e80546001600160a01b0319166001600160a01b0392909216919091179055565b600260005414156114a1576040805162461bcd60e51b815260206004820152601f6024820152600080516020612490833981519152604482015290519081900360640190fd5b600260005560ff831615806114b957508260ff166001145b6114f45760405162461bcd60e51b81526004018080602001828103825260268152602001806124b06026913960400191505060405180910390fd5b6001600160a01b03821661150757600080fd5b60005b8681101561154b5761154388888381811061152157fe5b9050602002013587878481811061153457fe5b9050602002013586868661200b565b60010161150a565b50506001600055505050505050565b6004546001600160a01b031633146115a35760405162461bcd60e51b81526004018080602001828103825260258152602001806126c36025913960400191505060405180910390fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b60025481565b6004546001600160a01b031633146116145760405162461bcd60e51b81526004018080602001828103825260258152602001806126c36025913960400191505060405180910390fd5b600f91909155601055565b60026000541415611665576040805162461bcd60e51b815260206004820152601f6024820152600080516020612490833981519152604482015290519081900360640190fd5b6002600090815581815260116020526040902060019081015460ff1614156116ce576040805162461bcd60e51b8152602060048201526017602482015276151a1a5cc819195c1bdcda5d081dd85cc81b1bd8dad959604a1b604482015290519081900360640190fd5b60008681526007602052604090205460ff1615611732576040805162461bcd60e51b815260206004820152601f60248201527f546865206e6f746520686173206265656e20616c7265616479207370656e7400604482015290519081900360640190fd5b6000818152600a602052604090205460ff16600114801561176c57506000818152600b60205260409020546001600160a01b038681169116145b8061178657506000818152600a602052604090205460ff16155b6117c15760405162461bcd60e51b815260040180806020018281038252602781526020018061250e6027913960400191505060405180910390fd5b600081815260096020526040902054611821576040805162461bcd60e51b815260206004820152601f60248201527f4e6f2062616c616e636520616d6f756e74206f6620746869732070726f6f6600604482015290519081900360640190fd5b600081815260096020526040812054831061184a5760008281526009602052604090205461184c565b825b9050600081116118a3576040805162461bcd60e51b815260206004820152601d60248201527f526566756e6420616d6f756e742063616e206e6f74206265207a65726f000000604482015290519081900360640190fd5b6000828152600c60205260409020544210156118f05760405162461bcd60e51b815260040180806020018281038252602d81526020018061257f602d913960400191505060405180910390fd5b8381101561192f5760405162461bcd60e51b815260040180806020018281038252602581526020018061255a6025913960400191505060405180910390fd5b6003546040805160c080820183528b8252602082018b90526001600160a01b038a81168385015289811660608401526080830189905260a08301889052925163695ef6f960e01b8152929093169263695ef6f9928e928e9290916004810191829160240190849080838360005b838110156119b457818101518382015260200161199c565b505050509050018281038252858582818152602001925080828437600081840152601f19601f820116905080830192505050945050505050602060405180830381600087803b158015611a0657600080fd5b505af1158015611a1a573d6000803e3d6000fd5b505050506040513d6020811015611a3057600080fd5b5051611a7c576040805162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b604482015290519081900360640190fd5b6000828152600a602052604081205460ff16600114611a9b5786611ab4565b6000838152600b60205260409020546001600160a01b03165b336000908152600d6020526040812054919250906001600160a01b031615611af457336000908152600d60205260409020546001600160a01b0316611b01565b600e546001600160a01b03165b90506000611b0e8461218d565b905083811115611b4f5760405162461bcd60e51b815260040180806020018281038252602a81526020018061260c602a913960400191505060405180910390fd5b336000908152600d60205260409020546001600160a01b031615611b735786611b75565b805b9650611b83838389876121a9565b600085815260096020526040902054611ba2908563ffffffff611fae16565b600086815260096020526040902055600154611bc4908563ffffffff611fae16565b60015560008581526009602052604090205415611be2576000611be5565b60015b60008b815260076020908152604091829020805460ff19169315159390931790925580516001600160a01b038c811682529281018d90528082018a9052606081018790529051918a16917f6d7aac54bd3d1c91db3b1fd7b8d6cb45324ad6b5e373c0f0ea4d7b2606c4c2c8916080908290030190a2505060016000555050505050505050505050565b60009081526007602052604090205460ff1690565b600060026000541415611ccb576040805162461bcd60e51b815260206004820152601f6024820152600080516020612490833981519152604482015290519081900360640190fd5b6002600081905550600360009054906101000a90046001600160a01b03166001600160a01b031663695ef6f98d8d6040518060c001604052808f60001c81526020018e60001c81526020018d6001600160a01b031681526020018c6001600160a01b031681526020018b81526020018a8152506040518463ffffffff1660e01b8152600401808060200183600660200280838360005b83811015611d79578181015183820152602001611d61565b505050509050018281038252858582818152602001925080828437600081840152601f19601f820116905080830192505050945050505050602060405180830381600087803b158015611dcb57600080fd5b505af1158015611ddf573d6000803e3d6000fd5b505050506040513d6020811015611df557600080fd5b5051611e41576040805162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b604482015290519081900360640190fd5b6040518060e0016040528084848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093855250506001602080850191909152426040808601919091526001600160a01b03808f1660608701528d1660808601523360a086015260c09094018a90528883526011815292909120835180519193611edd935084929101906123f7565b5060208201516001828101805460ff191660ff909316929092179091556040830151600283015560608301516003830180546001600160a01b03199081166001600160a01b03938416179091556080850151600485018054831691841691909117905560a0850151600585018054909216921691909117905560c09092015160069091015560128054808301825560008281527fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec3444909101969096555494555050506000190198975050505050505050565b600082821115612005576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b60008481526008602052604090205460ff16156120595760405162461bcd60e51b81526004018080602001828103825260218152602001806126366021913960400191505060405180910390fd5b600061206486612356565b6000858152600860209081526040808320805460ff199081166001908117909255600984528285208b9055600a9093529220805460ff8816921682179055146120ad57336120af565b825b6000868152600b6020526040902080546001600160a01b0319166001600160a01b03929092169190911790554282106120e857816120ea565b425b6000868152600c602052604090205560015461210c908763ffffffff61239616565b600155600254612122908763ffffffff61239616565b6002556040805163ffffffff8316815242602082015260ff8616818301526001600160a01b038516606082015260808101849052905186917ff052b28ca720e670068c23c54488dc5b4db3ed42fde7c3fd2d0ea7aee06406eb919081900360a00190a2505050505050565b6000600f546127106010548402816121a157fe5b040192915050565b34156121e65760405162461bcd60e51b815260040180806020018281038252603581526020018061270c6035913960400191505060405180910390fd5b80156122235760405162461bcd60e51b81526004018080602001828103825260348152602001806125ac6034913960400191505060405180910390fd5b6006546040516000916001600160a01b0387169190859003908381818185875af1925050503d8060008114612274576040519150601f19603f3d011682016040523d82523d6000602084013e612279565b606091505b50509050806122b95760405162461bcd60e51b815260040180806020018281038252602581526020018061267b6025913960400191505060405180910390fd5b821561234f576040516001600160a01b038516908490600081818185875af1925050503d8060008114612308576040519150601f19603f3d011682016040523d82523d6000602084013e61230d565b606091505b5050809150508061234f5760405162461bcd60e51b81526004018080602001828103825260238152602001806126a06023913960400191505060405180910390fd5b5050505050565b6006543414610c435760405162461bcd60e51b81526004018080602001828103825260388152602001806124d66038913960400191505060405180910390fd5b6000828201838110156123f0576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061243857805160ff1916838001178555612465565b82800160010185558215612465579182015b8281111561246557825182559160200191906001019061244a565b50612471929150612475565b5090565b61096b91905b80821115612471576000815560010161247b56fe5265656e7472616e637947756172643a207265656e7472616e742063616c6c00546865726520617265206f6e6c79203220636865717565207374617475733a2030206f722031506c656173652073656e6420606d697844656e6f6d696e6174696f6e602045544820616c6f6e672077697468207472616e73616374696f6e526563697069656e74206973206e6f7420746865206f726967696e616c20726563697069656e74546865206e657720636f6d6d69746d656e7420686173206265656e207375626d6974746564526566756e6420616d6f756e742073686f756c64206265206d6f7265207468616e20666565546865206465706f736974206973206c6f636b656420756e74696c207468652065666665637469766554696d65526566756e642076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e63654f6e6c7920636f756e63696c206163636f756e742063616e2063616c6c20746869732066756e6374696f6e2e546865206665652063616e206e6f74206265206d6f7265207468616e20726566756e6420616d6f756e7454686520636f6d6d69746d656e7420686173206265656e207375626d69747465644f6e6c792072656c617965722063616e2063616c6c20746869732066756e6374696f6e2e7061796d656e7420746f205f726563697069656e7420646964206e6f7420676f20746872757061796d656e7420746f205f72656c6179657220646964206e6f7420676f20746872754f6e6c79206f70657261746f722063616e2063616c6c20746869732066756e6374696f6e2e53656e646572206973206e6f7420746865206f726967696e616c20726563697069656e744d6573736167652076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365a265627a7a72315820f54c9b056d91a2fbf5fb3cdbf051954ae9450d4ecc1610ba451f7fae1ebddb4764736f6c6343000511003264656e6f6d696e6174696f6e2073686f756c642062652067726561746572207468616e2030",
  "deployedBytecode": "0x6080604052600436106101665760003560e01c8063807c7ba3116100d1578063a8be3cd61161008a578063bbe9cd8c11610064578063bbe9cd8c146106f9578063da90803914610729578063e5285dcc146107c9578063eece3bd51461080757610166565b8063a8be3cd6146105db578063ac7475ed146106b1578063ad7a672f146106e457610166565b8063807c7ba3146103bb578063827a2600146103e55780638bca6d161461049557806397fc007c146104aa5780639fa12d0b146104dd578063a4cab45c146105a857610166565b80634d10b2fb116101235780634d10b2fb1461023f57806354b45fc314610254578063570ca735146102875780635c64ae911461029c57806362bc0cd61461037c57806377b9de8e1461039157610166565b806315d232db1461016b5780631a39d8ef1461019c578063266c0aa7146101c35780632b7ac3f31461020057806335795ea7146102155780634adf3d151461022a575b600080fd5b34801561017757600080fd5b506101806108fc565b604080516001600160a01b039092168252519081900360200190f35b3480156101a857600080fd5b506101b161096e565b60408051918252519081900360200190f35b3480156101cf57600080fd5b506101fe600480360360408110156101e657600080fd5b506001600160a01b0381358116916020013516610974565b005b34801561020c57600080fd5b506101806109eb565b34801561022157600080fd5b506101b16109fa565b34801561023657600080fd5b506101b1610a00565b34801561024b57600080fd5b50610180610a06565b34801561026057600080fd5b506101fe6004803603602081101561027757600080fd5b50356001600160a01b0316610a15565b34801561029357600080fd5b50610180610a80565b3480156102a857600080fd5b506102c6600480360360208110156102bf57600080fd5b5035610a8f565b6040805160ff88166020808301919091529181018790526001600160a01b0380871660608301528581166080830152841660a082015260c0810183905260e08082528951908201528851909182916101008301918b019080838360005b8381101561033b578181015183820152602001610323565b50505050905090810190601f1680156103685780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b34801561038857600080fd5b50610180610b68565b34801561039d57600080fd5b506101fe600480360360208110156103b457600080fd5b5035610b77565b3480156103c757600080fd5b506101b1600480360360208110156103de57600080fd5b5035610c46565b6101fe60048036036101408110156103fc57600080fd5b810190602081018135600160201b81111561041657600080fd5b82018360208201111561042857600080fd5b803590602001918460018302840111600160201b8311171561044957600080fd5b91935091508035906020810135906001600160a01b03604082013581169160608101359091169060ff6080820135169060a08101359060c08101359060e0810135906101000135610c64565b3480156104a157600080fd5b506101b16112f7565b3480156104b657600080fd5b506101fe600480360360208110156104cd57600080fd5b50356001600160a01b03166112fd565b3480156104e957600080fd5b506105586004803603602081101561050057600080fd5b810190602081018135600160201b81111561051a57600080fd5b82018360208201111561052c57600080fd5b803590602001918460208302840111600160201b8311171561054d57600080fd5b509092509050611368565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561059457818101518382015260200161057c565b505050509050019250505060405180910390f35b3480156105b457600080fd5b506101fe600480360360208110156105cb57600080fd5b50356001600160a01b03166113f0565b6101fe600480360360a08110156105f157600080fd5b810190602081018135600160201b81111561060b57600080fd5b82018360208201111561061d57600080fd5b803590602001918460208302840111600160201b8311171561063e57600080fd5b919390929091602081019035600160201b81111561065b57600080fd5b82018360208201111561066d57600080fd5b803590602001918460208302840111600160201b8311171561068e57600080fd5b919350915060ff813516906001600160a01b03602082013516906040013561145b565b3480156106bd57600080fd5b506101fe600480360360208110156106d457600080fd5b50356001600160a01b031661155a565b3480156106f057600080fd5b506101b16115c5565b34801561070557600080fd5b506101fe6004803603604081101561071c57600080fd5b50803590602001356115cb565b6101fe600480360361010081101561074057600080fd5b810190602081018135600160201b81111561075a57600080fd5b82018360208201111561076c57600080fd5b803590602001918460018302840111600160201b8311171561078d57600080fd5b91935091508035906020810135906001600160a01b03604082013581169160608101359091169060808101359060a08101359060c0013561161f565b3480156107d557600080fd5b506107f3600480360360208110156107ec57600080fd5b5035611c6e565b604080519115158252519081900360200190f35b6101b1600480360361012081101561081e57600080fd5b810190602081018135600160201b81111561083857600080fd5b82018360208201111561084a57600080fd5b803590602001918460018302840111600160201b8311171561086b57600080fd5b919390928235926020810135926001600160a01b03604083013581169360608401359091169260808101359260a08201359260c08301359261010081019060e00135600160201b8111156108be57600080fd5b8201836020820111156108d057600080fd5b803590602001918460018302840111600160201b831117156108f157600080fd5b509092509050611c83565b336000908152600d60205260408120546001600160a01b03166109505760405162461bcd60e51b81526004018080602001828103825260248152602001806126576024913960400191505060405180910390fd5b50336000908152600d60205260409020546001600160a01b03165b90565b60015481565b6004546001600160a01b031633146109bd5760405162461bcd60e51b81526004018080602001828103825260258152602001806126c36025913960400191505060405180910390fd5b6001600160a01b039182166000908152600d6020526040902080546001600160a01b03191691909216179055565b6003546001600160a01b031681565b600f5481565b60105481565b600e546001600160a01b031681565b6004546001600160a01b03163314610a5e5760405162461bcd60e51b81526004018080602001828103825260258152602001806126c36025913960400191505060405180910390fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b031681565b60116020908152600091825260409182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452909291839190830182828015610b265780601f10610afb57610100808354040283529160200191610b26565b820191906000526020600020905b815481529060010190602001808311610b0957829003601f168201915b50505060018401546002850154600386015460048701546005880154600690980154969760ff909416969295506001600160a01b039182169450811692169087565b6005546001600160a01b031681565b6005546001600160a01b03163314610bc05760405162461bcd60e51b815260040180806020018281038252602c8152602001806125e0602c913960400191505060405180910390fd5b6011600060128381548110610bd157fe5b60009182526020808320909101548352820192909252604001902060019081015460ff161415610c435760026011600060128481548110610c0e57fe5b9060005260206000200154815260200190815260200160002060010160006101000a81548160ff021916908360ff1602179055505b50565b60128181548110610c5357fe5b600091825260209091200154905081565b60026000541415610caa576040805162461bcd60e51b815260206004820152601f6024820152600080516020612490833981519152604482015290519081900360640190fd5b6002600090815583815260116020526040902060019081015460ff161415610d13576040805162461bcd60e51b8152602060048201526017602482015276151a1a5cc819195c1bdcda5d081dd85cc81b1bd8dad959604a1b604482015290519081900360640190fd5b60008381526008602052604090205460ff16610d76576040805162461bcd60e51b815260206004820152601b60248201527f4f6c6420636f6d6d69746d656e742063616e206e6f742066696e640000000000604482015290519081900360640190fd5b60008281526008602052604090205460ff1615610dc45760405162461bcd60e51b81526004018080602001828103825260258152602001806125356025913960400191505060405180910390fd5b60008881526007602052604090205460ff1615610e28576040805162461bcd60e51b815260206004820152601f60248201527f546865206e6f746520686173206265656e20616c7265616479207370656e7400604482015290519081900360640190fd5b600083815260096020526040902054610e88576040805162461bcd60e51b815260206004820152601f60248201527f4e6f2062616c616e636520616d6f756e74206f6620746869732070726f6f6600604482015290519081900360640190fd5b6000838152600960205260408120548510610eb157600084815260096020526040902054610eb3565b845b905060008111610f0a576040805162461bcd60e51b815260206004820152601d60248201527f526566756e6420616d6f756e742063616e206e6f74206265207a65726f000000604482015290519081900360640190fd5b6000848152600a602052604090205460ff166001148015610f4157506000848152600b60205260409020546001600160a01b031633145b80610f5b57506000848152600a602052604090205460ff16155b610f965760405162461bcd60e51b81526004018080602001828103825260248152602001806126e86024913960400191505060405180910390fd5b600360009054906101000a90046001600160a01b03166001600160a01b031663695ef6f98d8d6040518060c001604052808f60001c81526020018e60001c81526020018d6001600160a01b031681526020018c6001600160a01b031681526020018b60ff1681526020018a8152506040518463ffffffff1660e01b8152600401808060200183600660200280838360005b8381101561103f578181015183820152602001611027565b505050509050018281038252858582818152602001925080828437600081840152601f19601f820116905080830192505050945050505050602060405180830381600087803b15801561109157600080fd5b505af11580156110a5573d6000803e3d6000fd5b505050506040513d60208110156110bb57600080fd5b505161110e576040805162461bcd60e51b815260206004820152601960248201527f496e76616c696420656e646f7273656d656e742070726f6f6600000000000000604482015290519081900360640190fd5b6000821580159061112d57506000858152600c60205260409020544210155b15611148576000848152600c6020526040902083905561115f565b6000858152600c6020526040808220548683529120555b6000848152600860209081526040808320805460ff199081166001908117909255600984528285208b9055600a9093529220805460ff8b16921682179055146111a857336111aa565b885b6000858152600b6020908152604080832080546001600160a01b0319166001600160a01b0395909516949094179093558782526009905220546111ed9083611fae565b60008681526009602052604090208190551561120a57600061120d565b60015b60008b815260076020908152604091829020805493151560ff1990941693909317909255805163ffffffff84168152429281019290925260ff8916828201526001600160a01b038b166060830152608082018590525185917ff052b28ca720e670068c23c54488dc5b4db3ed42fde7c3fd2d0ea7aee06406eb919081900360a00190a2604080516000808252602082018d9052818301526060810184905290516001600160a01b038a16917f6d7aac54bd3d1c91db3b1fd7b8d6cb45324ad6b5e373c0f0ea4d7b2606c4c2c8919081900360800190a2505060016000555050505050505050505050565b60065481565b6004546001600160a01b031633146113465760405162461bcd60e51b81526004018080602001828103825260258152602001806126c36025913960400191505060405180910390fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b604080518281526020808402820101909152606090828015611394578160200160208202803883390190505b50905060005b828110156113e9576113bd8484838181106113b157fe5b90506020020135611c6e565b156113e15760018282815181106113d057fe5b911515602092830291909101909101525b60010161139a565b5092915050565b6004546001600160a01b031633146114395760405162461bcd60e51b81526004018080602001828103825260258152602001806126c36025913960400191505060405180910390fd5b600e80546001600160a01b0319166001600160a01b0392909216919091179055565b600260005414156114a1576040805162461bcd60e51b815260206004820152601f6024820152600080516020612490833981519152604482015290519081900360640190fd5b600260005560ff831615806114b957508260ff166001145b6114f45760405162461bcd60e51b81526004018080602001828103825260268152602001806124b06026913960400191505060405180910390fd5b6001600160a01b03821661150757600080fd5b60005b8681101561154b5761154388888381811061152157fe5b9050602002013587878481811061153457fe5b9050602002013586868661200b565b60010161150a565b50506001600055505050505050565b6004546001600160a01b031633146115a35760405162461bcd60e51b81526004018080602001828103825260258152602001806126c36025913960400191505060405180910390fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b60025481565b6004546001600160a01b031633146116145760405162461bcd60e51b81526004018080602001828103825260258152602001806126c36025913960400191505060405180910390fd5b600f91909155601055565b60026000541415611665576040805162461bcd60e51b815260206004820152601f6024820152600080516020612490833981519152604482015290519081900360640190fd5b6002600090815581815260116020526040902060019081015460ff1614156116ce576040805162461bcd60e51b8152602060048201526017602482015276151a1a5cc819195c1bdcda5d081dd85cc81b1bd8dad959604a1b604482015290519081900360640190fd5b60008681526007602052604090205460ff1615611732576040805162461bcd60e51b815260206004820152601f60248201527f546865206e6f746520686173206265656e20616c7265616479207370656e7400604482015290519081900360640190fd5b6000818152600a602052604090205460ff16600114801561176c57506000818152600b60205260409020546001600160a01b038681169116145b8061178657506000818152600a602052604090205460ff16155b6117c15760405162461bcd60e51b815260040180806020018281038252602781526020018061250e6027913960400191505060405180910390fd5b600081815260096020526040902054611821576040805162461bcd60e51b815260206004820152601f60248201527f4e6f2062616c616e636520616d6f756e74206f6620746869732070726f6f6600604482015290519081900360640190fd5b600081815260096020526040812054831061184a5760008281526009602052604090205461184c565b825b9050600081116118a3576040805162461bcd60e51b815260206004820152601d60248201527f526566756e6420616d6f756e742063616e206e6f74206265207a65726f000000604482015290519081900360640190fd5b6000828152600c60205260409020544210156118f05760405162461bcd60e51b815260040180806020018281038252602d81526020018061257f602d913960400191505060405180910390fd5b8381101561192f5760405162461bcd60e51b815260040180806020018281038252602581526020018061255a6025913960400191505060405180910390fd5b6003546040805160c080820183528b8252602082018b90526001600160a01b038a81168385015289811660608401526080830189905260a08301889052925163695ef6f960e01b8152929093169263695ef6f9928e928e9290916004810191829160240190849080838360005b838110156119b457818101518382015260200161199c565b505050509050018281038252858582818152602001925080828437600081840152601f19601f820116905080830192505050945050505050602060405180830381600087803b158015611a0657600080fd5b505af1158015611a1a573d6000803e3d6000fd5b505050506040513d6020811015611a3057600080fd5b5051611a7c576040805162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b604482015290519081900360640190fd5b6000828152600a602052604081205460ff16600114611a9b5786611ab4565b6000838152600b60205260409020546001600160a01b03165b336000908152600d6020526040812054919250906001600160a01b031615611af457336000908152600d60205260409020546001600160a01b0316611b01565b600e546001600160a01b03165b90506000611b0e8461218d565b905083811115611b4f5760405162461bcd60e51b815260040180806020018281038252602a81526020018061260c602a913960400191505060405180910390fd5b336000908152600d60205260409020546001600160a01b031615611b735786611b75565b805b9650611b83838389876121a9565b600085815260096020526040902054611ba2908563ffffffff611fae16565b600086815260096020526040902055600154611bc4908563ffffffff611fae16565b60015560008581526009602052604090205415611be2576000611be5565b60015b60008b815260076020908152604091829020805460ff19169315159390931790925580516001600160a01b038c811682529281018d90528082018a9052606081018790529051918a16917f6d7aac54bd3d1c91db3b1fd7b8d6cb45324ad6b5e373c0f0ea4d7b2606c4c2c8916080908290030190a2505060016000555050505050505050505050565b60009081526007602052604090205460ff1690565b600060026000541415611ccb576040805162461bcd60e51b815260206004820152601f6024820152600080516020612490833981519152604482015290519081900360640190fd5b6002600081905550600360009054906101000a90046001600160a01b03166001600160a01b031663695ef6f98d8d6040518060c001604052808f60001c81526020018e60001c81526020018d6001600160a01b031681526020018c6001600160a01b031681526020018b81526020018a8152506040518463ffffffff1660e01b8152600401808060200183600660200280838360005b83811015611d79578181015183820152602001611d61565b505050509050018281038252858582818152602001925080828437600081840152601f19601f820116905080830192505050945050505050602060405180830381600087803b158015611dcb57600080fd5b505af1158015611ddf573d6000803e3d6000fd5b505050506040513d6020811015611df557600080fd5b5051611e41576040805162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b604482015290519081900360640190fd5b6040518060e0016040528084848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093855250506001602080850191909152426040808601919091526001600160a01b03808f1660608701528d1660808601523360a086015260c09094018a90528883526011815292909120835180519193611edd935084929101906123f7565b5060208201516001828101805460ff191660ff909316929092179091556040830151600283015560608301516003830180546001600160a01b03199081166001600160a01b03938416179091556080850151600485018054831691841691909117905560a0850151600585018054909216921691909117905560c09092015160069091015560128054808301825560008281527fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec3444909101969096555494555050506000190198975050505050505050565b600082821115612005576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b60008481526008602052604090205460ff16156120595760405162461bcd60e51b81526004018080602001828103825260218152602001806126366021913960400191505060405180910390fd5b600061206486612356565b6000858152600860209081526040808320805460ff199081166001908117909255600984528285208b9055600a9093529220805460ff8816921682179055146120ad57336120af565b825b6000868152600b6020526040902080546001600160a01b0319166001600160a01b03929092169190911790554282106120e857816120ea565b425b6000868152600c602052604090205560015461210c908763ffffffff61239616565b600155600254612122908763ffffffff61239616565b6002556040805163ffffffff8316815242602082015260ff8616818301526001600160a01b038516606082015260808101849052905186917ff052b28ca720e670068c23c54488dc5b4db3ed42fde7c3fd2d0ea7aee06406eb919081900360a00190a2505050505050565b6000600f546127106010548402816121a157fe5b040192915050565b34156121e65760405162461bcd60e51b815260040180806020018281038252603581526020018061270c6035913960400191505060405180910390fd5b80156122235760405162461bcd60e51b81526004018080602001828103825260348152602001806125ac6034913960400191505060405180910390fd5b6006546040516000916001600160a01b0387169190859003908381818185875af1925050503d8060008114612274576040519150601f19603f3d011682016040523d82523d6000602084013e612279565b606091505b50509050806122b95760405162461bcd60e51b815260040180806020018281038252602581526020018061267b6025913960400191505060405180910390fd5b821561234f576040516001600160a01b038516908490600081818185875af1925050503d8060008114612308576040519150601f19603f3d011682016040523d82523d6000602084013e61230d565b606091505b5050809150508061234f5760405162461bcd60e51b81526004018080602001828103825260238152602001806126a06023913960400191505060405180910390fd5b5050505050565b6006543414610c435760405162461bcd60e51b81526004018080602001828103825260388152602001806124d66038913960400191505060405180910390fd5b6000828201838110156123f0576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061243857805160ff1916838001178555612465565b82800160010185558215612465579182015b8281111561246557825182559160200191906001019061244a565b50612471929150612475565b5090565b61096b91905b80821115612471576000815560010161247b56fe5265656e7472616e637947756172643a207265656e7472616e742063616c6c00546865726520617265206f6e6c79203220636865717565207374617475733a2030206f722031506c656173652073656e6420606d697844656e6f6d696e6174696f6e602045544820616c6f6e672077697468207472616e73616374696f6e526563697069656e74206973206e6f7420746865206f726967696e616c20726563697069656e74546865206e657720636f6d6d69746d656e7420686173206265656e207375626d6974746564526566756e6420616d6f756e742073686f756c64206265206d6f7265207468616e20666565546865206465706f736974206973206c6f636b656420756e74696c207468652065666665637469766554696d65526566756e642076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e63654f6e6c7920636f756e63696c206163636f756e742063616e2063616c6c20746869732066756e6374696f6e2e546865206665652063616e206e6f74206265206d6f7265207468616e20726566756e6420616d6f756e7454686520636f6d6d69746d656e7420686173206265656e207375626d69747465644f6e6c792072656c617965722063616e2063616c6c20746869732066756e6374696f6e2e7061796d656e7420746f205f726563697069656e7420646964206e6f7420676f20746872757061796d656e7420746f205f72656c6179657220646964206e6f7420676f20746872754f6e6c79206f70657261746f722063616e2063616c6c20746869732066756e6374696f6e2e53656e646572206973206e6f7420746865206f726967696e616c20726563697069656e744d6573736167652076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365a265627a7a72315820f54c9b056d91a2fbf5fb3cdbf051954ae9450d4ecc1610ba451f7fae1ebddb4764736f6c63430005110032",
  "sourceMap": "693:994:3:-;;;988:1:13;959:30;;1052:1;1022:31;;2045:1;2018:28;;2263:1;2232:32;;730:209:3;8:9:-1;5:2;;;30:1;27;20:12;5:2;730:209:3;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;730:209:3;;;;;;;;;;;;;;;1629:1:10;1744:7;:22;730:209:3;;;;;;;;3703:17:13;3695:67;;;;-1:-1:-1;;;3695:67:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3772:8;:20;;-1:-1:-1;;;;;3772:20:13;;;-1:-1:-1;;;;;;3772:20:13;;;;;;;3802:8;:20;;;;;;;;;;;;;;;3832:12;:28;;;;3870:21;:46;;;;;;;;;;;-1:-1:-1;;;;693:994:3;;;;;;",
  "deployedSourceMap": "693:994:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13917:124:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13917:124:13;;;:::i;:::-;;;;-1:-1:-1;;;;;13917:124:13;;;;;;;;;;;;;;959:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;959:30:13;;;:::i;:::-;;;;;;;;;;;;;;;;13717:143;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13717:143:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;13717:143:13;;;;;;;;;;:::i;:::-;;1104:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1104:25:13;;;:::i;2018:28::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2018:28:13;;;:::i;2232:32::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2232:32:13;;;:::i;1880:36::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1880:36:13;;;:::i;14296:117::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14296:117:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14296:117:13;-1:-1:-1;;;;;14296:117:13;;:::i;1295:23::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1295:23:13;;;:::i;2533:48::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2533:48:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2533:48:13;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2533:48:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2533:48:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1324:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1324:29:13;;;:::i;15489:163::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15489:163:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15489:163:13;;:::i;2587:32::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2587:32:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2587:32:13;;:::i;9945:2636::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;9945:2636:13;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;9945:2636:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;9945:2636:13;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;9945:2636:13;;-1:-1:-1;9945:2636:13;-1:-1:-1;9945:2636:13;;;;;;;;-1:-1:-1;;;;;9945:2636:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1360:27::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1360:27:13;;;:::i;13389:119::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13389:119:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13389:119:13;-1:-1:-1;;;;;13389:119:13;;:::i;12826:327::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12826:327:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12826:327:13;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;12826:327:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;12826:327:13;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;12826:327:13;;-1:-1:-1;12826:327:13;-1:-1:-1;12826:327:13;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12826:327:13;;;;;;;;;;;;;;;;;14096:154;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14096:154:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14096:154:13;-1:-1:-1;;;;;14096:154:13;;:::i;4289:506::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4289:506:13;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;4289:506:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4289:506:13;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;4289:506:13;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;4289:506:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4289:506:13;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;4289:506:13;;-1:-1:-1;4289:506:13;-1:-1:-1;4289:506:13;;;;;-1:-1:-1;;;;;4289:506:13;;;;;;;;;;:::i;13562:108::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13562:108:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13562:108:13;-1:-1:-1;;;;;13562:108:13;;:::i;1022:31::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1022:31:13;;;:::i;15706:140::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15706:140:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15706:140:13;;;;;;;:::i;6812:2202::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;6812:2202:13;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;6812:2202:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6812:2202:13;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6812:2202:13;;-1:-1:-1;6812:2202:13;-1:-1:-1;6812:2202:13;;;;;;;;-1:-1:-1;;;;;6812:2202:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;12639:122::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12639:122:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12639:122:13;;:::i;:::-;;;;;;;;;;;;;;;;;;14505:929;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;14505:929:13;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;14505:929:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14505:929:13;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14505:929:13;;;;;;;;;;;;-1:-1:-1;;;;;14505:929:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;14505:929:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14505:929:13;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;14505:929:13;;-1:-1:-1;14505:929:13;-1:-1:-1;14505:929:13;:::i;13917:124::-;2802:10;13988:7;2793:20;;;:8;:20;;;;;;-1:-1:-1;;;;;2793:20:13;2785:85;;;;-1:-1:-1;;;2785:85:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14023:10:13;14014:20;;;;:8;:20;;;;;;-1:-1:-1;;;;;14014:20:13;2880:1;13917:124;:::o;959:30::-;;;;:::o;13717:143::-;2680:8;;-1:-1:-1;;;;;2680:8:13;2666:10;:22;2658:72;;;;-1:-1:-1;;;2658:72:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13816:18:13;;;;;;;:8;:18;;;;;:37;;-1:-1:-1;;;;;;13816:37:13;;;;;;;;13717:143::o;1104:25::-;;;-1:-1:-1;;;;;1104:25:13;;:::o;2018:28::-;;;;:::o;2232:32::-;;;;:::o;1880:36::-;;;-1:-1:-1;;;;;1880:36:13;;:::o;14296:117::-;2680:8;;-1:-1:-1;;;;;2680:8:13;2666:10;:22;2658:72;;;;-1:-1:-1;;;2658:72:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14374:14;:32;;-1:-1:-1;;;;;;14374:32:13;-1:-1:-1;;;;;14374:32:13;;;;;;;;;;14296:117::o;1295:23::-;;;-1:-1:-1;;;;;1295:23:13;;:::o;2533:48::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2533:48:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2533:48:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2533:48:13;;;;-1:-1:-1;2533:48:13;;;;;;:::o;1324:29::-;;;-1:-1:-1;;;;;1324:29:13;;:::o;15489:163::-;2951:14;;-1:-1:-1;;;;;2951:14:13;2937:10;:28;2929:85;;;;-1:-1:-1;;;2929:85:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15558:10;:31;15569:15;15585:2;15569:19;;;;;;;;;;;;;;;;;;;;15558:31;;;;;;;;;;;;:38;;;;;;;:43;15555:90;;;15644:1;15603:10;:31;15614:15;15630:2;15614:19;;;;;;;;;;;;;;;;15603:31;;;;;;;;;;;:38;;;:42;;;;;;;;;;;;;;;;;;15555:90;15489:163;:::o;2587:32::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2587:32:13;:::o;9945:2636::-;1672:1:10;2261:7;;:19;;2253:63;;;;;-1:-1:-1;;;2253:63:10;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2253:63:10;;;;;;;;;;;;;;;1672:1;2391:7;:18;;;10551:26:13;;;:10;:26;;;;;:33;;;;;;;:38;;10543:74;;;;;-1:-1:-1;;;10543:74:13;;;;;;;;;;;;-1:-1:-1;;;10543:74:13;;;;;;;;;;;;;;;10635:27;;;;:11;:27;;;;;;;;10627:67;;;;;-1:-1:-1;;;10627:67:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;10713:27;;;;:11;:27;;;;;;;;10712:28;10704:78;;;;-1:-1:-1;;;10704:78:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10801:31;;;;:15;:31;;;;;;;;10800:32;10792:76;;;;;-1:-1:-1;;;10792:76:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;10912:1;10886:23;;;:7;:23;;;;;;10878:71;;;;;-1:-1:-1;;;10878:71:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;10959:20;10992:23;;;:7;:23;;;;;;10982:33;;:69;;11028:23;;;;:7;:23;;;;;;10982:69;;;11018:7;10982:69;10959:92;;11111:1;11096:12;:16;11088:58;;;;;-1:-1:-1;;;11088:58:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;11165:29;;;;:13;:29;;;;;;;;;:34;:78;;;;-1:-1:-1;11217:26:13;;;;:10;:26;;;;;;-1:-1:-1;;;;;11217:26:13;11203:10;:40;11165:78;11164:118;;;-1:-1:-1;11248:29:13;;;;:13;:29;;;;;;;;:34;11164:118;11156:168;;;;-1:-1:-1;;;11156:168:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11343:8;;;;;;;;;-1:-1:-1;;;;;11343:8:13;-1:-1:-1;;;;;11343:20:13;;11364:6;;11343:228;;;;;;;;11394:5;11386:14;;11343:228;;;;11423:14;11415:23;;11343:228;;;;11461:10;-1:-1:-1;;;;;11453:19:13;11343:228;;;;11494:8;-1:-1:-1;;;;;11486:17:13;11343:228;;;;11526:12;11518:21;;11343:228;;;;11553:7;11343:228;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;11343:228:13;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;11343:228:13;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11343:228:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11343:228:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11343:228:13;11335:266;;;;;-1:-1:-1;;;11335:266:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;11651:20;11714:18;;;;;:71;;-1:-1:-1;11755:30:13;;;;:14;:30;;;;;;11736:15;:49;;11714:71;11711:214;;;11787:30;;;;:14;:30;;;;;:47;;;11711:214;;;11895:30;;;;:14;:30;;;;;;;11862;;;;;:63;11711:214;11961:27;;;;:11;:27;;;;;;;;:34;;-1:-1:-1;;11961:34:13;;;11991:4;11961:34;;;;;;12005:7;:23;;;;;:33;;;12048:13;:29;;;;;:44;;11961:34;12048:44;;;;;;;;12131:17;:43;;12164:10;12131:43;;;12151:10;12131:43;12102:26;;;;:10;:26;;;;;;;;:72;;-1:-1:-1;;;;;;12102:72:13;-1:-1:-1;;;;;12102:72:13;;;;;;;;;;;12243:23;;;:7;:23;;;;:41;;12271:12;12243:27;:41::i;:::-;12217:23;;;;:7;:23;;;;;:67;;;12328:28;:43;;12366:5;12328:43;;;12359:4;12328:43;12294:31;;;;:15;:31;;;;;;;;;:77;;;;;-1:-1:-1;;12294:77:13;;;;;;;;;;12395:97;;;;;;;12434:15;12395:97;;;;;;;12294:77;12395:97;;;;;;-1:-1:-1;;;;;12395:97:13;;;;;;;;;;;;;12403:14;;12395:97;;;;;;;;;;12507:67;;;12526:3;12507:67;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12507:67:13;;;;;;;;;;;;;-1:-1:-1;;1629:1:10;2564:7;:22;-1:-1:-1;;;;;;;;;;;9945:2636:13:o;1360:27::-;;;;:::o;13389:119::-;2680:8;;-1:-1:-1;;;;;2680:8:13;2666:10;:22;2658:72;;;;-1:-1:-1;;;2658:72:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13467:8;:34;;-1:-1:-1;;;;;;13467:34:13;-1:-1:-1;;;;;13467:34:13;;;;;;;;;;13389:119::o;12826:327::-;12946:35;;;;;;;;;;;;;;;;12907:19;;12957:16;12946:35;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;12946:35:13;-1:-1:-1;12938:43:13;-1:-1:-1;12995:6:13;12991:156;13007:27;;;12991:156;;;13059:28;13067:16;;13084:1;13067:19;;;;;;;;;;;;;13059:7;:28::i;:::-;13055:82;;;13118:4;13107:5;13113:1;13107:8;;;;;;;;:15;;;:8;;;;;;;;;;;:15;13055:82;13036:3;;12991:156;;;;12826:327;;;;:::o;14096:154::-;2680:8;;-1:-1:-1;;;;;2680:8:13;2666:10;:22;2658:72;;;;-1:-1:-1;;;2658:72:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14197:21;:46;;-1:-1:-1;;;;;;14197:46:13;-1:-1:-1;;;;;14197:46:13;;;;;;;;;;14096:154::o;4289:506::-;1672:1:10;2261:7;;:19;;2253:63;;;;;-1:-1:-1;;;2253:63:10;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2253:63:10;;;;;;;;;;;;;;;1672:1;2391:7;:18;4498:17:13;;;;;:38;;;4519:12;:17;;4535:1;4519:17;4498:38;4490:89;;;;-1:-1:-1;;;4490:89:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4597:26:13;;4589:35;;;;;;4643:9;4639:150;4658:19;;;4639:150;;;4698:80;4707:8;;4716:1;4707:11;;;;;;;;;;;;;4720:12;;4733:1;4720:15;;;;;;;;;;;;;4737:12;4751:10;4763:14;4698:8;:80::i;:::-;4679:3;;4639:150;;;-1:-1:-1;;1629:1:10;2564:7;:22;-1:-1:-1;;;;;;4289:506:13:o;13562:108::-;2680:8;;-1:-1:-1;;;;;2680:8:13;2666:10;:22;2658:72;;;;-1:-1:-1;;;2658:72:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13640:8;:23;;-1:-1:-1;;;;;;13640:23:13;-1:-1:-1;;;;;13640:23:13;;;;;;;;;;13562:108::o;1022:31::-;;;;:::o;15706:140::-;2680:8;;-1:-1:-1;;;;;2680:8:13;2666:10;:22;2658:72;;;;-1:-1:-1;;;2658:72:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15792:9;:16;;;;15818:13;:21;15706:140::o;6812:2202::-;1672:1:10;2261:7;;:19;;2253:63;;;;;-1:-1:-1;;;2253:63:10;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2253:63:10;;;;;;;;;;;;;;;1672:1;2391:7;:18;;;7123:23:13;;;:10;:23;;;;;:30;;;;;;;:35;;7115:71;;;;;-1:-1:-1;;;7115:71:13;;;;;;;;;;;;-1:-1:-1;;;7115:71:13;;;;;;;;;;;;;;;7205:31;;;;:15;:31;;;;;;;;7204:32;7196:76;;;;;-1:-1:-1;;;7196:76:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;7291:26;;;;:13;:26;;;;;;;;;:31;:72;;;;-1:-1:-1;7340:23:13;;;;:10;:23;;;;;;-1:-1:-1;;;;;7326:37:13;;;7340:23;;7326:37;7291:72;7290:109;;;-1:-1:-1;7368:26:13;;;;:13;:26;;;;;;;;:31;7290:109;7282:162;;;;-1:-1:-1;;;7282:162:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7485:1;7462:20;;;:7;:20;;;;;;7454:68;;;;;-1:-1:-1;;;7454:68:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;7532:20;7565;;;:7;:20;;;;;;7555:30;;:63;;7598:20;;;;:7;:20;;;;;;7555:63;;;7588:7;7555:63;7532:86;;7678:1;7663:12;:16;7655:58;;;;;-1:-1:-1;;;7655:58:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;7750:27;;;;:14;:27;;;;;;7731:15;:46;;7723:104;;;;-1:-1:-1;;;7723:104:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7861:4;7845:12;:20;;7837:70;;;;-1:-1:-1;;;7837:70:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7926:8;;:212;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8035:19:13;;;7926:212;;;;8069:17;;;7926:212;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7926:212:13;;:8;;;;;:20;;7947:6;;;;7926:212;;;;;;;;;;;;;;;;:8;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7926:212:13;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7926:212:13;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7926:212:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7926:212:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7926:212:13;7918:247;;;;;-1:-1:-1;;;7918:247:13;;;;;;;;;;;;-1:-1:-1;;;7918:247:13;;;;;;;;;;;;;;;8180:25;8208:26;;;:13;:26;;;;;;;;;:31;:70;;8268:10;8208:70;;;8242:23;;;;:10;:23;;;;;;-1:-1:-1;;;;;8242:23:13;8208:70;8323:10;8288:23;8314:20;;;:8;:20;;;;;;8180:98;;-1:-1:-1;8288:23:13;-1:-1:-1;;;;;8314:20:13;:36;:83;;8386:10;8377:20;;;;:8;:20;;;;;;-1:-1:-1;;;;;8377:20:13;8314:83;;;8353:21;;-1:-1:-1;;;;;8353:21:13;8314:83;8288:109;;8407:13;8423:20;8430:12;8423:6;:20::i;:::-;8407:36;;8470:12;8461:5;:21;;8453:76;;;;-1:-1:-1;;;8453:76:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8555:10;8578:3;8546:20;;;:8;:20;;;;;;-1:-1:-1;;;;;8546:20:13;:36;:51;;8593:4;8546:51;;;8585:5;8546:51;8539:58;;8646:65;8663:9;8674:15;8692:4;8698:12;8646:16;:65::i;:::-;8749:20;;;;:7;:20;;;;;;:38;;8774:12;8749:38;:24;:38;:::i;:::-;8726:20;;;;:7;:20;;;;;:61;8811:11;;:29;;8827:12;8811:29;:15;:29;:::i;:::-;8797:11;:43;8884:20;;;;:7;:20;;;;;;:25;:40;;8919:5;8884:40;;;8912:4;8884:40;8850:31;;;;:15;:31;;;;;;;;;:74;;-1:-1:-1;;8850:74:13;;;;;;;;;;;8939:68;;-1:-1:-1;;;;;8939:68:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1629:1:10;2564:7;:22;-1:-1:-1;;;;;;;;;;;6812:2202:13:o;12639:122::-;12700:4;12723:31;;;:15;:31;;;;;;;;;12639:122::o;14505:929::-;14846:7;1672:1:10;2261:7;;:19;;2253:63;;;;;-1:-1:-1;;;2253:63:10;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2253:63:10;;;;;;;;;;;;;;;1672:1;2391:7;:18;;;;14873:8:13;;;;;;;;;-1:-1:-1;;;;;14873:8:13;-1:-1:-1;;;;;14873:20:13;;14894:6;;14873:212;;;;;;;;14924:5;14916:14;;14873:212;;;;14953:14;14945:23;;14873:212;;;;14990:10;-1:-1:-1;;;;;14982:19:13;14873:212;;;;15024:8;-1:-1:-1;;;;;15016:17:13;14873:212;;;;15048:4;14873:212;;;;15067:7;14873:212;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14873:212:13;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14873:212:13;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14873:212:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14873:212:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14873:212:13;14865:247;;;;;-1:-1:-1;;;14865:247:13;;;;;;;;;;;;-1:-1:-1;;;14865:247:13;;;;;;;;;;;;;;;15157:183;;;;;;;;15181:12;;15157:183;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;-1:-1;15157:183:13;;;-1:-1:-1;;15208:1:13;15157:183;;;;;;;;15224:15;15157:183;;;;;;;;-1:-1:-1;;;;;15157:183:13;;;;;;;;;;;;;15299:10;15157:183;;;;;;;;;;;15131:23;;;:10;:23;;;;;;:209;;;;:23;;:209;;-1:-1:-1;15131:23:13;;:209;;;;:::i;:::-;-1:-1:-1;15131:209:13;;;;;;;;;;-1:-1:-1;;15131:209:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;15131:209:13;;;-1:-1:-1;;;;;15131:209:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15350:15;27:10:-1;;23:18;;;45:23;;-1:-1;15350:33:13;;;;;;;;;;;15400:22;2564::10;;-1:-1:-1;;;;;15400:26:13;;14505:929;-1:-1:-1;;;;;;;;14505:929:13:o;231:179:11:-;289:7;321:1;316;:6;;308:49;;;;;-1:-1:-1;;;308:49:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;379:5:11;;;231:179::o;5340:862:13:-;5496:24;;;;:11;:24;;;;;;;;5495:25;5487:71;;;;-1:-1:-1;;;5487:71:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5569:20;5636:24;5652:7;5636:15;:24::i;:::-;5679;;;;:11;:24;;;;;;;;:31;;-1:-1:-1;;5679:31:13;;;5706:4;5679:31;;;;;;5720:7;:20;;;;;:30;;;5760:13;:26;;;;;:41;;5679:31;5760:41;;;;;;;;5837:17;:43;;5870:10;5837:43;;;5857:10;5837:43;5811:23;;;;:10;:23;;;;;:69;;-1:-1:-1;;;;;;5811:69:13;-1:-1:-1;;;;;5811:69:13;;;;;;;;;;5937:15;5920:32;;:67;;5973:14;5920:67;;;5955:15;5920:67;5890:27;;;;:14;:27;;;;;:97;6011:11;;:24;;6027:7;6011:24;:15;:24;:::i;:::-;5997:11;:38;6060:12;;:25;;6077:7;6060:25;:16;:25;:::i;:::-;6045:12;:40;6101:94;;;;;;;;6137:15;6101:94;;;;;;;;;;;-1:-1:-1;;;;;6101:94:13;;;;;;;;;;;;;;6109:11;;6101:94;;;;;;;;;;5340:862;;;;;;:::o;15909:131::-;15964:7;16024:9;;16016:5;16000:13;;15990:7;:23;:31;;;;;;:43;;15909:131;-1:-1:-1;;15909:131:13:o;1103:582:3:-;1250:9;:14;1242:80;;;;-1:-1:-1;;;1242:80:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1336:12;;1328:77;;;;-1:-1:-1;;;1328:77:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1453:12;;1431:46;;1413:12;;-1:-1:-1;;;;;1431:15:3;;;1453:19;;;;;1413:12;1431:46;1413:12;1431:46;1453:19;1431:15;:46;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;1412:65:3;;;1491:7;1483:57;;;;-1:-1:-1;;;1483:57:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1550:8;;1546:135;;1582:29;;-1:-1:-1;;;;;1582:13:3;;;1602:4;;1582:29;;;;1602:4;1582:13;:29;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;1568:43:3;;;;;1627:7;1619:55;;;;-1:-1:-1;;;1619:55:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1103:582;;;;;:::o;943:156::-;1021:12;;1008:9;:25;1000:94;;;;-1:-1:-1;;;1000:94:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:176:11;107:7;138:5;;;161:6;;;;153:46;;;;;-1:-1:-1;;;153:46:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;217:1;49:176;-1:-1:-1;;;49:176:11:o;693:994:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;693:994:3;;;-1:-1:-1;693:994:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "/**\n *  $$$$$$\\  $$\\                 $$\\                           \n * $$  __$$\\ $$ |                $$ |                          \n * $$ /  \\__|$$$$$$$\\   $$$$$$\\  $$ |  $$\\  $$$$$$\\   $$$$$$\\  \n * \\$$$$$$\\  $$  __$$\\  \\____$$\\ $$ | $$  |$$  __$$\\ $$  __$$\\ \n *  \\____$$\\ $$ |  $$ | $$$$$$$ |$$$$$$  / $$$$$$$$ |$$ |  \\__|\n * $$\\   $$ |$$ |  $$ |$$  __$$ |$$  _$$<  $$   ____|$$ |      \n * \\$$$$$$  |$$ |  $$ |\\$$$$$$$ |$$ | \\$$\\ \\$$$$$$$\\ $$ |      \n *  \\______/ \\__|  \\__| \\_______|\\__|  \\__| \\_______|\\__|\n * $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n * ____________________________________________________________\n*/\n\npragma solidity 0.5.17;\n\nimport \"./ShakerV2.sol\";\n\ncontract ETHShakerV2 is ShakerV2 {\n  constructor(\n    IVerifier _verifier,\n    uint256 _denomination,\n    address _operator,\n    address _commonWithdrawAddress\n  ) ShakerV2(_verifier, _denomination, _operator, _commonWithdrawAddress) public {\n  }\n\n  function _processDeposit(uint256 _amount) internal {\n    require(msg.value == denomination, \"Please send `mixDenomination` ETH along with transaction\");\n  }\n\n  function _processWithdraw(address payable _recipient, address _relayer, uint256 _fee, uint256 _refund) internal {\n    // sanity checks\n    require(msg.value == 0, \"Message value is supposed to be zero for ETH instance\");\n    require(_refund == 0, \"Refund value is supposed to be zero for ETH instance\");\n\n    (bool success, ) = _recipient.call.value(denomination - _fee)(\"\");\n    require(success, \"payment to _recipient did not go thru\");\n    if (_fee > 0) {\n      (success, ) = _relayer.call.value(_fee)(\"\");\n      require(success, \"payment to _relayer did not go thru\");\n    }\n  }\n}\n",
  "sourcePath": "/Users/guqianfeng/web/my_dapps/hunbi/tornado-core/contracts/ETHShakerV2.sol",
  "ast": {
    "absolutePath": "/Users/guqianfeng/web/my_dapps/hunbi/tornado-core/contracts/ETHShakerV2.sol",
    "exportedSymbols": {
      "ETHShakerV2": [
        605
      ]
    },
    "id": 606,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 504,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "642:23:3"
      },
      {
        "absolutePath": "/Users/guqianfeng/web/my_dapps/hunbi/tornado-core/contracts/ShakerV2.sol",
        "file": "./ShakerV2.sol",
        "id": 505,
        "nodeType": "ImportDirective",
        "scope": 606,
        "sourceUnit": 3582,
        "src": "667:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 506,
              "name": "ShakerV2",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3581,
              "src": "717:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ShakerV2_$3581",
                "typeString": "contract ShakerV2"
              }
            },
            "id": 507,
            "nodeType": "InheritanceSpecifier",
            "src": "717:8:3"
          }
        ],
        "contractDependencies": [
          1190,
          3581
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 605,
        "linearizedBaseContracts": [
          605,
          3581,
          1190
        ],
        "name": "ETHShakerV2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 524,
              "nodeType": "Block",
              "src": "934:5:3",
              "statements": []
            },
            "documentation": null,
            "id": 525,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 518,
                    "name": "_verifier",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 509,
                    "src": "866:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVerifier_$2481",
                      "typeString": "contract IVerifier"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 519,
                    "name": "_denomination",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 511,
                    "src": "877:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 520,
                    "name": "_operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 513,
                    "src": "892:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 521,
                    "name": "_commonWithdrawAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 515,
                    "src": "903:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 522,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 517,
                  "name": "ShakerV2",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3581,
                  "src": "857:8:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ShakerV2_$3581_$",
                    "typeString": "type(contract ShakerV2)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "857:69:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 509,
                  "name": "_verifier",
                  "nodeType": "VariableDeclaration",
                  "scope": 525,
                  "src": "747:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVerifier_$2481",
                    "typeString": "contract IVerifier"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 508,
                    "name": "IVerifier",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2481,
                    "src": "747:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVerifier_$2481",
                      "typeString": "contract IVerifier"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 511,
                  "name": "_denomination",
                  "nodeType": "VariableDeclaration",
                  "scope": 525,
                  "src": "772:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 510,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "772:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 513,
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 525,
                  "src": "799:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 512,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "799:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 515,
                  "name": "_commonWithdrawAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 525,
                  "src": "822:30:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 514,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "822:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "741:115:3"
            },
            "returnParameters": {
              "id": 523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "934:0:3"
            },
            "scope": 605,
            "src": "730:209:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 538,
              "nodeType": "Block",
              "src": "994:105:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 531,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5617,
                            "src": "1008:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1008:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 533,
                          "name": "denomination",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2500,
                          "src": "1021:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1008:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506c656173652073656e6420606d697844656e6f6d696e6174696f6e602045544820616c6f6e672077697468207472616e73616374696f6e",
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1035:58:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f304eb3b48ff9764f62a411a9ffb7aa0b97f5844028e285830061a3eb6b03a1",
                          "typeString": "literal_string \"Please send `mixDenomination` ETH along with transaction\""
                        },
                        "value": "Please send `mixDenomination` ETH along with transaction"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f304eb3b48ff9764f62a411a9ffb7aa0b97f5844028e285830061a3eb6b03a1",
                          "typeString": "literal_string \"Please send `mixDenomination` ETH along with transaction\""
                        }
                      ],
                      "id": 530,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5620,
                        5621
                      ],
                      "referencedDeclaration": 5621,
                      "src": "1000:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1000:94:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 537,
                  "nodeType": "ExpressionStatement",
                  "src": "1000:94:3"
                }
              ]
            },
            "documentation": null,
            "id": 539,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processDeposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 527,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 539,
                  "src": "968:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 526,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "968:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "967:17:3"
            },
            "returnParameters": {
              "id": 529,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "994:0:3"
            },
            "scope": 605,
            "src": "943:156:3",
            "stateMutability": "nonpayable",
            "superFunction": 2823,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 603,
              "nodeType": "Block",
              "src": "1215:470:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 551,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5617,
                            "src": "1250:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1250:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1263:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1250:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d6573736167652076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365",
                        "id": 555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1266:55:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb42cba8716e5ef1890027a84a51d30b8a9b3b6aff292fa4436fdfdb093e2b04",
                          "typeString": "literal_string \"Message value is supposed to be zero for ETH instance\""
                        },
                        "value": "Message value is supposed to be zero for ETH instance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb42cba8716e5ef1890027a84a51d30b8a9b3b6aff292fa4436fdfdb093e2b04",
                          "typeString": "literal_string \"Message value is supposed to be zero for ETH instance\""
                        }
                      ],
                      "id": 550,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5620,
                        5621
                      ],
                      "referencedDeclaration": 5621,
                      "src": "1242:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1242:80:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 557,
                  "nodeType": "ExpressionStatement",
                  "src": "1242:80:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 559,
                          "name": "_refund",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 547,
                          "src": "1336:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1347:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1336:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "526566756e642076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365",
                        "id": 562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1350:54:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81ced7081bd66f683c55140bd49cd7b11c81bd1cdd704658426bd50e1bd8ff84",
                          "typeString": "literal_string \"Refund value is supposed to be zero for ETH instance\""
                        },
                        "value": "Refund value is supposed to be zero for ETH instance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81ced7081bd66f683c55140bd49cd7b11c81bd1cdd704658426bd50e1bd8ff84",
                          "typeString": "literal_string \"Refund value is supposed to be zero for ETH instance\""
                        }
                      ],
                      "id": 558,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5620,
                        5621
                      ],
                      "referencedDeclaration": 5621,
                      "src": "1328:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1328:77:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 564,
                  "nodeType": "ExpressionStatement",
                  "src": "1328:77:3"
                },
                {
                  "assignments": [
                    566,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 566,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 603,
                      "src": "1413:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 565,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1413:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 576,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1474:2:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 570,
                            "name": "denomination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2500,
                            "src": "1453:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 571,
                            "name": "_fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 545,
                            "src": "1468:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1453:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 567,
                            "name": "_recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 541,
                            "src": "1431:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "call",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1431:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                          }
                        },
                        "id": 569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1431:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value_$",
                          "typeString": "function (uint256) pure returns (function (bytes memory) payable returns (bool,bytes memory))"
                        }
                      },
                      "id": 573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1431:42:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1431:46:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1412:65:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 578,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 566,
                        "src": "1491:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7061796d656e7420746f205f726563697069656e7420646964206e6f7420676f2074687275",
                        "id": 579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1500:39:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b817ea600508ee7f5bd41bf8aaa06721dfdc08b3c90f6e232639455b89be34a9",
                          "typeString": "literal_string \"payment to _recipient did not go thru\""
                        },
                        "value": "payment to _recipient did not go thru"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b817ea600508ee7f5bd41bf8aaa06721dfdc08b3c90f6e232639455b89be34a9",
                          "typeString": "literal_string \"payment to _recipient did not go thru\""
                        }
                      ],
                      "id": 577,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5620,
                        5621
                      ],
                      "referencedDeclaration": 5621,
                      "src": "1483:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1483:57:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 581,
                  "nodeType": "ExpressionStatement",
                  "src": "1483:57:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 582,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 545,
                      "src": "1550:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1557:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1550:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 602,
                  "nodeType": "IfStatement",
                  "src": "1546:135:3",
                  "trueBody": {
                    "id": 601,
                    "nodeType": "Block",
                    "src": "1560:121:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "id": 585,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 566,
                                "src": "1569:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              null
                            ],
                            "id": 586,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "1568:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$__$",
                              "typeString": "tuple(bool,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "",
                                "id": 592,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1608:2:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 590,
                                  "name": "_fee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 545,
                                  "src": "1602:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 587,
                                    "name": "_relayer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 543,
                                    "src": "1582:8:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 588,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "call",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "1582:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 589,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1582:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value_$",
                                  "typeString": "function (uint256) pure returns (function (bytes memory) payable returns (bool,bytes memory))"
                                }
                              },
                              "id": 591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1582:25:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 593,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1582:29:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "1568:43:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 595,
                        "nodeType": "ExpressionStatement",
                        "src": "1568:43:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 597,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 566,
                              "src": "1627:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "7061796d656e7420746f205f72656c6179657220646964206e6f7420676f2074687275",
                              "id": 598,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1636:37:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d23a9425cb4f79b7ef092634b094eea804c04088be6543a697545fa4aa8c0ef0",
                                "typeString": "literal_string \"payment to _relayer did not go thru\""
                              },
                              "value": "payment to _relayer did not go thru"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d23a9425cb4f79b7ef092634b094eea804c04088be6543a697545fa4aa8c0ef0",
                                "typeString": "literal_string \"payment to _relayer did not go thru\""
                              }
                            ],
                            "id": 596,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              5620,
                              5621
                            ],
                            "referencedDeclaration": 5621,
                            "src": "1619:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1619:55:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 600,
                        "nodeType": "ExpressionStatement",
                        "src": "1619:55:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 604,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processWithdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 541,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 604,
                  "src": "1129:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 540,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1129:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 543,
                  "name": "_relayer",
                  "nodeType": "VariableDeclaration",
                  "scope": 604,
                  "src": "1157:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 542,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1157:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 545,
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 604,
                  "src": "1175:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 544,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1175:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 547,
                  "name": "_refund",
                  "nodeType": "VariableDeclaration",
                  "scope": 604,
                  "src": "1189:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 546,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1189:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1128:77:3"
            },
            "returnParameters": {
              "id": 549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1215:0:3"
            },
            "scope": 605,
            "src": "1103:582:3",
            "stateMutability": "nonpayable",
            "superFunction": 3068,
            "visibility": "internal"
          }
        ],
        "scope": 606,
        "src": "693:994:3"
      }
    ],
    "src": "642:1046:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/guqianfeng/web/my_dapps/hunbi/tornado-core/contracts/ETHShakerV2.sol",
    "exportedSymbols": {
      "ETHShakerV2": [
        605
      ]
    },
    "id": 606,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 504,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "642:23:3"
      },
      {
        "absolutePath": "/Users/guqianfeng/web/my_dapps/hunbi/tornado-core/contracts/ShakerV2.sol",
        "file": "./ShakerV2.sol",
        "id": 505,
        "nodeType": "ImportDirective",
        "scope": 606,
        "sourceUnit": 3582,
        "src": "667:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 506,
              "name": "ShakerV2",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3581,
              "src": "717:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ShakerV2_$3581",
                "typeString": "contract ShakerV2"
              }
            },
            "id": 507,
            "nodeType": "InheritanceSpecifier",
            "src": "717:8:3"
          }
        ],
        "contractDependencies": [
          1190,
          3581
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 605,
        "linearizedBaseContracts": [
          605,
          3581,
          1190
        ],
        "name": "ETHShakerV2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 524,
              "nodeType": "Block",
              "src": "934:5:3",
              "statements": []
            },
            "documentation": null,
            "id": 525,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 518,
                    "name": "_verifier",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 509,
                    "src": "866:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVerifier_$2481",
                      "typeString": "contract IVerifier"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 519,
                    "name": "_denomination",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 511,
                    "src": "877:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 520,
                    "name": "_operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 513,
                    "src": "892:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 521,
                    "name": "_commonWithdrawAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 515,
                    "src": "903:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 522,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 517,
                  "name": "ShakerV2",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3581,
                  "src": "857:8:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ShakerV2_$3581_$",
                    "typeString": "type(contract ShakerV2)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "857:69:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 509,
                  "name": "_verifier",
                  "nodeType": "VariableDeclaration",
                  "scope": 525,
                  "src": "747:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVerifier_$2481",
                    "typeString": "contract IVerifier"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 508,
                    "name": "IVerifier",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2481,
                    "src": "747:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVerifier_$2481",
                      "typeString": "contract IVerifier"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 511,
                  "name": "_denomination",
                  "nodeType": "VariableDeclaration",
                  "scope": 525,
                  "src": "772:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 510,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "772:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 513,
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 525,
                  "src": "799:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 512,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "799:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 515,
                  "name": "_commonWithdrawAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 525,
                  "src": "822:30:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 514,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "822:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "741:115:3"
            },
            "returnParameters": {
              "id": 523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "934:0:3"
            },
            "scope": 605,
            "src": "730:209:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 538,
              "nodeType": "Block",
              "src": "994:105:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 531,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5617,
                            "src": "1008:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1008:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 533,
                          "name": "denomination",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2500,
                          "src": "1021:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1008:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506c656173652073656e6420606d697844656e6f6d696e6174696f6e602045544820616c6f6e672077697468207472616e73616374696f6e",
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1035:58:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f304eb3b48ff9764f62a411a9ffb7aa0b97f5844028e285830061a3eb6b03a1",
                          "typeString": "literal_string \"Please send `mixDenomination` ETH along with transaction\""
                        },
                        "value": "Please send `mixDenomination` ETH along with transaction"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f304eb3b48ff9764f62a411a9ffb7aa0b97f5844028e285830061a3eb6b03a1",
                          "typeString": "literal_string \"Please send `mixDenomination` ETH along with transaction\""
                        }
                      ],
                      "id": 530,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5620,
                        5621
                      ],
                      "referencedDeclaration": 5621,
                      "src": "1000:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1000:94:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 537,
                  "nodeType": "ExpressionStatement",
                  "src": "1000:94:3"
                }
              ]
            },
            "documentation": null,
            "id": 539,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processDeposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 527,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 539,
                  "src": "968:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 526,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "968:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "967:17:3"
            },
            "returnParameters": {
              "id": 529,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "994:0:3"
            },
            "scope": 605,
            "src": "943:156:3",
            "stateMutability": "nonpayable",
            "superFunction": 2823,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 603,
              "nodeType": "Block",
              "src": "1215:470:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 551,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5617,
                            "src": "1250:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1250:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1263:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1250:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d6573736167652076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365",
                        "id": 555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1266:55:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb42cba8716e5ef1890027a84a51d30b8a9b3b6aff292fa4436fdfdb093e2b04",
                          "typeString": "literal_string \"Message value is supposed to be zero for ETH instance\""
                        },
                        "value": "Message value is supposed to be zero for ETH instance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb42cba8716e5ef1890027a84a51d30b8a9b3b6aff292fa4436fdfdb093e2b04",
                          "typeString": "literal_string \"Message value is supposed to be zero for ETH instance\""
                        }
                      ],
                      "id": 550,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5620,
                        5621
                      ],
                      "referencedDeclaration": 5621,
                      "src": "1242:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1242:80:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 557,
                  "nodeType": "ExpressionStatement",
                  "src": "1242:80:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 559,
                          "name": "_refund",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 547,
                          "src": "1336:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1347:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1336:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "526566756e642076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365",
                        "id": 562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1350:54:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81ced7081bd66f683c55140bd49cd7b11c81bd1cdd704658426bd50e1bd8ff84",
                          "typeString": "literal_string \"Refund value is supposed to be zero for ETH instance\""
                        },
                        "value": "Refund value is supposed to be zero for ETH instance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81ced7081bd66f683c55140bd49cd7b11c81bd1cdd704658426bd50e1bd8ff84",
                          "typeString": "literal_string \"Refund value is supposed to be zero for ETH instance\""
                        }
                      ],
                      "id": 558,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5620,
                        5621
                      ],
                      "referencedDeclaration": 5621,
                      "src": "1328:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1328:77:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 564,
                  "nodeType": "ExpressionStatement",
                  "src": "1328:77:3"
                },
                {
                  "assignments": [
                    566,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 566,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 603,
                      "src": "1413:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 565,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1413:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 576,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1474:2:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 570,
                            "name": "denomination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2500,
                            "src": "1453:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 571,
                            "name": "_fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 545,
                            "src": "1468:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1453:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 567,
                            "name": "_recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 541,
                            "src": "1431:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "call",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1431:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                          }
                        },
                        "id": 569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1431:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value_$",
                          "typeString": "function (uint256) pure returns (function (bytes memory) payable returns (bool,bytes memory))"
                        }
                      },
                      "id": 573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1431:42:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1431:46:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1412:65:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 578,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 566,
                        "src": "1491:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7061796d656e7420746f205f726563697069656e7420646964206e6f7420676f2074687275",
                        "id": 579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1500:39:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b817ea600508ee7f5bd41bf8aaa06721dfdc08b3c90f6e232639455b89be34a9",
                          "typeString": "literal_string \"payment to _recipient did not go thru\""
                        },
                        "value": "payment to _recipient did not go thru"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b817ea600508ee7f5bd41bf8aaa06721dfdc08b3c90f6e232639455b89be34a9",
                          "typeString": "literal_string \"payment to _recipient did not go thru\""
                        }
                      ],
                      "id": 577,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5620,
                        5621
                      ],
                      "referencedDeclaration": 5621,
                      "src": "1483:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1483:57:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 581,
                  "nodeType": "ExpressionStatement",
                  "src": "1483:57:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 582,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 545,
                      "src": "1550:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1557:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1550:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 602,
                  "nodeType": "IfStatement",
                  "src": "1546:135:3",
                  "trueBody": {
                    "id": 601,
                    "nodeType": "Block",
                    "src": "1560:121:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "id": 585,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 566,
                                "src": "1569:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              null
                            ],
                            "id": 586,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "1568:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$__$",
                              "typeString": "tuple(bool,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "",
                                "id": 592,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1608:2:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 590,
                                  "name": "_fee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 545,
                                  "src": "1602:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 587,
                                    "name": "_relayer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 543,
                                    "src": "1582:8:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 588,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "call",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "1582:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 589,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1582:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value_$",
                                  "typeString": "function (uint256) pure returns (function (bytes memory) payable returns (bool,bytes memory))"
                                }
                              },
                              "id": 591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1582:25:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 593,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1582:29:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "1568:43:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 595,
                        "nodeType": "ExpressionStatement",
                        "src": "1568:43:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 597,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 566,
                              "src": "1627:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "7061796d656e7420746f205f72656c6179657220646964206e6f7420676f2074687275",
                              "id": 598,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1636:37:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d23a9425cb4f79b7ef092634b094eea804c04088be6543a697545fa4aa8c0ef0",
                                "typeString": "literal_string \"payment to _relayer did not go thru\""
                              },
                              "value": "payment to _relayer did not go thru"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d23a9425cb4f79b7ef092634b094eea804c04088be6543a697545fa4aa8c0ef0",
                                "typeString": "literal_string \"payment to _relayer did not go thru\""
                              }
                            ],
                            "id": 596,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              5620,
                              5621
                            ],
                            "referencedDeclaration": 5621,
                            "src": "1619:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1619:55:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 600,
                        "nodeType": "ExpressionStatement",
                        "src": "1619:55:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 604,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processWithdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 541,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 604,
                  "src": "1129:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 540,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1129:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 543,
                  "name": "_relayer",
                  "nodeType": "VariableDeclaration",
                  "scope": 604,
                  "src": "1157:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 542,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1157:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 545,
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 604,
                  "src": "1175:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 544,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1175:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 547,
                  "name": "_refund",
                  "nodeType": "VariableDeclaration",
                  "scope": 604,
                  "src": "1189:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 546,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1189:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1128:77:3"
            },
            "returnParameters": {
              "id": 549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1215:0:3"
            },
            "scope": 605,
            "src": "1103:582:3",
            "stateMutability": "nonpayable",
            "superFunction": 3068,
            "visibility": "internal"
          }
        ],
        "scope": 606,
        "src": "693:994:3"
      }
    ],
    "src": "642:1046:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0xf052b28ca720e670068c23c54488dc5b4db3ed42fde7c3fd2d0ea7aee06406eb": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "leafIndex",
              "type": "uint32"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "orderStatus",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "effectiveTime",
              "type": "uint256"
            }
          ],
          "name": "Deposit",
          "type": "event"
        },
        "0x6d7aac54bd3d1c91db3b1fd7b8d6cb45324ad6b5e373c0f0ea4d7b2606c4c2c8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "nullifierHash",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "relayer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Withdrawal",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x62Eb92E4D53eb071e2bD110D4eB5168fD1F74417",
      "transactionHash": "0x4df9c7c1cd5eb72575fdffac8d4a84f8858fe72bf3514f1f01c98b191c1c911d"
    }
  },
  "schemaVersion": "3.2.4",
  "updatedAt": "2020-09-29T02:52:15.536Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "depositERC20Batch(uint256[],bytes32[],uint8,address,uint256)": {
        "details": "Deposit a set of amount and commitments",
        "params": {
          "_amounts": ", array of ERC20 amount",
          "_commitments": ", array of commitments",
          "_effectiveTime": ", effective time of the Withdrawal",
          "_orderStatus": ", status of deposit, 0: cheque for bearer, 1: cheque for order",
          "_recipient": ", recipient address if cheque for order"
        }
      },
      "endorse(bytes,bytes32,bytes32,address,address,uint8,uint256,bytes32,bytes32,uint256)": {
        "details": "this function is for cheque endorsement",
        "params": {
          "_amount": ", endorsed amount, the endorsement amount can be part of balance of old cheque",
          "_effectiveTime": ", new effectiveTime of note",
          "_newCommitment": ", new commitment from frontend",
          "_nullifierHash": ", old nullifierHashe",
          "_oldCommitment": ", old commitment which will be endorsed",
          "_orderStatus": ", old cheque order type, 0- to Bearer cheque, 1- to order cheque",
          "_proof": ", Proof of zkSNARK",
          "_recipient": ", new recipient address, if orderStatus is 0, the _recipient is sender. Otherwise the _recipient is to order",
          "_relayer": ", relayer address",
          "_root": ", root of merkle tree"
        }
      },
      "getRelayerWithdrawAddress()": {
        "details": "get relayer Withdrawal address "
      },
      "isSpent(bytes32)": {
        "details": "whether a note is already spent "
      },
      "isSpentArray(bytes32[])": {
        "details": "whether an array of notes is already spent "
      },
      "lockDeposit(bytes,bytes32,bytes32,address,address,uint256,uint256,bytes32,string)": {
        "details": "lock commitment, this operation can be only called by note holder "
      },
      "setCouncial(address)": {
        "details": "set council address "
      },
      "unlockDeposit(uint256)": {
        "details": "unlock commitment by council "
      },
      "updateCommonFee(uint256,uint256)": {
        "details": "set common fee and fee rate "
      },
      "updateCommonWithdrawAddress(address)": {
        "details": "update commonWithdrawAddress "
      },
      "updateOperator(address)": {
        "details": "operator can change his address "
      },
      "updateRelayer(address,address)": {
        "details": "update authority relayer "
      },
      "updateVerifier(address)": {
        "details": "allow operator to update SNARK verification keys. This is needed to update keys after the final trusted setup ceremony is held. After that operator rights are supposed to be transferred to zero address"
      },
      "withdraw(bytes,bytes32,bytes32,address,address,uint256,uint256,bytes32)": {
        "details": "Withdraw a deposit from the contract. `proof` is a zkSNARK proof data, and input is an array of circuit public inputs `input` array consists of: - merkle root of all deposits in the contract - hash of unique deposit nullifier to prevent double spends - the recipient of funds - optional fee that goes to the transaction sender (usually a relay)",
        "params": {
          "_fee": ", relayer decide the fee amount"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}