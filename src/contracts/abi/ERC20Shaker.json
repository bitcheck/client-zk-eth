{
  "contractName": "ERC20Shaker",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IVerifier",
          "name": "_verifier",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_denomination",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_merkleTreeHeight",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_feeAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "commitment",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "leafIndex",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "orderStatus",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "effectiveTime",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "nullifierHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "FIELD_SIZE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ROOT_HISTORY_SIZE",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ZERO_VALUE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeAddress",
          "type": "address"
        }
      ],
      "name": "changeFeeAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOperator",
          "type": "address"
        }
      ],
      "name": "changeOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentRootIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "denomination",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "_commitments",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "_orderStatus",
          "type": "uint8"
        },
        {
          "internalType": "address payable",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_effectiveTime",
          "type": "uint256"
        }
      ],
      "name": "depositERC20Batch",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_nullifierHash",
          "type": "bytes32"
        },
        {
          "internalType": "address payable",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_relayer",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "_orderStatus",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_oldCommitment",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_newCommitment",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_effectiveTime",
          "type": "uint256"
        }
      ],
      "name": "endorse",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "filledSubtrees",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLastRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_left",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_right",
          "type": "bytes32"
        }
      ],
      "name": "hashLeftRight",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        }
      ],
      "name": "isKnownRoot",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_nullifierHash",
          "type": "bytes32"
        }
      ],
      "name": "isSpent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_nullifierHashes",
          "type": "bytes32[]"
        }
      ],
      "name": "isSpentArray",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "spent",
          "type": "bool[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "levels",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "nextIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roots",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_newVerifier",
          "type": "address"
        }
      ],
      "name": "updateVerifier",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "verifier",
      "outputs": [
        {
          "internalType": "contract IVerifier",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_nullifierHash",
          "type": "bytes32"
        },
        {
          "internalType": "address payable",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_relayer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_refund",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_commitment",
          "type": "bytes32"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "zeros",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IVerifier\",\"name\":\"_verifier\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_denomination\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_merkleTreeHeight\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feeAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"leafIndex\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"orderStatus\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"effectiveTime\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"nullifierHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"FIELD_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ROOT_HISTORY_SIZE\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ZERO_VALUE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeAddress\",\"type\":\"address\"}],\"name\":\"changeFeeAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOperator\",\"type\":\"address\"}],\"name\":\"changeOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentRootIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"denomination\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"_commitments\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"_orderStatus\",\"type\":\"uint8\"},{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_effectiveTime\",\"type\":\"uint256\"}],\"name\":\"depositERC20Batch\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_nullifierHash\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_relayer\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_orderStatus\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_oldCommitment\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_newCommitment\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_effectiveTime\",\"type\":\"uint256\"}],\"name\":\"endorse\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"filledSubtrees\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLastRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_right\",\"type\":\"bytes32\"}],\"name\":\"hashLeftRight\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"}],\"name\":\"isKnownRoot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_nullifierHash\",\"type\":\"bytes32\"}],\"name\":\"isSpent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_nullifierHashes\",\"type\":\"bytes32[]\"}],\"name\":\"isSpentArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"spent\",\"type\":\"bool[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"levels\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roots\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newVerifier\",\"type\":\"address\"}],\"name\":\"updateVerifier\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"verifier\",\"outputs\":[{\"internalType\":\"contract IVerifier\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_nullifierHash\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_relayer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_refund\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_commitment\",\"type\":\"bytes32\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zeros\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"changeFeeAddress(address)\":{\"details\":\"operator can change address of recieving fee \"},\"changeOperator(address)\":{\"details\":\"operator can change his address \"},\"depositERC20Batch(uint256[],bytes32[],uint8,address,uint256)\":{\"details\":\"Deposit a set of amount and commitments\",\"params\":{\"_amounts\":\", array of ERC20 amount\",\"_commitments\":\", array of commitments\",\"_effectiveTime\":\", effective time of the Withdrawal\",\"_orderStatus\":\", status of deposit, 0: cheque for bearer, 1: cheque for order\",\"_recipient\":\", recipient address if cheque for order\"}},\"endorse(bytes,bytes32,bytes32,address,address,uint8,uint256,bytes32,bytes32,uint256)\":{\"details\":\"this function is for cheque endorsement\",\"params\":{\"_amount\":\", endorsed amount, the endorsement amount can be part of balance of old cheque\",\"_effectiveTime\":\", new effectiveTime of note\",\"_newCommitment\":\", new commitment from frontend\",\"_nullifierHash\":\", old nullifierHashe\",\"_oldCommitment\":\", old commitment which will be endorsed\",\"_orderStatus\":\", old cheque order type, 0- to Bearer cheque, 1- to order cheque\",\"_proof\":\", Proof of zkSNARK\",\"_recipient\":\", new recipient address, if orderStatus is 0, the _recipient is sender. Otherwise the _recipient is to order\",\"_relayer\":\", relayer address\",\"_root\":\", root of merkle tree\"}},\"getLastRoot()\":{\"details\":\"Returns the last root\"},\"hashLeftRight(bytes32,bytes32)\":{\"details\":\"Hash 2 tree leaves, returns MiMC(_left, _right)\"},\"isKnownRoot(bytes32)\":{\"details\":\"Whether the root is present in the root history\"},\"isSpent(bytes32)\":{\"details\":\"whether a note is already spent \"},\"isSpentArray(bytes32[])\":{\"details\":\"whether an array of notes is already spent \"},\"updateVerifier(address)\":{\"details\":\"allow operator to update SNARK verification keys. This is needed to update keys after the final trusted setup ceremony is held. After that operator rights are supposed to be transferred to zero address\"},\"withdraw(bytes,bytes32,bytes32,address,address,uint256,uint256,bytes32)\":{\"details\":\"Withdraw a deposit from the contract. `proof` is a zkSNARK proof data, and input is an array of circuit public inputs `input` array consists of: - merkle root of all deposits in the contract - hash of unique deposit nullifier to prevent double spends - the recipient of funds - optional fee that goes to the transaction sender (usually a relay)\",\"params\":{\"_fee\":\", relayer decide the fee amount\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/guqianfeng/web/my_dapps/hunbi/tornado-core/contracts/ERC20Shaker.sol\":\"ERC20Shaker\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/guqianfeng/web/my_dapps/hunbi/tornado-core/contracts/ERC20Shaker.sol\":{\"keccak256\":\"0x5ae847c42dd3cc8684857d5e90438f0b5af6b8ba6e2bf36c843442bf67c62890\",\"urls\":[\"bzz-raw://db778efcb99bc9ba88f5e4d2015836cc1547e5e775e2b01acf18f69058800361\",\"dweb:/ipfs/QmTemQKwv7RdQxW6LhjpSnvCGR4w1WPyrc38VcaymYNCyB\"]},\"/Users/guqianfeng/web/my_dapps/hunbi/tornado-core/contracts/MerkleTreeWithHistory.sol\":{\"keccak256\":\"0x671cc9268dd70c47d18795f7e37fc4df11763fcbcca026edcf163f4239036254\",\"urls\":[\"bzz-raw://9c36a207ed164b60a514eae89bfb15e5b4de4b346c4a89a7a1cb50a940bc699d\",\"dweb:/ipfs/QmbPEqFJAGMpYduLEFsbPazyBsYWcjRtpth8X26wCHALwk\"]},\"/Users/guqianfeng/web/my_dapps/hunbi/tornado-core/contracts/ReentrancyGuard.sol\":{\"keccak256\":\"0x1f0687b27b70098e945c0673bad1a2a9ff1b7300cb15b66411804474e3d0bc22\",\"urls\":[\"bzz-raw://c5ab9cad47ff8a3aeb90a3976ee5f293fa469f33ba11eb5df327f736951ecdd1\",\"dweb:/ipfs/QmWoRR8NtLS7hLKsuMskotVGZP6tmtevn7MSKrQYK2SrJL\"]},\"/Users/guqianfeng/web/my_dapps/hunbi/tornado-core/contracts/SafeMath.sol\":{\"keccak256\":\"0x28ffe1fc796e4c7b098bf83160d62b28fa2fa57fe58583cb1c8ae071dabf8a15\",\"urls\":[\"bzz-raw://e8d70c999f19cb42cfbe34f2212ad12ebea4db423ccaf1fc93771480f957d721\",\"dweb:/ipfs/QmfH2vvRxM2MCcDmzgEqpNmgtkcgUXFLszjJnyd21JAdi9\"]},\"/Users/guqianfeng/web/my_dapps/hunbi/tornado-core/contracts/Shaker.sol\":{\"keccak256\":\"0x3085ccdb46fc187ab33b5c2470818400cd7d1e73223e3c0c8691bc2b4fa5a584\",\"urls\":[\"bzz-raw://592c073889e954fdf215f87f3fc99694de0fbe729104282a987b0d5ae50d6970\",\"dweb:/ipfs/QmcdUV9RZXPbE9vnnyT7ivcfpkjcXiPqbGiP1dt5GdwV61\"]}},\"version\":1}",
  "bytecode": "0x6080604052600380546001600160401b031916905560006069819055606a553480156200002b57600080fd5b5060405162002a3538038062002a35833981810160405260c08110156200005157600080fd5b508051602082015160408301516060840151608085015160a090950151939492939192909185858585858263ffffffff8116620000c05760405162461bcd60e51b8152600401808060200182810382526027815260200180620029ac6027913960400191505060405180910390fd5b60208163ffffffff1610620001075760405162461bcd60e51b8152600401808060200182810382526022815260200180620029f36022913960400191505060405180910390fd5b6000805463ffffffff191663ffffffff83161781556002805460018181019092557f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c6000805160206200296b833981519152909101819055815480830183559282905260008051602062002a158339815191529092018290555b60005463ffffffff9081169082161015620001f557620001ab82806001600160e01b03620002b616565b6002805460018181019092556000805160206200296b8339815191520182905580548082018255600082905260008051602062002a15833981519152018290559092500162000181565b506200020b81806001600160e01b03620002b616565b6004555050600160685583620002535760405162461bcd60e51b8152600401808060200182810382526025815260200180620029466025913960400191505060405180910390fd5b606b80546001600160a01b03199081166001600160a01b0397881617909155606c8054821693871693909317909255606e93909355606d805482169385169390931790925550607580549091169290911691909117905550620004a39350505050565b6000600080516020620029d383398151915283106200031c576040805162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c64604482015290519081900360640190fd5b600080516020620029d383398151915282106200036b5760405162461bcd60e51b81526004018080602001828103825260218152602001806200298b6021913960400191505060405180910390fd5b6040805163f47d33b560e01b81526004810185905260006024820181905282518693919273__Hasher________________________________9263f47d33b592604480840193829003018186803b158015620003c657600080fd5b505af4158015620003db573d6000803e3d6000fd5b505050506040513d6040811015620003f257600080fd5b5080516020909101519092509050600080516020620029d3833981519152848308915073__Hasher________________________________63f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b1580156200046c57600080fd5b505af415801562000481573d6000803e3d6000fd5b505050506040513d60408110156200049857600080fd5b505195945050505050565b61249380620004b36000396000f3fe6080604052600436106101815760003560e01c80639fa12d0b116100d1578063da9080391161008a578063ec73295911610064578063ec73295914610717578063f178e47c1461072c578063fc0c546a14610756578063fc7e9c6f1461076b57610181565b8063da90803914610623578063e5285dcc146106c3578063e8295588146106ed57610181565b80639fa12d0b14610419578063a8be3cd6146104e4578063ad7a672f146105ba578063ba70f757146105cf578063c2b40ae4146105e4578063cd87a3b41461060e57610181565b80634ecf518b1161013e578063827a260011610118578063827a26001461030c5780638bca6d16146103bc57806390eeb02b146103d157806397fc007c146103e657610181565b80634ecf518b1461028b578063570ca735146102b95780636d9833e3146102ce57610181565b806306394c9b146101865780631a39d8ef146101bb578063285e1406146101e25780632b7ac3f31461021557806338bf282e14610246578063414a37ba14610276575b600080fd5b34801561019257600080fd5b506101b9600480360360208110156101a957600080fd5b50356001600160a01b0316610780565b005b3480156101c757600080fd5b506101d06107eb565b60408051918252519081900360200190f35b3480156101ee57600080fd5b506101b96004803603602081101561020557600080fd5b50356001600160a01b03166107f1565b34801561022157600080fd5b5061022a61085c565b604080516001600160a01b039092168252519081900360200190f35b34801561025257600080fd5b506101d06004803603604081101561026957600080fd5b508035906020013561086b565b34801561028257600080fd5b506101d0610a4c565b34801561029757600080fd5b506102a0610a5e565b6040805163ffffffff9092168252519081900360200190f35b3480156102c557600080fd5b5061022a610a6a565b3480156102da57600080fd5b506102f8600480360360208110156102f157600080fd5b5035610a79565b604080519115158252519081900360200190f35b6101b9600480360361014081101561032357600080fd5b810190602081018135600160201b81111561033d57600080fd5b82018360208201111561034f57600080fd5b803590602001918460018302840111600160201b8311171561037057600080fd5b91935091508035906020810135906001600160a01b03604082013581169160608101359091169060ff6080820135169060a08101359060c08101359060e0810135906101000135610aec565b3480156103c857600080fd5b506101d0611193565b3480156103dd57600080fd5b506102a0611199565b3480156103f257600080fd5b506101b96004803603602081101561040957600080fd5b50356001600160a01b03166111a5565b34801561042557600080fd5b506104946004803603602081101561043c57600080fd5b810190602081018135600160201b81111561045657600080fd5b82018360208201111561046857600080fd5b803590602001918460208302840111600160201b8311171561048957600080fd5b509092509050611210565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156104d05781810151838201526020016104b8565b505050509050019250505060405180910390f35b6101b9600480360360a08110156104fa57600080fd5b810190602081018135600160201b81111561051457600080fd5b82018360208201111561052657600080fd5b803590602001918460208302840111600160201b8311171561054757600080fd5b919390929091602081019035600160201b81111561056457600080fd5b82018360208201111561057657600080fd5b803590602001918460208302840111600160201b8311171561059757600080fd5b919350915060ff813516906001600160a01b036020820135169060400135611298565b3480156105c657600080fd5b506101d06113a9565b3480156105db57600080fd5b506101d06113af565b3480156105f057600080fd5b506101d06004803603602081101561060757600080fd5b50356113cf565b34801561061a57600080fd5b506102a06113e3565b6101b9600480360361010081101561063a57600080fd5b810190602081018135600160201b81111561065457600080fd5b82018360208201111561066657600080fd5b803590602001918460018302840111600160201b8311171561068757600080fd5b91935091508035906020810135906001600160a01b03604082013581169160608101359091169060808101359060a08101359060c001356113e8565b3480156106cf57600080fd5b506102f8600480360360208110156106e657600080fd5b503561198a565b3480156106f957600080fd5b506101d06004803603602081101561071057600080fd5b503561199f565b34801561072357600080fd5b506101d06119bd565b34801561073857600080fd5b506101d06004803603602081101561074f57600080fd5b50356119e1565b34801561076257600080fd5b5061022a6119ee565b34801561077757600080fd5b506102a06119fd565b606c546001600160a01b031633146107c95760405162461bcd60e51b81526004018080602001828103825260258152602001806124166025913960400191505060405180910390fd5b606c80546001600160a01b0319166001600160a01b0392909216919091179055565b60695481565b606c546001600160a01b0316331461083a5760405162461bcd60e51b81526004018080602001828103825260258152602001806124166025913960400191505060405180910390fd5b606d80546001600160a01b0319166001600160a01b0392909216919091179055565b606b546001600160a01b031681565b60006000805160206123a583398151915283106108cf576040805162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c64604482015290519081900360640190fd5b6000805160206123a5833981519152821061091b5760405162461bcd60e51b81526004018080602001828103825260218152602001806123286021913960400191505060405180910390fd5b6040805163f47d33b560e01b81526004810185905260006024820181905282518693919273__Hasher________________________________9263f47d33b592604480840193829003018186803b15801561097557600080fd5b505af4158015610989573d6000803e3d6000fd5b505050506040513d604081101561099f57600080fd5b50805160209091015190925090506000805160206123a5833981519152848308915073__Hasher________________________________63f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b158015610a1757600080fd5b505af4158015610a2b573d6000803e3d6000fd5b505050506040513d6040811015610a4157600080fd5b505195945050505050565b6000805160206123a583398151915281565b60005463ffffffff1681565b606c546001600160a01b031681565b600081610a8857506000610ae7565b60035463ffffffff165b60048163ffffffff1660648110610aa557fe5b0154831415610ab8576001915050610ae7565b63ffffffff8116610ac7575060645b6003546000199091019063ffffffff80831691161415610a925760009150505b919050565b60026068541415610b44576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b600260685560008381526070602052604090205460ff16610bac576040805162461bcd60e51b815260206004820152601b60248201527f4f6c6420636f6d6d69746d656e742063616e206e6f742066696e640000000000604482015290519081900360640190fd5b60008281526070602052604090205460ff1615610bfa5760405162461bcd60e51b81526004018080602001828103825260258152602001806122de6025913960400191505060405180910390fd5b6000888152606f602052604090205460ff1615610c5e576040805162461bcd60e51b815260206004820152601f60248201527f546865206e6f746520686173206265656e20616c7265616479207370656e7400604482015290519081900360640190fd5b610c6789610a79565b610cb8576040805162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f7400000000604482015290519081900360640190fd5b600083815260716020526040902054610d18576040805162461bcd60e51b815260206004820152601f60248201527f4e6f2062616c616e636520616d6f756e74206f6620746869732070726f6f6600604482015290519081900360640190fd5b6000838152607160205260408120548510610d4157600084815260716020526040902054610d43565b845b905060008111610d9a576040805162461bcd60e51b815260206004820152601d60248201527f526566756e6420616d6f756e742063616e206e6f74206265207a65726f000000604482015290519081900360640190fd5b60008481526072602052604090205460ff166001148015610dd157506000848152607360205260409020546001600160a01b031633145b80610deb575060008481526072602052604090205460ff16155b610e265760405162461bcd60e51b815260040180806020018281038252602481526020018061243b6024913960400191505060405180910390fd5b606b60009054906101000a90046001600160a01b03166001600160a01b031663695ef6f98d8d6040518060c001604052808f60001c81526020018e60001c81526020018d6001600160a01b031681526020018c6001600160a01b031681526020018b60ff1681526020018a8152506040518463ffffffff1660e01b8152600401808060200183600660200280838360005b83811015610ecf578181015183820152602001610eb7565b505050509050018281038252858582818152602001925080828437600081840152601f19601f820116905080830192505050945050505050602060405180830381600087803b158015610f2157600080fd5b505af1158015610f35573d6000803e3d6000fd5b505050506040513d6020811015610f4b57600080fd5b5051610f9e576040805162461bcd60e51b815260206004820152601960248201527f496e76616c696420656e646f7273656d656e742070726f6f6600000000000000604482015290519081900360640190fd5b6000610fa984611a10565b9050600083118015610fc957506000858152607460205260409020544210155b15610fe4576000848152607460205260409020839055610ffb565b600085815260746020526040808220548683529120555b6000848152607060209081526040808320805460ff199081166001908117909255607184528285208b905560729093529220805460ff8b16921682179055146110445733611046565b885b600085815260736020908152604080832080546001600160a01b0319166001600160a01b0395909516949094179093558782526071905220546110899083611ba7565b6000868152607160205260409020819055156110a65760006110a9565b60015b60008b8152606f6020908152604091829020805493151560ff1990941693909317909255805163ffffffff84168152429281019290925260ff8916828201526001600160a01b038b166060830152608082018590525185917ff052b28ca720e670068c23c54488dc5b4db3ed42fde7c3fd2d0ea7aee06406eb919081900360a00190a2604080516000808252602082018d9052818301526060810184905290516001600160a01b038a16917f6d7aac54bd3d1c91db3b1fd7b8d6cb45324ad6b5e373c0f0ea4d7b2606c4c2c8919081900360800190a2505060016068555050505050505050505050565b606e5481565b60035463ffffffff1681565b606c546001600160a01b031633146111ee5760405162461bcd60e51b81526004018080602001828103825260258152602001806124166025913960400191505060405180910390fd5b606b80546001600160a01b0319166001600160a01b0392909216919091179055565b60408051828152602080840282010190915260609082801561123c578160200160208202803883390190505b50905060005b828110156112915761126584848381811061125957fe5b9050602002013561198a565b1561128957600182828151811061127857fe5b911515602092830291909101909101525b600101611242565b5092915050565b600260685414156112f0576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b600260685560ff8316158061130857508260ff166001145b6113435760405162461bcd60e51b81526004018080602001828103825260268152602001806122116026913960400191505060405180910390fd5b6001600160a01b03821661135657600080fd5b60005b8681101561139a5761139288888381811061137057fe5b9050602002013587878481811061138357fe5b90506020020135868686611c04565b600101611359565b50506001606855505050505050565b606a5481565b60035460009060049063ffffffff16606481106113c857fe5b0154905090565b600481606481106113dc57fe5b0154905081565b606481565b60026068541415611440576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026068556000868152606f602052604090205460ff16156114a9576040805162461bcd60e51b815260206004820152601f60248201527f546865206e6f746520686173206265656e20616c7265616479207370656e7400604482015290519081900360640190fd5b6114b287610a79565b611503576040805162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f7400000000604482015290519081900360640190fd5b60008181526072602052604090205460ff16600114801561153d57506000818152607360205260409020546001600160a01b038681169116145b80611557575060008181526072602052604090205460ff16155b6115925760405162461bcd60e51b81526004018080602001828103825260278152602001806122b76027913960400191505060405180910390fd5b6000818152607160205260409020546115f2576040805162461bcd60e51b815260206004820152601f60248201527f4e6f2062616c616e636520616d6f756e74206f6620746869732070726f6f6600604482015290519081900360640190fd5b600081815260716020526040812054831061161b5760008281526071602052604090205461161d565b825b905060008111611674576040805162461bcd60e51b815260206004820152601d60248201527f526566756e6420616d6f756e742063616e206e6f74206265207a65726f000000604482015290519081900360640190fd5b6000828152607460205260409020544210156116c15760405162461bcd60e51b815260040180806020018281038252602d815260200180612378602d913960400191505060405180910390fd5b838110156117005760405162461bcd60e51b81526004018080602001828103825260258152602001806123036025913960400191505060405180910390fd5b606b546040805160c080820183528b8252602082018b90526001600160a01b038a81168385015289811660608401526080830189905260a08301889052925163695ef6f960e01b8152929093169263695ef6f9928e928e9290916004810191829160240190849080838360005b8381101561178557818101518382015260200161176d565b505050509050018281038252858582818152602001925080828437600081840152601f19601f820116905080830192505050945050505050602060405180830381600087803b1580156117d757600080fd5b505af11580156117eb573d6000803e3d6000fd5b505050506040513d602081101561180157600080fd5b505161184d576040805162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b604482015290519081900360640190fd5b60008281526072602052604081205460ff1660011461186c5786611885565b6000838152607360205260409020546001600160a01b03165b606d549091506118a19082906001600160a01b03168785611d91565b6000838152607160205260409020546118c0908363ffffffff611ba716565b6000848152607160205260409020556069546118e2908363ffffffff611ba716565b60695560008381526071602052604090205415611900576000611903565b60015b6000898152606f6020908152604091829020805460ff19169315159390931790925580516001600160a01b038a811682529281018b9052808201889052606081018590529051918816917f6d7aac54bd3d1c91db3b1fd7b8d6cb45324ad6b5e373c0f0ea4d7b2606c4c2c8916080908290030190a250506001606855505050505050505050565b6000908152606f602052604090205460ff1690565b600281815481106119ac57fe5b600091825260209091200154905081565b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b600181815481106119ac57fe5b6075546001600160a01b031681565b600354600160201b900463ffffffff1681565b60035460008054909163ffffffff600160201b909104811691811660020a16811415611a6d5760405162461bcd60e51b815260040180806020018281038252602f815260200180612237602f913960400191505060405180910390fd5b6003805463ffffffff600160201b80830482166001019091160267ffffffff000000001990911617905582600080805b60005463ffffffff9081169082161015611b455760018516611b015783925060028163ffffffff1681548110611acf57fe5b906000526020600020015491508360018263ffffffff1681548110611af057fe5b600091825260209091200155611b25565b60018163ffffffff1681548110611b1457fe5b906000526020600020015492508391505b611b2f838361086b565b9350600263ffffffff8616049450600101611a9d565b5060035460649063ffffffff908116600101166003805463ffffffff19169290910663ffffffff908116929092179081905584916004911660648110611b8757fe5b01555050600354600160201b900463ffffffff1660001901949350505050565b600082821115611bfe576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b60008481526070602052604090205460ff1615611c525760405162461bcd60e51b81526004018080602001828103825260218152602001806123c56021913960400191505060405180910390fd5b6000611c5d85611a10565b9050611c6886611db3565b6000858152607060209081526040808320805460ff199081166001908117909255607184528285208b905560729093529220805460ff881692168217905514611cb15733611cb3565b825b600086815260736020526040902080546001600160a01b0319166001600160a01b0392909216919091179055428210611cec5781611cee565b425b600086815260746020526040902055606954611d10908763ffffffff611dfe16565b606955606a54611d26908763ffffffff611dfe16565b606a556040805163ffffffff8316815242602082015260ff8616818301526001600160a01b038516606082015260808101849052905186917ff052b28ca720e670068c23c54488dc5b4db3ed42fde7c3fd2d0ea7aee06406eb919081900360a00190a2505050505050565b611d9d84838303611e5f565b8115611dad57611dad8383611e5f565b50505050565b3415611df05760405162461bcd60e51b81526004018080602001828103825260308152602001806123e66030913960400191505060405180910390fd5b611dfb33308361202a565b50565b600082820183811015611e58576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b607554604080516001600160a01b038581166024830152604480830186905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b178152925182516000956060959316939282918083835b60208310611edc5780518252601f199092019160209182019101611ebd565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611f3e576040519150601f19603f3d011682016040523d82523d6000602084013e611f43565b606091505b509150915081611f8e576040805162461bcd60e51b81526020600482015260116024820152706e6f7420656e6f75676820746f6b656e7360781b604482015290519081900360640190fd5b805115611dad578051602014611fd55760405162461bcd60e51b815260040180806020018281038252602a815260200180612266602a913960400191505060405180910390fd5b808060200190516020811015611fea57600080fd5b5051915081611dad5760405162461bcd60e51b81526004018080602001828103825260278152602001806122906027913960400191505060405180910390fd5b607554604080516001600160a01b0386811660248301528581166044830152606480830186905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b178152925182516000956060959316939282918083835b602083106120af5780518252601f199092019160209182019101612090565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612111576040519150601f19603f3d011682016040523d82523d6000602084013e612116565b606091505b50915091508161216d576040805162461bcd60e51b815260206004820152601960248201527f6e6f7420656e6f75676820616c6c6f77656420746f6b656e7300000000000000604482015290519081900360640190fd5b8051156122095780516020146121b45760405162461bcd60e51b815260040180806020018281038252602a815260200180612266602a913960400191505060405180910390fd5b8080602001905160208110156121c957600080fd5b50519150816122095760405162461bcd60e51b815260040180806020018281038252602f815260200180612349602f913960400191505060405180910390fd5b505050505056fe546865726520617265206f6e6c79203220636865717565207374617475733a2030206f7220314d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656166732063616e20626520616464656464617461206c656e6774682073686f756c64206265206569746865722030206f722033322062797465736e6f7420656e6f75676820746f6b656e732e20546f6b656e2072657475726e732066616c73652e526563697069656e74206973206e6f7420746865206f726967696e616c20726563697069656e74546865206e657720636f6d6d69746d656e7420686173206265656e207375626d6974746564526566756e6420616d6f756e742073686f756c64206265206d6f7265207468616e206665655f72696768742073686f756c6420626520696e7369646520746865206669656c646e6f7420656e6f75676820616c6c6f77656420746f6b656e732e20546f6b656e2072657475726e732066616c73652e546865206465706f736974206973206c6f636b656420756e74696c207468652065666665637469766554696d6530644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000154686520636f6d6d69746d656e7420686173206265656e207375626d69747465644554482076616c756520697320737570706f73656420746f206265203020666f7220455243323020696e7374616e63654f6e6c79206f70657261746f722063616e2063616c6c20746869732066756e6374696f6e2e53656e646572206973206e6f7420746865206f726967696e616c20726563697069656e74a265627a7a7231582073aaebdcffd53cc5de5656edc2bce558b5136c08cf50c553b5efd1ff2f5c2f3a64736f6c6343000511003264656e6f6d696e6174696f6e2073686f756c642062652067726561746572207468616e2030405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5f72696768742073686f756c6420626520696e7369646520746865206669656c645f747265654c6576656c732073686f756c642062652067726561746572207468616e207a65726f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000015f747265654c6576656c732073686f756c64206265206c657373207468616e203332b10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6",
  "deployedBytecode": "0x6080604052600436106101815760003560e01c80639fa12d0b116100d1578063da9080391161008a578063ec73295911610064578063ec73295914610717578063f178e47c1461072c578063fc0c546a14610756578063fc7e9c6f1461076b57610181565b8063da90803914610623578063e5285dcc146106c3578063e8295588146106ed57610181565b80639fa12d0b14610419578063a8be3cd6146104e4578063ad7a672f146105ba578063ba70f757146105cf578063c2b40ae4146105e4578063cd87a3b41461060e57610181565b80634ecf518b1161013e578063827a260011610118578063827a26001461030c5780638bca6d16146103bc57806390eeb02b146103d157806397fc007c146103e657610181565b80634ecf518b1461028b578063570ca735146102b95780636d9833e3146102ce57610181565b806306394c9b146101865780631a39d8ef146101bb578063285e1406146101e25780632b7ac3f31461021557806338bf282e14610246578063414a37ba14610276575b600080fd5b34801561019257600080fd5b506101b9600480360360208110156101a957600080fd5b50356001600160a01b0316610780565b005b3480156101c757600080fd5b506101d06107eb565b60408051918252519081900360200190f35b3480156101ee57600080fd5b506101b96004803603602081101561020557600080fd5b50356001600160a01b03166107f1565b34801561022157600080fd5b5061022a61085c565b604080516001600160a01b039092168252519081900360200190f35b34801561025257600080fd5b506101d06004803603604081101561026957600080fd5b508035906020013561086b565b34801561028257600080fd5b506101d0610a4c565b34801561029757600080fd5b506102a0610a5e565b6040805163ffffffff9092168252519081900360200190f35b3480156102c557600080fd5b5061022a610a6a565b3480156102da57600080fd5b506102f8600480360360208110156102f157600080fd5b5035610a79565b604080519115158252519081900360200190f35b6101b9600480360361014081101561032357600080fd5b810190602081018135600160201b81111561033d57600080fd5b82018360208201111561034f57600080fd5b803590602001918460018302840111600160201b8311171561037057600080fd5b91935091508035906020810135906001600160a01b03604082013581169160608101359091169060ff6080820135169060a08101359060c08101359060e0810135906101000135610aec565b3480156103c857600080fd5b506101d0611193565b3480156103dd57600080fd5b506102a0611199565b3480156103f257600080fd5b506101b96004803603602081101561040957600080fd5b50356001600160a01b03166111a5565b34801561042557600080fd5b506104946004803603602081101561043c57600080fd5b810190602081018135600160201b81111561045657600080fd5b82018360208201111561046857600080fd5b803590602001918460208302840111600160201b8311171561048957600080fd5b509092509050611210565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156104d05781810151838201526020016104b8565b505050509050019250505060405180910390f35b6101b9600480360360a08110156104fa57600080fd5b810190602081018135600160201b81111561051457600080fd5b82018360208201111561052657600080fd5b803590602001918460208302840111600160201b8311171561054757600080fd5b919390929091602081019035600160201b81111561056457600080fd5b82018360208201111561057657600080fd5b803590602001918460208302840111600160201b8311171561059757600080fd5b919350915060ff813516906001600160a01b036020820135169060400135611298565b3480156105c657600080fd5b506101d06113a9565b3480156105db57600080fd5b506101d06113af565b3480156105f057600080fd5b506101d06004803603602081101561060757600080fd5b50356113cf565b34801561061a57600080fd5b506102a06113e3565b6101b9600480360361010081101561063a57600080fd5b810190602081018135600160201b81111561065457600080fd5b82018360208201111561066657600080fd5b803590602001918460018302840111600160201b8311171561068757600080fd5b91935091508035906020810135906001600160a01b03604082013581169160608101359091169060808101359060a08101359060c001356113e8565b3480156106cf57600080fd5b506102f8600480360360208110156106e657600080fd5b503561198a565b3480156106f957600080fd5b506101d06004803603602081101561071057600080fd5b503561199f565b34801561072357600080fd5b506101d06119bd565b34801561073857600080fd5b506101d06004803603602081101561074f57600080fd5b50356119e1565b34801561076257600080fd5b5061022a6119ee565b34801561077757600080fd5b506102a06119fd565b606c546001600160a01b031633146107c95760405162461bcd60e51b81526004018080602001828103825260258152602001806124166025913960400191505060405180910390fd5b606c80546001600160a01b0319166001600160a01b0392909216919091179055565b60695481565b606c546001600160a01b0316331461083a5760405162461bcd60e51b81526004018080602001828103825260258152602001806124166025913960400191505060405180910390fd5b606d80546001600160a01b0319166001600160a01b0392909216919091179055565b606b546001600160a01b031681565b60006000805160206123a583398151915283106108cf576040805162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c64604482015290519081900360640190fd5b6000805160206123a5833981519152821061091b5760405162461bcd60e51b81526004018080602001828103825260218152602001806123286021913960400191505060405180910390fd5b6040805163f47d33b560e01b81526004810185905260006024820181905282518693919273__Hasher________________________________9263f47d33b592604480840193829003018186803b15801561097557600080fd5b505af4158015610989573d6000803e3d6000fd5b505050506040513d604081101561099f57600080fd5b50805160209091015190925090506000805160206123a5833981519152848308915073__Hasher________________________________63f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b158015610a1757600080fd5b505af4158015610a2b573d6000803e3d6000fd5b505050506040513d6040811015610a4157600080fd5b505195945050505050565b6000805160206123a583398151915281565b60005463ffffffff1681565b606c546001600160a01b031681565b600081610a8857506000610ae7565b60035463ffffffff165b60048163ffffffff1660648110610aa557fe5b0154831415610ab8576001915050610ae7565b63ffffffff8116610ac7575060645b6003546000199091019063ffffffff80831691161415610a925760009150505b919050565b60026068541415610b44576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b600260685560008381526070602052604090205460ff16610bac576040805162461bcd60e51b815260206004820152601b60248201527f4f6c6420636f6d6d69746d656e742063616e206e6f742066696e640000000000604482015290519081900360640190fd5b60008281526070602052604090205460ff1615610bfa5760405162461bcd60e51b81526004018080602001828103825260258152602001806122de6025913960400191505060405180910390fd5b6000888152606f602052604090205460ff1615610c5e576040805162461bcd60e51b815260206004820152601f60248201527f546865206e6f746520686173206265656e20616c7265616479207370656e7400604482015290519081900360640190fd5b610c6789610a79565b610cb8576040805162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f7400000000604482015290519081900360640190fd5b600083815260716020526040902054610d18576040805162461bcd60e51b815260206004820152601f60248201527f4e6f2062616c616e636520616d6f756e74206f6620746869732070726f6f6600604482015290519081900360640190fd5b6000838152607160205260408120548510610d4157600084815260716020526040902054610d43565b845b905060008111610d9a576040805162461bcd60e51b815260206004820152601d60248201527f526566756e6420616d6f756e742063616e206e6f74206265207a65726f000000604482015290519081900360640190fd5b60008481526072602052604090205460ff166001148015610dd157506000848152607360205260409020546001600160a01b031633145b80610deb575060008481526072602052604090205460ff16155b610e265760405162461bcd60e51b815260040180806020018281038252602481526020018061243b6024913960400191505060405180910390fd5b606b60009054906101000a90046001600160a01b03166001600160a01b031663695ef6f98d8d6040518060c001604052808f60001c81526020018e60001c81526020018d6001600160a01b031681526020018c6001600160a01b031681526020018b60ff1681526020018a8152506040518463ffffffff1660e01b8152600401808060200183600660200280838360005b83811015610ecf578181015183820152602001610eb7565b505050509050018281038252858582818152602001925080828437600081840152601f19601f820116905080830192505050945050505050602060405180830381600087803b158015610f2157600080fd5b505af1158015610f35573d6000803e3d6000fd5b505050506040513d6020811015610f4b57600080fd5b5051610f9e576040805162461bcd60e51b815260206004820152601960248201527f496e76616c696420656e646f7273656d656e742070726f6f6600000000000000604482015290519081900360640190fd5b6000610fa984611a10565b9050600083118015610fc957506000858152607460205260409020544210155b15610fe4576000848152607460205260409020839055610ffb565b600085815260746020526040808220548683529120555b6000848152607060209081526040808320805460ff199081166001908117909255607184528285208b905560729093529220805460ff8b16921682179055146110445733611046565b885b600085815260736020908152604080832080546001600160a01b0319166001600160a01b0395909516949094179093558782526071905220546110899083611ba7565b6000868152607160205260409020819055156110a65760006110a9565b60015b60008b8152606f6020908152604091829020805493151560ff1990941693909317909255805163ffffffff84168152429281019290925260ff8916828201526001600160a01b038b166060830152608082018590525185917ff052b28ca720e670068c23c54488dc5b4db3ed42fde7c3fd2d0ea7aee06406eb919081900360a00190a2604080516000808252602082018d9052818301526060810184905290516001600160a01b038a16917f6d7aac54bd3d1c91db3b1fd7b8d6cb45324ad6b5e373c0f0ea4d7b2606c4c2c8919081900360800190a2505060016068555050505050505050505050565b606e5481565b60035463ffffffff1681565b606c546001600160a01b031633146111ee5760405162461bcd60e51b81526004018080602001828103825260258152602001806124166025913960400191505060405180910390fd5b606b80546001600160a01b0319166001600160a01b0392909216919091179055565b60408051828152602080840282010190915260609082801561123c578160200160208202803883390190505b50905060005b828110156112915761126584848381811061125957fe5b9050602002013561198a565b1561128957600182828151811061127857fe5b911515602092830291909101909101525b600101611242565b5092915050565b600260685414156112f0576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b600260685560ff8316158061130857508260ff166001145b6113435760405162461bcd60e51b81526004018080602001828103825260268152602001806122116026913960400191505060405180910390fd5b6001600160a01b03821661135657600080fd5b60005b8681101561139a5761139288888381811061137057fe5b9050602002013587878481811061138357fe5b90506020020135868686611c04565b600101611359565b50506001606855505050505050565b606a5481565b60035460009060049063ffffffff16606481106113c857fe5b0154905090565b600481606481106113dc57fe5b0154905081565b606481565b60026068541415611440576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026068556000868152606f602052604090205460ff16156114a9576040805162461bcd60e51b815260206004820152601f60248201527f546865206e6f746520686173206265656e20616c7265616479207370656e7400604482015290519081900360640190fd5b6114b287610a79565b611503576040805162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f7400000000604482015290519081900360640190fd5b60008181526072602052604090205460ff16600114801561153d57506000818152607360205260409020546001600160a01b038681169116145b80611557575060008181526072602052604090205460ff16155b6115925760405162461bcd60e51b81526004018080602001828103825260278152602001806122b76027913960400191505060405180910390fd5b6000818152607160205260409020546115f2576040805162461bcd60e51b815260206004820152601f60248201527f4e6f2062616c616e636520616d6f756e74206f6620746869732070726f6f6600604482015290519081900360640190fd5b600081815260716020526040812054831061161b5760008281526071602052604090205461161d565b825b905060008111611674576040805162461bcd60e51b815260206004820152601d60248201527f526566756e6420616d6f756e742063616e206e6f74206265207a65726f000000604482015290519081900360640190fd5b6000828152607460205260409020544210156116c15760405162461bcd60e51b815260040180806020018281038252602d815260200180612378602d913960400191505060405180910390fd5b838110156117005760405162461bcd60e51b81526004018080602001828103825260258152602001806123036025913960400191505060405180910390fd5b606b546040805160c080820183528b8252602082018b90526001600160a01b038a81168385015289811660608401526080830189905260a08301889052925163695ef6f960e01b8152929093169263695ef6f9928e928e9290916004810191829160240190849080838360005b8381101561178557818101518382015260200161176d565b505050509050018281038252858582818152602001925080828437600081840152601f19601f820116905080830192505050945050505050602060405180830381600087803b1580156117d757600080fd5b505af11580156117eb573d6000803e3d6000fd5b505050506040513d602081101561180157600080fd5b505161184d576040805162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b604482015290519081900360640190fd5b60008281526072602052604081205460ff1660011461186c5786611885565b6000838152607360205260409020546001600160a01b03165b606d549091506118a19082906001600160a01b03168785611d91565b6000838152607160205260409020546118c0908363ffffffff611ba716565b6000848152607160205260409020556069546118e2908363ffffffff611ba716565b60695560008381526071602052604090205415611900576000611903565b60015b6000898152606f6020908152604091829020805460ff19169315159390931790925580516001600160a01b038a811682529281018b9052808201889052606081018590529051918816917f6d7aac54bd3d1c91db3b1fd7b8d6cb45324ad6b5e373c0f0ea4d7b2606c4c2c8916080908290030190a250506001606855505050505050505050565b6000908152606f602052604090205460ff1690565b600281815481106119ac57fe5b600091825260209091200154905081565b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b600181815481106119ac57fe5b6075546001600160a01b031681565b600354600160201b900463ffffffff1681565b60035460008054909163ffffffff600160201b909104811691811660020a16811415611a6d5760405162461bcd60e51b815260040180806020018281038252602f815260200180612237602f913960400191505060405180910390fd5b6003805463ffffffff600160201b80830482166001019091160267ffffffff000000001990911617905582600080805b60005463ffffffff9081169082161015611b455760018516611b015783925060028163ffffffff1681548110611acf57fe5b906000526020600020015491508360018263ffffffff1681548110611af057fe5b600091825260209091200155611b25565b60018163ffffffff1681548110611b1457fe5b906000526020600020015492508391505b611b2f838361086b565b9350600263ffffffff8616049450600101611a9d565b5060035460649063ffffffff908116600101166003805463ffffffff19169290910663ffffffff908116929092179081905584916004911660648110611b8757fe5b01555050600354600160201b900463ffffffff1660001901949350505050565b600082821115611bfe576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b60008481526070602052604090205460ff1615611c525760405162461bcd60e51b81526004018080602001828103825260218152602001806123c56021913960400191505060405180910390fd5b6000611c5d85611a10565b9050611c6886611db3565b6000858152607060209081526040808320805460ff199081166001908117909255607184528285208b905560729093529220805460ff881692168217905514611cb15733611cb3565b825b600086815260736020526040902080546001600160a01b0319166001600160a01b0392909216919091179055428210611cec5781611cee565b425b600086815260746020526040902055606954611d10908763ffffffff611dfe16565b606955606a54611d26908763ffffffff611dfe16565b606a556040805163ffffffff8316815242602082015260ff8616818301526001600160a01b038516606082015260808101849052905186917ff052b28ca720e670068c23c54488dc5b4db3ed42fde7c3fd2d0ea7aee06406eb919081900360a00190a2505050505050565b611d9d84838303611e5f565b8115611dad57611dad8383611e5f565b50505050565b3415611df05760405162461bcd60e51b81526004018080602001828103825260308152602001806123e66030913960400191505060405180910390fd5b611dfb33308361202a565b50565b600082820183811015611e58576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b607554604080516001600160a01b038581166024830152604480830186905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b178152925182516000956060959316939282918083835b60208310611edc5780518252601f199092019160209182019101611ebd565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611f3e576040519150601f19603f3d011682016040523d82523d6000602084013e611f43565b606091505b509150915081611f8e576040805162461bcd60e51b81526020600482015260116024820152706e6f7420656e6f75676820746f6b656e7360781b604482015290519081900360640190fd5b805115611dad578051602014611fd55760405162461bcd60e51b815260040180806020018281038252602a815260200180612266602a913960400191505060405180910390fd5b808060200190516020811015611fea57600080fd5b5051915081611dad5760405162461bcd60e51b81526004018080602001828103825260278152602001806122906027913960400191505060405180910390fd5b607554604080516001600160a01b0386811660248301528581166044830152606480830186905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b178152925182516000956060959316939282918083835b602083106120af5780518252601f199092019160209182019101612090565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612111576040519150601f19603f3d011682016040523d82523d6000602084013e612116565b606091505b50915091508161216d576040805162461bcd60e51b815260206004820152601960248201527f6e6f7420656e6f75676820616c6c6f77656420746f6b656e7300000000000000604482015290519081900360640190fd5b8051156122095780516020146121b45760405162461bcd60e51b815260040180806020018281038252602a815260200180612266602a913960400191505060405180910390fd5b8080602001905160208110156121c957600080fd5b50519150816122095760405162461bcd60e51b815260040180806020018281038252602f815260200180612349602f913960400191505060405180910390fd5b505050505056fe546865726520617265206f6e6c79203220636865717565207374617475733a2030206f7220314d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656166732063616e20626520616464656464617461206c656e6774682073686f756c64206265206569746865722030206f722033322062797465736e6f7420656e6f75676820746f6b656e732e20546f6b656e2072657475726e732066616c73652e526563697069656e74206973206e6f7420746865206f726967696e616c20726563697069656e74546865206e657720636f6d6d69746d656e7420686173206265656e207375626d6974746564526566756e6420616d6f756e742073686f756c64206265206d6f7265207468616e206665655f72696768742073686f756c6420626520696e7369646520746865206669656c646e6f7420656e6f75676820616c6c6f77656420746f6b656e732e20546f6b656e2072657475726e732066616c73652e546865206465706f736974206973206c6f636b656420756e74696c207468652065666665637469766554696d6530644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000154686520636f6d6d69746d656e7420686173206265656e207375626d69747465644554482076616c756520697320737570706f73656420746f206265203020666f7220455243323020696e7374616e63654f6e6c79206f70657261746f722063616e2063616c6c20746869732066756e6374696f6e2e53656e646572206973206e6f7420746865206f726967696e616c20726563697069656e74a265627a7a7231582073aaebdcffd53cc5de5656edc2bce558b5136c08cf50c553b5efd1ff2f5c2f3a64736f6c63430005110032",
  "sourceMap": "728:2245:0:-;;;1430:34:2;;;-1:-1:-1;;;;;;1468:27:2;;;1463:1;977:30:10;;;;1040:31;;788:274:0;5:2:-1;;;;30:1;27;20:12;5:2;788:274:0;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;788:274:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1646:15:2;;;1638:67;;;;-1:-1:-1;;;1638:67:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1733:2;1719:11;:16;;;1711:63;;;;-1:-1:-1;;;1711:63:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1780:6;:20;;-1:-1:-1;;1780:20:2;;;;;;;1854:5;27:10:-1;;-1:-1;23:18;;;45:23;;;1088:77:2;-1:-1:-1;;;;;;;;;;;1854:23:2;;;;;;27:10:-1;;23:18;;;45:23;;1883:32:2;;;;-1:-1:-1;;;;;;;;;;;1883:32:2;;;;;;1922:175;1945:6;;;;;;1941:10;;;;1922:175;;;1980:39;1994:11;;-1:-1:-1;;;;;1980:13:2;:39;:::i;:::-;2027:5;27:10:-1;;39:1;23:18;;;45:23;;;-1:-1;;;;;;;;;;;2027:23:2;;;;27:10:-1;;23:18;;;45:23;;-1:-1;2058:32:2;;;-1:-1:-1;;;;;;;;;;;2058:32:2;;;;1966:53;;-1:-1:-1;1953:3:2;1922:175;;;-1:-1:-1;2114:39:2;2128:11;;-1:-1:-1;;;;;2114:13:2;:39;:::i;:::-;2103:5;:50;-1:-1:-1;;1629:1:8;1744:7;:22;2654:17:10;2646:67;;;;-1:-1:-1;;;2646:67:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2723:8;:20;;-1:-1:-1;;;;;;2723:20:10;;;-1:-1:-1;;;;;2723:20:10;;;;;;;2753:8;:20;;;;;;;;;;;;;;2783:12;:28;;;;2821:10;:24;;;;;;;;;;;;;;-1:-1:-1;1043:5:0;:14;;;;;;;;;;;;;;;-1:-1:-1;728:2245:0;;-1:-1:-1;;;;728:2245:0;2230:445:2;2305:7;-1:-1:-1;;;;;;;;;;;2328:27:2;;2320:72;;;;;-1:-1:-1;;;2320:72:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2406:28:2;;2398:74;;;;-1:-1:-1;;;2398:74:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2538:23;;;-1:-1:-1;;;2538:23:2;;;;;;;;2478:9;2538:23;;;;;;;;2498:5;;2478:9;;2538:6;;:17;;:23;;;;;;;;;;:6;:23;;;5:2:-1;;;;30:1;27;20:12;5:2;2538:23:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2538:23:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2538:23:2;;;;;;;;;-1:-1:-1;2538:23:2;-1:-1:-1;;;;;;;;;;;;2589:6:2;2578:1;2571:38;2567:42;;2624:6;:17;2642:1;2645;2624:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2624:23:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2624:23:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2624:23:2;;2230:445;-1:-1:-1;;;;;2230:445:2:o;728:2245:0:-;;;;;;;",
  "deployedSourceMap": "728:2245:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12115:108:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12115:108:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12115:108:10;-1:-1:-1;;;;;12115:108:10;;:::i;:::-;;977:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;977:30:10;;;:::i;:::-;;;;;;;;;;;;;;;;12290:108;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12290:108:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12290:108:10;-1:-1:-1;;;;;12290:108:10;;:::i;1122:25::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1122:25:10;;;:::i;:::-;;;;-1:-1:-1;;;;;1122:25:10;;;;;;;;;;;;;;2230:445:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2230:445:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2230:445:2;;;;;;;:::i;933:114::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;933:114:2;;;:::i;1209:20::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1209:20:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1313:23:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1313:23:10;;;:::i;3553:342:2:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3553:342:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3553:342:2;;:::i;:::-;;;;;;;;;;;;;;;;;;8517:2617:10;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;8517:2617:10;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;8517:2617:10;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8517:2617:10;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8517:2617:10;;-1:-1:-1;8517:2617:10;-1:-1:-1;8517:2617:10;;;;;;;;-1:-1:-1;;;;;8517:2617:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1377:27::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1377:27:10;;;:::i;1430:34:2:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1430:34:2;;;:::i;11942:119:10:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11942:119:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11942:119:10;-1:-1:-1;;;;;11942:119:10;;:::i;11379:327::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11379:327:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11379:327:10;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;11379:327:10;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;11379:327:10;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;11379:327:10;;-1:-1:-1;11379:327:10;-1:-1:-1;11379:327:10;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;11379:327:10;;;;;;;;;;;;;;;;;3218:506;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3218:506:10;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3218:506:10;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3218:506:10;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3218:506:10;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3218:506:10;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3218:506:10;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3218:506:10;;-1:-1:-1;3218:506:10;-1:-1:-1;3218:506:10;;;;;-1:-1:-1;;;;;3218:506:10;;;;;;;;;;:::i;1040:31::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1040:31:10;;;:::i;3941:93:2:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3941:93:2;;;:::i;1549:39::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1549:39:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1549:39:2;;:::i;1499:46::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1499:46:2;;;:::i;5727:1859:10:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;5727:1859:10;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;5727:1859:10;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5727:1859:10;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;5727:1859:10;;-1:-1:-1;5727:1859:10;-1:-1:-1;5727:1859:10;;;;;;;;-1:-1:-1;;;;;5727:1859:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;11192:122::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11192:122:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11192:122:10;;:::i;1404:22:2:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1404:22:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1404:22:2;;:::i;1051:114::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1051:114:2;;;:::i;1369:31::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1369:31:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1369:31:2;;:::i;763:20:0:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;763:20:0;;;:::i;1468:27:2:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1468:27:2;;;:::i;12115:108:10:-;1790:8;;-1:-1:-1;;;;;1790:8:10;1776:10;:22;1768:72;;;;-1:-1:-1;;;1768:72:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12193:8;:23;;-1:-1:-1;;;;;;12193:23:10;-1:-1:-1;;;;;12193:23:10;;;;;;;;;;12115:108::o;977:30::-;;;;:::o;12290:108::-;1790:8;;-1:-1:-1;;;;;1790:8:10;1776:10;:22;1768:72;;;;-1:-1:-1;;;1768:72:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12367:10;:24;;-1:-1:-1;;;;;;12367:24:10;-1:-1:-1;;;;;12367:24:10;;;;;;;;;;12290:108::o;1122:25::-;;;-1:-1:-1;;;;;1122:25:10;;:::o;2230:445:2:-;2305:7;-1:-1:-1;;;;;;;;;;;2328:27:2;;2320:72;;;;;-1:-1:-1;;;2320:72:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2406:28:2;;2398:74;;;;-1:-1:-1;;;2398:74:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2538:23;;;-1:-1:-1;;;2538:23:2;;;;;;;;2478:9;2538:23;;;;;;;;2498:5;;2478:9;;2538:6;;:17;;:23;;;;;;;;;;:6;:23;;;5:2:-1;;;;30:1;27;20:12;5:2;2538:23:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2538:23:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2538:23:2;;;;;;;;;-1:-1:-1;2538:23:2;-1:-1:-1;;;;;;;;;;;;2589:6:2;2578:1;2571:38;2567:42;;2624:6;:17;2642:1;2645;2624:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2624:23:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2624:23:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2624:23:2;;2230:445;-1:-1:-1;;;;;2230:445:2:o;933:114::-;-1:-1:-1;;;;;;;;;;;933:114:2;:::o;1209:20::-;;;;;;:::o;1313:23:10:-;;;-1:-1:-1;;;;;1313:23:10;;:::o;3553:342:2:-;3609:4;3625:10;3621:43;;-1:-1:-1;3652:5:2;3645:12;;3621:43;3680:16;;;;3702:171;3726:5;3732:1;3726:8;;;;;;;;;;;3717:5;:17;3713:53;;;3753:4;3746:11;;;;;3713:53;3777:6;;;3773:52;;-1:-1:-1;1542:3:2;3773:52;3855:16;;-1:-1:-1;;3832:3:2;;;;3855:16;3850:21;;;3855:16;;3850:21;;3702:171;;3885:5;3878:12;;;3553:342;;;;:::o;8517:2617:10:-;1672:1:8;2261:7;;:19;;2253:63;;;;;-1:-1:-1;;;2253:63:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;1672:1;2391:7;:18;9123:27:10;;;;:11;:27;;;;;;;;9115:67;;;;;-1:-1:-1;;;9115:67:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;9201:27;;;;:11;:27;;;;;;;;9200:28;9192:78;;;;-1:-1:-1;;;9192:78:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9289:31;;;;:15;:31;;;;;;;;9288:32;9280:76;;;;;-1:-1:-1;;;9280:76:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;9374:18;9386:5;9374:11;:18::i;:::-;9366:59;;;;;-1:-1:-1;;;9366:59:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;9469:1;9443:23;;;:7;:23;;;;;;9435:71;;;;;-1:-1:-1;;;9435:71:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;9516:20;9549:23;;;:7;:23;;;;;;9539:33;;:69;;9585:23;;;;:7;:23;;;;;;9539:69;;;9575:7;9539:69;9516:92;;9668:1;9653:12;:16;9645:58;;;;;-1:-1:-1;;;9645:58:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;9722:29;;;;:13;:29;;;;;;;;;:34;:78;;;;-1:-1:-1;9774:26:10;;;;:10;:26;;;;;;-1:-1:-1;;;;;9774:26:10;9760:10;:40;9722:78;9721:118;;;-1:-1:-1;9805:29:10;;;;:13;:29;;;;;;;;:34;9721:118;9713:168;;;;-1:-1:-1;;;9713:168:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9900:8;;;;;;;;;-1:-1:-1;;;;;9900:8:10;-1:-1:-1;;;;;9900:20:10;;9921:6;;9900:228;;;;;;;;9951:5;9943:14;;9900:228;;;;9980:14;9972:23;;9900:228;;;;10018:10;-1:-1:-1;;;;;10010:19:10;9900:228;;;;10051:8;-1:-1:-1;;;;;10043:17:10;9900:228;;;;10083:12;10075:21;;9900:228;;;;10110:7;9900:228;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;9900:228:10;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;9900:228:10;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9900:228:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9900:228:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9900:228:10;9892:266;;;;;-1:-1:-1;;;9892:266:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;10208:20;10231:23;10239:14;10231:7;:23::i;:::-;10208:46;;10284:1;10267:14;:18;:71;;;;-1:-1:-1;10308:30:10;;;;:14;:30;;;;;;10289:15;:49;;10267:71;10264:214;;;10340:30;;;;:14;:30;;;;;:47;;;10264:214;;;10448:30;;;;:14;:30;;;;;;;10415;;;;;:63;10264:214;10514:27;;;;:11;:27;;;;;;;;:34;;-1:-1:-1;;10514:34:10;;;10544:4;10514:34;;;;;;10558:7;:23;;;;;:33;;;10601:13;:29;;;;;:44;;10514:34;10601:44;;;;;;;;10684:17;:43;;10717:10;10684:43;;;10704:10;10684:43;10655:26;;;;:10;:26;;;;;;;;:72;;-1:-1:-1;;;;;;10655:72:10;-1:-1:-1;;;;;10655:72:10;;;;;;;;;;;10796:23;;;:7;:23;;;;:41;;10824:12;10796:27;:41::i;:::-;10770:23;;;;:7;:23;;;;;:67;;;10881:28;:43;;10919:5;10881:43;;;10912:4;10881:43;10847:31;;;;:15;:31;;;;;;;;;:77;;;;;-1:-1:-1;;10847:77:10;;;;;;;;;;10948:97;;;;;;;10987:15;10948:97;;;;;;;10847:77;10948:97;;;;;;-1:-1:-1;;;;;10948:97:10;;;;;;;;;;;;;10956:14;;10948:97;;;;;;;;;;11060:67;;;11079:3;11060:67;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11060:67:10;;;;;;;;;;;;;-1:-1:-1;;1629:1:8;2564:7;:22;-1:-1:-1;;;;;;;;;;;8517:2617:10:o;1377:27::-;;;;:::o;1430:34:2:-;;;;;;:::o;11942:119:10:-;1790:8;;-1:-1:-1;;;;;1790:8:10;1776:10;:22;1768:72;;;;-1:-1:-1;;;1768:72:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12020:8;:34;;-1:-1:-1;;;;;;12020:34:10;-1:-1:-1;;;;;12020:34:10;;;;;;;;;;11942:119::o;11379:327::-;11499:35;;;;;;;;;;;;;;;;11460:19;;11510:16;11499:35;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;11499:35:10;-1:-1:-1;11491:43:10;-1:-1:-1;11548:6:10;11544:156;11560:27;;;11544:156;;;11612:28;11620:16;;11637:1;11620:19;;;;;;;;;;;;;11612:7;:28::i;:::-;11608:82;;;11671:4;11660:5;11666:1;11660:8;;;;;;;;:15;;;:8;;;;;;;;;;;:15;11608:82;11589:3;;11544:156;;;;11379:327;;;;:::o;3218:506::-;1672:1:8;2261:7;;:19;;2253:63;;;;;-1:-1:-1;;;2253:63:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;1672:1;2391:7;:18;3427:17:10;;;;;:38;;;3448:12;:17;;3464:1;3448:17;3427:38;3419:89;;;;-1:-1:-1;;;3419:89:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3526:26:10;;3518:35;;;;;;3572:9;3568:150;3587:19;;;3568:150;;;3627:80;3636:8;;3645:1;3636:11;;;;;;;;;;;;;3649:12;;3662:1;3649:15;;;;;;;;;;;;;3666:12;3680:10;3692:14;3627:8;:80::i;:::-;3608:3;;3568:150;;;-1:-1:-1;;1629:1:8;2564:7;:22;-1:-1:-1;;;;;;3218:506:10:o;1040:31::-;;;;:::o;3941:93:2:-;4012:16;;3984:7;;4006:5;;4012:16;;4006:23;;;;;;;;;3999:30;;3941:93;:::o;1549:39::-;;;;;;;;;;;;;-1:-1:-1;1549:39:2;:::o;1499:46::-;1542:3;1499:46;:::o;5727:1859:10:-;1672:1:8;2261:7;;:19;;2253:63;;;;;-1:-1:-1;;;2253:63:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;1672:1;2391:7;:18;6039:31:10;;;;:15;:31;;;;;;;;6038:32;6030:76;;;;;-1:-1:-1;;;6030:76:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;6124:18;6136:5;6124:11;:18::i;:::-;6116:59;;;;;-1:-1:-1;;;6116:59:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;6227:26;;;;:13;:26;;;;;;;;;:31;:72;;;;-1:-1:-1;6276:23:10;;;;:10;:23;;;;;;-1:-1:-1;;;;;6262:37:10;;;6276:23;;6262:37;6227:72;6226:109;;;-1:-1:-1;6304:26:10;;;;:13;:26;;;;;;;;:31;6226:109;6218:162;;;;-1:-1:-1;;;6218:162:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6421:1;6398:20;;;:7;:20;;;;;;6390:68;;;;;-1:-1:-1;;;6390:68:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;6468:20;6501;;;:7;:20;;;;;;6491:30;;:63;;6534:20;;;;:7;:20;;;;;;6491:63;;;6524:7;6491:63;6468:86;;6614:1;6599:12;:16;6591:58;;;;;-1:-1:-1;;;6591:58:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;6686:27;;;;:14;:27;;;;;;6667:15;:46;;6659:104;;;;-1:-1:-1;;;6659:104:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6797:4;6781:12;:20;;6773:70;;;;-1:-1:-1;;;6773:70:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6862:8;;:212;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6971:19:10;;;6862:212;;;;7005:17;;;6862:212;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6862:212:10;;:8;;;;;:20;;6883:6;;;;6862:212;;;;;;;;;;;;;;;;:8;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6862:212:10;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6862:212:10;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6862:212:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6862:212:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6862:212:10;6854:247;;;;;-1:-1:-1;;;6854:247:10;;;;;;;;;;;;-1:-1:-1;;;6854:247:10;;;;;;;;;;;;;;;7116:25;7144:26;;;:13;:26;;;;;;;;;:31;:70;;7204:10;7144:70;;;7178:23;;;;:10;:23;;;;;;-1:-1:-1;;;;;7178:23:10;7144:70;7252:10;;7116:98;;-1:-1:-1;7224:59:10;;7116:98;;-1:-1:-1;;;;;7252:10:10;7264:4;7270:12;7224:16;:59::i;:::-;7321:20;;;;:7;:20;;;;;;:38;;7346:12;7321:38;:24;:38;:::i;:::-;7298:20;;;;:7;:20;;;;;:61;7383:11;;:29;;7399:12;7383:29;:15;:29;:::i;:::-;7369:11;:43;7456:20;;;;:7;:20;;;;;;:25;:40;;7491:5;7456:40;;;7484:4;7456:40;7422:31;;;;:15;:31;;;;;;;;;:74;;-1:-1:-1;;7422:74:10;;;;;;;;;;;7511:68;;-1:-1:-1;;;;;7511:68:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1629:1:8;2564:7;:22;-1:-1:-1;;;;;;;;;5727:1859:10:o;11192:122::-;11253:4;11276:31;;;:15;:31;;;;;;;;;11192:122::o;1404:22:2:-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1404:22:2;:::o;1051:114::-;1088:77;1051:114;:::o;1369:31::-;;;;;;;;;;763:20:0;;;-1:-1:-1;;;;;763:20:0;;:::o;1468:27:2:-;;;-1:-1:-1;;;1468:27:2;;;;;:::o;2679:802::-;2770:9;;2728:12;2820:6;;2728:12;;2770:9;-1:-1:-1;;;2770:9:2;;;;;;2820:6;;2816:1;2809:17;2793:33;;;;2785:93;;;;-1:-1:-1;;;2785:93:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2884:9;:14;;;-1:-1:-1;;;2884:14:2;;;;;2897:1;2884:14;;;;;-1:-1:-1;;2884:14:2;;;;;;2931:5;-1:-1:-1;;;2980:355:2;3003:6;;;;;;2999:10;;;;2980:355;;;3028:16;;;3024:225;;3068:16;3061:23;;3102:5;3108:1;3102:8;;;;;;;;;;;;;;;;;;3094:16;;3141;3121:14;3136:1;3121:17;;;;;;;;;;;;;;;;;;;:36;3024:225;;;3189:14;3204:1;3189:17;;;;;;;;;;;;;;;;;;3182:24;;3224:16;3216:24;;3024:225;3276:26;3290:4;3296:5;3276:13;:26::i;:::-;3257:45;-1:-1:-1;3327:1:2;3311:17;;;;;-1:-1:-1;3011:3:2;;2980:355;;;-1:-1:-1;3361:16:2;;1542:3;;3360:42;3361:16;;;;:20;3360:42;3341:16;:61;;-1:-1:-1;;3341:61:2;3360:42;;;;3341:61;;;;;;;;;;;;3434:16;;3408:5;;3414:16;3408:23;;;;;;;;:42;-1:-1:-1;;3463:9:2;;-1:-1:-1;;;3463:9:2;;;;-1:-1:-1;;3463:13:2;;2679:802;-1:-1:-1;;;;2679:802:2:o;231:179:9:-;289:7;321:1;316;:6;;308:49;;;;;-1:-1:-1;;;308:49:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;379:5:9;;;231:179::o;4269:848:10:-;4425:24;;;;:11;:24;;;;;;;;4424:25;4416:71;;;;-1:-1:-1;;;4416:71:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4498:20;4521;4529:11;4521:7;:20::i;:::-;4498:43;;4551:24;4567:7;4551:15;:24::i;:::-;4594;;;;:11;:24;;;;;;;;:31;;-1:-1:-1;;4594:31:10;;;4621:4;4594:31;;;;;;4635:7;:20;;;;;:30;;;4675:13;:26;;;;;:41;;4594:31;4675:41;;;;;;;;4752:17;:43;;4785:10;4752:43;;;4772:10;4752:43;4726:23;;;;:10;:23;;;;;:69;;-1:-1:-1;;;;;;4726:69:10;-1:-1:-1;;;;;4726:69:10;;;;;;;;;;4852:15;4835:32;;:67;;4888:14;4835:67;;;4870:15;4835:67;4805:27;;;;:14;:27;;;;;:97;4926:11;;:24;;4942:7;4926:24;:15;:24;:::i;:::-;4912:11;:38;4975:12;;:25;;4992:7;4975:25;:16;:25;:::i;:::-;4960:12;:40;5016:94;;;;;;;;5052:15;5016:94;;;;;;;;;;;-1:-1:-1;;;;;5016:94:10;;;;;;;;;;;;;;5024:11;;5016:94;;;;;;;;;;4269:848;;;;;;:::o;1271:558:0:-;1480:46;1499:10;1521:4;1511:7;:14;1480:18;:46::i;:::-;1536:8;;1532:63;;1554:34;1573:8;1583:4;1554:18;:34::i;:::-;1271:558;;;;:::o;1066:201::-;1131:9;:14;1123:75;;;;-1:-1:-1;;;1123:75:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1204:58;1227:10;1247:4;1254:7;1204:22;:58::i;:::-;1066:201;:::o;49:176:9:-;107:7;138:5;;;161:6;;;;153:46;;;;;-1:-1:-1;;;153:46:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;217:1;49:176;-1:-1:-1;;;49:176:9:o;2427:544:0:-;2536:5;;2547:63;;;-1:-1:-1;;;;;2547:63:0;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;2547:63:0;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;2536:75:0;;;;2501:12;;2515:17;;2536:5;;;2547:63;2536:75;;;;25:18:-1;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2536:75:0;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;2500:111:0;;;;2625:7;2617:37;;;;;-1:-1:-1;;;2617:37:0;;;;;;;;;;;;-1:-1:-1;;;2617:37:0;;;;;;;;;;;;;;;2754:11;;:15;2750:217;;2787:4;:11;2802:2;2787:17;2779:72;;;;-1:-1:-1;;;2779:72:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2880:4;2869:24;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2869:24:0;;-1:-1:-1;2869:24:0;2901:59;;;;-1:-1:-1;;;2901:59:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1833:590;1961:5;;1972:74;;;-1:-1:-1;;;;;1972:74:0;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1972:74:0;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;1961:86:0;;;;1926:12;;1940:17;;1961:5;;;1972:74;1961:86;;;;25:18:-1;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1961:86:0;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;1925:122:0;;;;2061:7;2053:45;;;;;-1:-1:-1;;;2053:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;2198:11;;:15;2194:225;;2231:4;:11;2246:2;2231:17;2223:72;;;;-1:-1:-1;;;2223:72:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2324:4;2313:24;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2313:24:0;;-1:-1:-1;2313:24:0;2345:67;;;;-1:-1:-1;;;2345:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1833:590;;;;;:::o",
  "source": "/**\n *  $$$$$$\\  $$\\                 $$\\                           \n * $$  __$$\\ $$ |                $$ |                          \n * $$ /  \\__|$$$$$$$\\   $$$$$$\\  $$ |  $$\\  $$$$$$\\   $$$$$$\\  \n * \\$$$$$$\\  $$  __$$\\  \\____$$\\ $$ | $$  |$$  __$$\\ $$  __$$\\ \n *  \\____$$\\ $$ |  $$ | $$$$$$$ |$$$$$$  / $$$$$$$$ |$$ |  \\__|\n * $$\\   $$ |$$ |  $$ |$$  __$$ |$$  _$$<  $$   ____|$$ |      \n * \\$$$$$$  |$$ |  $$ |\\$$$$$$$ |$$ | \\$$\\ \\$$$$$$$\\ $$ |      \n *  \\______/ \\__|  \\__| \\_______|\\__|  \\__| \\_______|\\__|\n * $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n * ____________________________________________________________\n*/\n\npragma solidity 0.5.17;\n// pragma experimental ABIEncoderV2;\n\nimport \"./Shaker.sol\";\n\ncontract ERC20Shaker is Shaker {\n  address public token;\n\n  constructor(\n    IVerifier _verifier,\n    uint256 _denomination,\n    uint32 _merkleTreeHeight,\n    address _operator,\n    address _feeAddress,\n    address _token\n  ) Shaker(_verifier, _denomination, _merkleTreeHeight, _operator, _feeAddress) public {\n    token = _token;\n  }\n\n  function _processDeposit(uint256 _amount) internal {\n    require(msg.value == 0, \"ETH value is supposed to be 0 for ERC20 instance\");\n    _safeErc20TransferFrom(msg.sender, address(this), _amount);\n  }\n\n  function _processWithdraw(address payable _recipient, address _relayer, uint256 _fee, uint256 _refund) internal {\n    // require(msg.value == _refund, \"Incorrect refund amount received by the contract\");\n\n    _safeErc20Transfer(_recipient, _refund - _fee);\n    if (_fee > 0) {\n      _safeErc20Transfer(_relayer, _fee);\n    }\n\n    // if (_refund > 0) {\n    //   (bool success, ) = _recipient.call.value(_refund)(\"\");\n    //   if (!success) {\n    //     // let's return _refund back to the relayer\n    //     _relayer.transfer(_refund);\n    //   }\n    // }\n  }\n\n  function _safeErc20TransferFrom(address _from, address _to, uint256 _amount) internal {\n    (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd /* transferFrom */, _from, _to, _amount));\n    require(success, \"not enough allowed tokens\");\n\n    // if contract returns some data lets make sure that is `true` according to standard\n    if (data.length > 0) {\n      require(data.length == 32, \"data length should be either 0 or 32 bytes\");\n      success = abi.decode(data, (bool));\n      require(success, \"not enough allowed tokens. Token returns false.\");\n    }\n  }\n\n  function _safeErc20Transfer(address _to, uint256 _amount) internal {\n    (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb /* transfer */, _to, _amount));\n    require(success, \"not enough tokens\");\n\n    // if contract returns some data lets make sure that is `true` according to standard\n    if (data.length > 0) {\n      require(data.length == 32, \"data length should be either 0 or 32 bytes\");\n      success = abi.decode(data, (bool));\n      require(success, \"not enough tokens. Token returns false.\");\n    }\n  }\n}\n",
  "sourcePath": "/Users/guqianfeng/web/my_dapps/hunbi/tornado-core/contracts/ERC20Shaker.sol",
  "ast": {
    "absolutePath": "/Users/guqianfeng/web/my_dapps/hunbi/tornado-core/contracts/ERC20Shaker.sol",
    "exportedSymbols": {
      "ERC20Shaker": [
        199
      ]
    },
    "id": 200,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "642:23:0"
      },
      {
        "absolutePath": "/Users/guqianfeng/web/my_dapps/hunbi/tornado-core/contracts/Shaker.sol",
        "file": "./Shaker.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 200,
        "sourceUnit": 1862,
        "src": "704:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "Shaker",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1861,
              "src": "752:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Shaker_$1861",
                "typeString": "contract Shaker"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "752:6:0"
          }
        ],
        "contractDependencies": [
          671,
          890,
          1861
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 199,
        "linearizedBaseContracts": [
          199,
          1861,
          890,
          671
        ],
        "name": "ERC20Shaker",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 199,
            "src": "763:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "763:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 32,
              "nodeType": "Block",
              "src": "1037:25:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 28,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1043:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 29,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "1051:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1043:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 31,
                  "nodeType": "ExpressionStatement",
                  "src": "1043:14:0"
                }
              ]
            },
            "documentation": null,
            "id": 33,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 21,
                    "name": "_verifier",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8,
                    "src": "961:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVerifier_$1040",
                      "typeString": "contract IVerifier"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 22,
                    "name": "_denomination",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10,
                    "src": "972:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 23,
                    "name": "_merkleTreeHeight",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12,
                    "src": "987:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 24,
                    "name": "_operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14,
                    "src": "1006:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 25,
                    "name": "_feeAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16,
                    "src": "1017:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 26,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 20,
                  "name": "Shaker",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1861,
                  "src": "954:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Shaker_$1861_$",
                    "typeString": "type(contract Shaker)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "954:75:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "name": "_verifier",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "805:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVerifier_$1040",
                    "typeString": "contract IVerifier"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7,
                    "name": "IVerifier",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1040,
                    "src": "805:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVerifier_$1040",
                      "typeString": "contract IVerifier"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10,
                  "name": "_denomination",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "830:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "830:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12,
                  "name": "_merkleTreeHeight",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "857:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "857:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14,
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "887:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "887:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16,
                  "name": "_feeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "910:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "910:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "935:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "935:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "799:154:0"
            },
            "returnParameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1037:0:0"
            },
            "scope": 199,
            "src": "788:274:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 55,
              "nodeType": "Block",
              "src": "1117:150:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 42,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 39,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3897,
                            "src": "1131:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 40,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1131:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 41,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1144:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1131:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4554482076616c756520697320737570706f73656420746f206265203020666f7220455243323020696e7374616e6365",
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1147:50:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b14b0818f1fdc710b92ba7e1ce725992b43e47a5b220b1b890f352eeac2e1d5e",
                          "typeString": "literal_string \"ETH value is supposed to be 0 for ERC20 instance\""
                        },
                        "value": "ETH value is supposed to be 0 for ERC20 instance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b14b0818f1fdc710b92ba7e1ce725992b43e47a5b220b1b890f352eeac2e1d5e",
                          "typeString": "literal_string \"ETH value is supposed to be 0 for ERC20 instance\""
                        }
                      ],
                      "id": 38,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3900,
                        3901
                      ],
                      "referencedDeclaration": 3901,
                      "src": "1123:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1123:75:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "1123:75:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 47,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3897,
                          "src": "1227:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 48,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1227:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 50,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3923,
                            "src": "1247:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Shaker_$199",
                              "typeString": "contract ERC20Shaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Shaker_$199",
                              "typeString": "contract ERC20Shaker"
                            }
                          ],
                          "id": 49,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1239:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1239:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 52,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "1254:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 46,
                      "name": "_safeErc20TransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 143,
                      "src": "1204:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1204:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "1204:58:0"
                }
              ]
            },
            "documentation": null,
            "id": 56,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processDeposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "1091:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1091:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1090:17:0"
            },
            "returnParameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1117:0:0"
            },
            "scope": 199,
            "src": "1066:201:0",
            "stateMutability": "nonpayable",
            "superFunction": 1329,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 84,
              "nodeType": "Block",
              "src": "1383:446:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 68,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1499:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 69,
                          "name": "_refund",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "1511:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 70,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "1521:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1511:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 67,
                      "name": "_safeErc20Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 198,
                      "src": "1480:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1480:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "1480:46:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 74,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "1536:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 75,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1543:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1536:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 83,
                  "nodeType": "IfStatement",
                  "src": "1532:63:0",
                  "trueBody": {
                    "id": 82,
                    "nodeType": "Block",
                    "src": "1546:49:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 78,
                              "name": "_relayer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "1573:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 79,
                              "name": "_fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "1583:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 77,
                            "name": "_safeErc20Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "1554:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1554:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 81,
                        "nodeType": "ExpressionStatement",
                        "src": "1554:34:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 85,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processWithdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "1297:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1297:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "name": "_relayer",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "1325:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1325:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "1343:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1343:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64,
                  "name": "_refund",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "1357:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1357:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1296:77:0"
            },
            "returnParameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1383:0:0"
            },
            "scope": 199,
            "src": "1271:558:0",
            "stateMutability": "nonpayable",
            "superFunction": 1527,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 142,
              "nodeType": "Block",
              "src": "1919:504:0",
              "statements": [
                {
                  "assignments": [
                    95,
                    97
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 95,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 142,
                      "src": "1926:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 94,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1926:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 97,
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "scope": 142,
                      "src": "1940:17:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 96,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1940:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 108,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30783233623837326464",
                            "id": 102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1995:10:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_599290589_by_1",
                              "typeString": "int_const 599290589"
                            },
                            "value": "0x23b872dd"
                          },
                          {
                            "argumentTypes": null,
                            "id": 103,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87,
                            "src": "2026:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 104,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89,
                            "src": "2033:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 105,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91,
                            "src": "2038:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_599290589_by_1",
                              "typeString": "int_const 599290589"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 100,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3884,
                            "src": "1972:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1972:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1972:74:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 98,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "1961:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 99,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1961:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1961:86:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1925:122:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 110,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "2061:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f7420656e6f75676820616c6c6f77656420746f6b656e73",
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2070:27:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b31c8a8545ea674c554dd2f6bad7d7bd1dfe923a25150b76350dc6970bf3ff5c",
                          "typeString": "literal_string \"not enough allowed tokens\""
                        },
                        "value": "not enough allowed tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b31c8a8545ea674c554dd2f6bad7d7bd1dfe923a25150b76350dc6970bf3ff5c",
                          "typeString": "literal_string \"not enough allowed tokens\""
                        }
                      ],
                      "id": 109,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3900,
                        3901
                      ],
                      "referencedDeclaration": 3901,
                      "src": "2053:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2053:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "2053:45:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 114,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "2198:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2198:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2212:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2198:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 141,
                  "nodeType": "IfStatement",
                  "src": "2194:225:0",
                  "trueBody": {
                    "id": 140,
                    "nodeType": "Block",
                    "src": "2215:204:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 119,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 97,
                                  "src": "2231:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 120,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2231:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "3332",
                                "id": 121,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2246:2:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_32_by_1",
                                  "typeString": "int_const 32"
                                },
                                "value": "32"
                              },
                              "src": "2231:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "64617461206c656e6774682073686f756c64206265206569746865722030206f72203332206279746573",
                              "id": 123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2250:44:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_22b4652a1c8fbdfc6305c7ee289e87caf6a45e5ae327ee8f67eb64ba36d62560",
                                "typeString": "literal_string \"data length should be either 0 or 32 bytes\""
                              },
                              "value": "data length should be either 0 or 32 bytes"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_22b4652a1c8fbdfc6305c7ee289e87caf6a45e5ae327ee8f67eb64ba36d62560",
                                "typeString": "literal_string \"data length should be either 0 or 32 bytes\""
                              }
                            ],
                            "id": 118,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3900,
                              3901
                            ],
                            "referencedDeclaration": 3901,
                            "src": "2223:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2223:72:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 125,
                        "nodeType": "ExpressionStatement",
                        "src": "2223:72:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 126,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 95,
                            "src": "2303:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 129,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 97,
                                "src": "2324:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "id": 130,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2331:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bool_$",
                                      "typeString": "type(bool)"
                                    },
                                    "typeName": "bool"
                                  }
                                ],
                                "id": 131,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2330:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bool_$",
                                  "typeString": "type(bool)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_type$_t_bool_$",
                                  "typeString": "type(bool)"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 127,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3884,
                                "src": "2313:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "decode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2313:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2313:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2303:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 134,
                        "nodeType": "ExpressionStatement",
                        "src": "2303:34:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 136,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 95,
                              "src": "2353:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6e6f7420656e6f75676820616c6c6f77656420746f6b656e732e20546f6b656e2072657475726e732066616c73652e",
                              "id": 137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2362:49:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6cfae212a217874b58247660ff4d75d72aa825e8f2120480a7da09cf7efa221d",
                                "typeString": "literal_string \"not enough allowed tokens. Token returns false.\""
                              },
                              "value": "not enough allowed tokens. Token returns false."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6cfae212a217874b58247660ff4d75d72aa825e8f2120480a7da09cf7efa221d",
                                "typeString": "literal_string \"not enough allowed tokens. Token returns false.\""
                              }
                            ],
                            "id": 135,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3900,
                              3901
                            ],
                            "referencedDeclaration": 3901,
                            "src": "2345:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2345:67:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "2345:67:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 143,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeErc20TransferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "1865:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1865:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "1880:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1880:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "1893:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1893:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1864:45:0"
            },
            "returnParameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1919:0:0"
            },
            "scope": 199,
            "src": "1833:590:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 197,
              "nodeType": "Block",
              "src": "2494:477:0",
              "statements": [
                {
                  "assignments": [
                    151,
                    153
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 151,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 197,
                      "src": "2501:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 150,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2501:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 153,
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "scope": 197,
                      "src": "2515:17:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 152,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2515:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 163,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30786139303539636262",
                            "id": 158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2570:10:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2835717307_by_1",
                              "typeString": "int_const 2835717307"
                            },
                            "value": "0xa9059cbb"
                          },
                          {
                            "argumentTypes": null,
                            "id": 159,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 145,
                            "src": "2597:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 160,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 147,
                            "src": "2602:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2835717307_by_1",
                              "typeString": "int_const 2835717307"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 156,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3884,
                            "src": "2547:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2547:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2547:63:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 154,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "2536:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2536:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2536:75:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2500:111:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 165,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "2625:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f7420656e6f75676820746f6b656e73",
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2634:19:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73949bcdc07934e9395e82489bb22c4742e057960a2c090d38e53d68d3caf52a",
                          "typeString": "literal_string \"not enough tokens\""
                        },
                        "value": "not enough tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73949bcdc07934e9395e82489bb22c4742e057960a2c090d38e53d68d3caf52a",
                          "typeString": "literal_string \"not enough tokens\""
                        }
                      ],
                      "id": 164,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3900,
                        3901
                      ],
                      "referencedDeclaration": 3901,
                      "src": "2617:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2617:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "2617:37:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 169,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "2754:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2754:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2768:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2754:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 196,
                  "nodeType": "IfStatement",
                  "src": "2750:217:0",
                  "trueBody": {
                    "id": 195,
                    "nodeType": "Block",
                    "src": "2771:196:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 174,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 153,
                                  "src": "2787:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 175,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2787:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "3332",
                                "id": 176,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2802:2:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_32_by_1",
                                  "typeString": "int_const 32"
                                },
                                "value": "32"
                              },
                              "src": "2787:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "64617461206c656e6774682073686f756c64206265206569746865722030206f72203332206279746573",
                              "id": 178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2806:44:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_22b4652a1c8fbdfc6305c7ee289e87caf6a45e5ae327ee8f67eb64ba36d62560",
                                "typeString": "literal_string \"data length should be either 0 or 32 bytes\""
                              },
                              "value": "data length should be either 0 or 32 bytes"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_22b4652a1c8fbdfc6305c7ee289e87caf6a45e5ae327ee8f67eb64ba36d62560",
                                "typeString": "literal_string \"data length should be either 0 or 32 bytes\""
                              }
                            ],
                            "id": 173,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3900,
                              3901
                            ],
                            "referencedDeclaration": 3901,
                            "src": "2779:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2779:72:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 180,
                        "nodeType": "ExpressionStatement",
                        "src": "2779:72:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 181,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 151,
                            "src": "2859:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 184,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 153,
                                "src": "2880:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "id": 185,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2887:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bool_$",
                                      "typeString": "type(bool)"
                                    },
                                    "typeName": "bool"
                                  }
                                ],
                                "id": 186,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2886:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bool_$",
                                  "typeString": "type(bool)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_type$_t_bool_$",
                                  "typeString": "type(bool)"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 182,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3884,
                                "src": "2869:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "decode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2869:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2869:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2859:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 189,
                        "nodeType": "ExpressionStatement",
                        "src": "2859:34:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 191,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 151,
                              "src": "2909:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6e6f7420656e6f75676820746f6b656e732e20546f6b656e2072657475726e732066616c73652e",
                              "id": 192,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2918:41:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_38fa5aabf87e9f42de902eb4d9022484dde7943d80702b79ba468e9fc08f5e5e",
                                "typeString": "literal_string \"not enough tokens. Token returns false.\""
                              },
                              "value": "not enough tokens. Token returns false."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_38fa5aabf87e9f42de902eb4d9022484dde7943d80702b79ba468e9fc08f5e5e",
                                "typeString": "literal_string \"not enough tokens. Token returns false.\""
                              }
                            ],
                            "id": 190,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3900,
                              3901
                            ],
                            "referencedDeclaration": 3901,
                            "src": "2901:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2901:59:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 194,
                        "nodeType": "ExpressionStatement",
                        "src": "2901:59:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeErc20Transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 198,
                  "src": "2455:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2455:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 147,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 198,
                  "src": "2468:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2468:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2454:30:0"
            },
            "returnParameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2494:0:0"
            },
            "scope": 199,
            "src": "2427:544:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 200,
        "src": "728:2245:0"
      }
    ],
    "src": "642:2332:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/guqianfeng/web/my_dapps/hunbi/tornado-core/contracts/ERC20Shaker.sol",
    "exportedSymbols": {
      "ERC20Shaker": [
        199
      ]
    },
    "id": 200,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "642:23:0"
      },
      {
        "absolutePath": "/Users/guqianfeng/web/my_dapps/hunbi/tornado-core/contracts/Shaker.sol",
        "file": "./Shaker.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 200,
        "sourceUnit": 1862,
        "src": "704:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "Shaker",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1861,
              "src": "752:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Shaker_$1861",
                "typeString": "contract Shaker"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "752:6:0"
          }
        ],
        "contractDependencies": [
          671,
          890,
          1861
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 199,
        "linearizedBaseContracts": [
          199,
          1861,
          890,
          671
        ],
        "name": "ERC20Shaker",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 199,
            "src": "763:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "763:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 32,
              "nodeType": "Block",
              "src": "1037:25:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 28,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1043:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 29,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "1051:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1043:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 31,
                  "nodeType": "ExpressionStatement",
                  "src": "1043:14:0"
                }
              ]
            },
            "documentation": null,
            "id": 33,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 21,
                    "name": "_verifier",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8,
                    "src": "961:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVerifier_$1040",
                      "typeString": "contract IVerifier"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 22,
                    "name": "_denomination",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10,
                    "src": "972:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 23,
                    "name": "_merkleTreeHeight",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12,
                    "src": "987:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 24,
                    "name": "_operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14,
                    "src": "1006:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 25,
                    "name": "_feeAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16,
                    "src": "1017:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 26,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 20,
                  "name": "Shaker",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1861,
                  "src": "954:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Shaker_$1861_$",
                    "typeString": "type(contract Shaker)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "954:75:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "name": "_verifier",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "805:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVerifier_$1040",
                    "typeString": "contract IVerifier"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7,
                    "name": "IVerifier",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1040,
                    "src": "805:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVerifier_$1040",
                      "typeString": "contract IVerifier"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10,
                  "name": "_denomination",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "830:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "830:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12,
                  "name": "_merkleTreeHeight",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "857:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "857:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14,
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "887:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "887:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16,
                  "name": "_feeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "910:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "910:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "935:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "935:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "799:154:0"
            },
            "returnParameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1037:0:0"
            },
            "scope": 199,
            "src": "788:274:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 55,
              "nodeType": "Block",
              "src": "1117:150:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 42,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 39,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3897,
                            "src": "1131:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 40,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1131:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 41,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1144:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1131:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4554482076616c756520697320737570706f73656420746f206265203020666f7220455243323020696e7374616e6365",
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1147:50:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b14b0818f1fdc710b92ba7e1ce725992b43e47a5b220b1b890f352eeac2e1d5e",
                          "typeString": "literal_string \"ETH value is supposed to be 0 for ERC20 instance\""
                        },
                        "value": "ETH value is supposed to be 0 for ERC20 instance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b14b0818f1fdc710b92ba7e1ce725992b43e47a5b220b1b890f352eeac2e1d5e",
                          "typeString": "literal_string \"ETH value is supposed to be 0 for ERC20 instance\""
                        }
                      ],
                      "id": 38,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3900,
                        3901
                      ],
                      "referencedDeclaration": 3901,
                      "src": "1123:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1123:75:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "1123:75:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 47,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3897,
                          "src": "1227:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 48,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1227:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 50,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3923,
                            "src": "1247:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Shaker_$199",
                              "typeString": "contract ERC20Shaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Shaker_$199",
                              "typeString": "contract ERC20Shaker"
                            }
                          ],
                          "id": 49,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1239:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1239:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 52,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "1254:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 46,
                      "name": "_safeErc20TransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 143,
                      "src": "1204:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1204:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "1204:58:0"
                }
              ]
            },
            "documentation": null,
            "id": 56,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processDeposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "1091:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1091:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1090:17:0"
            },
            "returnParameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1117:0:0"
            },
            "scope": 199,
            "src": "1066:201:0",
            "stateMutability": "nonpayable",
            "superFunction": 1329,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 84,
              "nodeType": "Block",
              "src": "1383:446:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 68,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1499:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 69,
                          "name": "_refund",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "1511:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 70,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "1521:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1511:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 67,
                      "name": "_safeErc20Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 198,
                      "src": "1480:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1480:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "1480:46:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 74,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "1536:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 75,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1543:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1536:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 83,
                  "nodeType": "IfStatement",
                  "src": "1532:63:0",
                  "trueBody": {
                    "id": 82,
                    "nodeType": "Block",
                    "src": "1546:49:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 78,
                              "name": "_relayer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "1573:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 79,
                              "name": "_fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "1583:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 77,
                            "name": "_safeErc20Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "1554:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1554:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 81,
                        "nodeType": "ExpressionStatement",
                        "src": "1554:34:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 85,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processWithdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "1297:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1297:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "name": "_relayer",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "1325:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1325:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "1343:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1343:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64,
                  "name": "_refund",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "1357:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1357:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1296:77:0"
            },
            "returnParameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1383:0:0"
            },
            "scope": 199,
            "src": "1271:558:0",
            "stateMutability": "nonpayable",
            "superFunction": 1527,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 142,
              "nodeType": "Block",
              "src": "1919:504:0",
              "statements": [
                {
                  "assignments": [
                    95,
                    97
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 95,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 142,
                      "src": "1926:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 94,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1926:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 97,
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "scope": 142,
                      "src": "1940:17:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 96,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1940:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 108,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30783233623837326464",
                            "id": 102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1995:10:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_599290589_by_1",
                              "typeString": "int_const 599290589"
                            },
                            "value": "0x23b872dd"
                          },
                          {
                            "argumentTypes": null,
                            "id": 103,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87,
                            "src": "2026:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 104,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89,
                            "src": "2033:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 105,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91,
                            "src": "2038:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_599290589_by_1",
                              "typeString": "int_const 599290589"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 100,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3884,
                            "src": "1972:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1972:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1972:74:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 98,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "1961:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 99,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1961:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1961:86:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1925:122:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 110,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "2061:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f7420656e6f75676820616c6c6f77656420746f6b656e73",
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2070:27:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b31c8a8545ea674c554dd2f6bad7d7bd1dfe923a25150b76350dc6970bf3ff5c",
                          "typeString": "literal_string \"not enough allowed tokens\""
                        },
                        "value": "not enough allowed tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b31c8a8545ea674c554dd2f6bad7d7bd1dfe923a25150b76350dc6970bf3ff5c",
                          "typeString": "literal_string \"not enough allowed tokens\""
                        }
                      ],
                      "id": 109,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3900,
                        3901
                      ],
                      "referencedDeclaration": 3901,
                      "src": "2053:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2053:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "2053:45:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 114,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "2198:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2198:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2212:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2198:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 141,
                  "nodeType": "IfStatement",
                  "src": "2194:225:0",
                  "trueBody": {
                    "id": 140,
                    "nodeType": "Block",
                    "src": "2215:204:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 119,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 97,
                                  "src": "2231:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 120,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2231:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "3332",
                                "id": 121,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2246:2:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_32_by_1",
                                  "typeString": "int_const 32"
                                },
                                "value": "32"
                              },
                              "src": "2231:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "64617461206c656e6774682073686f756c64206265206569746865722030206f72203332206279746573",
                              "id": 123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2250:44:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_22b4652a1c8fbdfc6305c7ee289e87caf6a45e5ae327ee8f67eb64ba36d62560",
                                "typeString": "literal_string \"data length should be either 0 or 32 bytes\""
                              },
                              "value": "data length should be either 0 or 32 bytes"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_22b4652a1c8fbdfc6305c7ee289e87caf6a45e5ae327ee8f67eb64ba36d62560",
                                "typeString": "literal_string \"data length should be either 0 or 32 bytes\""
                              }
                            ],
                            "id": 118,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3900,
                              3901
                            ],
                            "referencedDeclaration": 3901,
                            "src": "2223:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2223:72:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 125,
                        "nodeType": "ExpressionStatement",
                        "src": "2223:72:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 126,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 95,
                            "src": "2303:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 129,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 97,
                                "src": "2324:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "id": 130,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2331:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bool_$",
                                      "typeString": "type(bool)"
                                    },
                                    "typeName": "bool"
                                  }
                                ],
                                "id": 131,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2330:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bool_$",
                                  "typeString": "type(bool)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_type$_t_bool_$",
                                  "typeString": "type(bool)"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 127,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3884,
                                "src": "2313:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "decode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2313:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2313:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2303:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 134,
                        "nodeType": "ExpressionStatement",
                        "src": "2303:34:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 136,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 95,
                              "src": "2353:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6e6f7420656e6f75676820616c6c6f77656420746f6b656e732e20546f6b656e2072657475726e732066616c73652e",
                              "id": 137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2362:49:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6cfae212a217874b58247660ff4d75d72aa825e8f2120480a7da09cf7efa221d",
                                "typeString": "literal_string \"not enough allowed tokens. Token returns false.\""
                              },
                              "value": "not enough allowed tokens. Token returns false."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6cfae212a217874b58247660ff4d75d72aa825e8f2120480a7da09cf7efa221d",
                                "typeString": "literal_string \"not enough allowed tokens. Token returns false.\""
                              }
                            ],
                            "id": 135,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3900,
                              3901
                            ],
                            "referencedDeclaration": 3901,
                            "src": "2345:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2345:67:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "2345:67:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 143,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeErc20TransferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "1865:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1865:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "1880:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1880:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "1893:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1893:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1864:45:0"
            },
            "returnParameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1919:0:0"
            },
            "scope": 199,
            "src": "1833:590:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 197,
              "nodeType": "Block",
              "src": "2494:477:0",
              "statements": [
                {
                  "assignments": [
                    151,
                    153
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 151,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 197,
                      "src": "2501:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 150,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2501:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 153,
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "scope": 197,
                      "src": "2515:17:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 152,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2515:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 163,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30786139303539636262",
                            "id": 158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2570:10:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2835717307_by_1",
                              "typeString": "int_const 2835717307"
                            },
                            "value": "0xa9059cbb"
                          },
                          {
                            "argumentTypes": null,
                            "id": 159,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 145,
                            "src": "2597:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 160,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 147,
                            "src": "2602:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2835717307_by_1",
                              "typeString": "int_const 2835717307"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 156,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3884,
                            "src": "2547:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2547:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2547:63:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 154,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "2536:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2536:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2536:75:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2500:111:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 165,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "2625:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f7420656e6f75676820746f6b656e73",
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2634:19:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73949bcdc07934e9395e82489bb22c4742e057960a2c090d38e53d68d3caf52a",
                          "typeString": "literal_string \"not enough tokens\""
                        },
                        "value": "not enough tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73949bcdc07934e9395e82489bb22c4742e057960a2c090d38e53d68d3caf52a",
                          "typeString": "literal_string \"not enough tokens\""
                        }
                      ],
                      "id": 164,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3900,
                        3901
                      ],
                      "referencedDeclaration": 3901,
                      "src": "2617:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2617:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "2617:37:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 169,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "2754:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2754:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2768:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2754:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 196,
                  "nodeType": "IfStatement",
                  "src": "2750:217:0",
                  "trueBody": {
                    "id": 195,
                    "nodeType": "Block",
                    "src": "2771:196:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 174,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 153,
                                  "src": "2787:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 175,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2787:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "3332",
                                "id": 176,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2802:2:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_32_by_1",
                                  "typeString": "int_const 32"
                                },
                                "value": "32"
                              },
                              "src": "2787:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "64617461206c656e6774682073686f756c64206265206569746865722030206f72203332206279746573",
                              "id": 178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2806:44:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_22b4652a1c8fbdfc6305c7ee289e87caf6a45e5ae327ee8f67eb64ba36d62560",
                                "typeString": "literal_string \"data length should be either 0 or 32 bytes\""
                              },
                              "value": "data length should be either 0 or 32 bytes"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_22b4652a1c8fbdfc6305c7ee289e87caf6a45e5ae327ee8f67eb64ba36d62560",
                                "typeString": "literal_string \"data length should be either 0 or 32 bytes\""
                              }
                            ],
                            "id": 173,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3900,
                              3901
                            ],
                            "referencedDeclaration": 3901,
                            "src": "2779:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2779:72:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 180,
                        "nodeType": "ExpressionStatement",
                        "src": "2779:72:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 181,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 151,
                            "src": "2859:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 184,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 153,
                                "src": "2880:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "id": 185,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2887:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bool_$",
                                      "typeString": "type(bool)"
                                    },
                                    "typeName": "bool"
                                  }
                                ],
                                "id": 186,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2886:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bool_$",
                                  "typeString": "type(bool)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_type$_t_bool_$",
                                  "typeString": "type(bool)"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 182,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3884,
                                "src": "2869:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "decode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2869:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2869:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2859:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 189,
                        "nodeType": "ExpressionStatement",
                        "src": "2859:34:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 191,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 151,
                              "src": "2909:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6e6f7420656e6f75676820746f6b656e732e20546f6b656e2072657475726e732066616c73652e",
                              "id": 192,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2918:41:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_38fa5aabf87e9f42de902eb4d9022484dde7943d80702b79ba468e9fc08f5e5e",
                                "typeString": "literal_string \"not enough tokens. Token returns false.\""
                              },
                              "value": "not enough tokens. Token returns false."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_38fa5aabf87e9f42de902eb4d9022484dde7943d80702b79ba468e9fc08f5e5e",
                                "typeString": "literal_string \"not enough tokens. Token returns false.\""
                              }
                            ],
                            "id": 190,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3900,
                              3901
                            ],
                            "referencedDeclaration": 3901,
                            "src": "2901:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2901:59:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 194,
                        "nodeType": "ExpressionStatement",
                        "src": "2901:59:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeErc20Transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 198,
                  "src": "2455:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2455:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 147,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 198,
                  "src": "2468:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2468:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2454:30:0"
            },
            "returnParameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2494:0:0"
            },
            "scope": 199,
            "src": "2427:544:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 200,
        "src": "728:2245:0"
      }
    ],
    "src": "642:2332:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0xa945e51eec50ab98c161376f0db4cf2aeba3ec92755fe2fcd388bdbbb80ff196": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "leafIndex",
              "type": "uint32"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "name": "Deposit",
          "type": "event"
        },
        "0x6d7aac54bd3d1c91db3b1fd7b8d6cb45324ad6b5e373c0f0ea4d7b2606c4c2c8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "nullifierHash",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "relayer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Withdrawal",
          "type": "event"
        },
        "0xf052b28ca720e670068c23c54488dc5b4db3ed42fde7c3fd2d0ea7aee06406eb": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "leafIndex",
              "type": "uint32"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "orderStatus",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "effectiveTime",
              "type": "uint256"
            }
          ],
          "name": "Deposit",
          "type": "event"
        }
      },
      "links": {
        "Hasher": "0x0c82a38dcD2907c4731aC1c53dd9BfA20B8aEC19"
      },
      "address": "0x3Dc974d1720360100565437B420C7dfdCccb4296",
      "transactionHash": "0x3dd2d983e08160ba3e9eecffc37469624ea11614b315cf3768d3ec35fe34d577"
    },
    "42": {
      "events": {
        "0xa945e51eec50ab98c161376f0db4cf2aeba3ec92755fe2fcd388bdbbb80ff196": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "leafIndex",
              "type": "uint32"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "name": "Deposit",
          "type": "event"
        },
        "0x6d7aac54bd3d1c91db3b1fd7b8d6cb45324ad6b5e373c0f0ea4d7b2606c4c2c8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "nullifierHash",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "relayer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Withdrawal",
          "type": "event"
        }
      },
      "links": {
        "Hasher": "0xB24DFb23d6A37674AD590Cc1C31fEce6ca512aC7"
      },
      "address": "0x75E04acbF7b62663FEA2E75e05c1715210F3C1EC",
      "transactionHash": "0x3b53440b2865facf9364753de4dadecbecef8d08095495df2fd81d137dd1b8b0"
    },
    "2000": {
      "events": {
        "0xa945e51eec50ab98c161376f0db4cf2aeba3ec92755fe2fcd388bdbbb80ff196": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "leafIndex",
              "type": "uint32"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "name": "Deposit",
          "type": "event"
        },
        "0xe9e508bad6d4c3227e881ca19068f099da81b5164dd6d62b2eaf1e8bc6c34931": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "nullifierHash",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "relayer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            }
          ],
          "name": "Withdrawal",
          "type": "event"
        },
        "0x6d7aac54bd3d1c91db3b1fd7b8d6cb45324ad6b5e373c0f0ea4d7b2606c4c2c8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "nullifierHash",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "relayer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Withdrawal",
          "type": "event"
        },
        "0xf052b28ca720e670068c23c54488dc5b4db3ed42fde7c3fd2d0ea7aee06406eb": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "leafIndex",
              "type": "uint32"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "orderStatus",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "effectiveTime",
              "type": "uint256"
            }
          ],
          "name": "Deposit",
          "type": "event"
        }
      },
      "links": {
        "Hasher": "0x8ca00240beAcb838bBEF0A6dF6327c1A73009144"
      },
      "address": "0xF9F88807690117b31491E34A4863c01303394a34",
      "transactionHash": "0xa04b756139612346a6fd31659b6e37395e44ed64989bf350a427ef6755c3af7e"
    }
  },
  "schemaVersion": "3.2.4",
  "updatedAt": "2020-09-25T09:23:50.733Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "changeFeeAddress(address)": {
        "details": "operator can change address of recieving fee "
      },
      "changeOperator(address)": {
        "details": "operator can change his address "
      },
      "depositERC20Batch(uint256[],bytes32[],uint8,address,uint256)": {
        "details": "Deposit a set of amount and commitments",
        "params": {
          "_amounts": ", array of ERC20 amount",
          "_commitments": ", array of commitments",
          "_effectiveTime": ", effective time of the Withdrawal",
          "_orderStatus": ", status of deposit, 0: cheque for bearer, 1: cheque for order",
          "_recipient": ", recipient address if cheque for order"
        }
      },
      "endorse(bytes,bytes32,bytes32,address,address,uint8,uint256,bytes32,bytes32,uint256)": {
        "details": "this function is for cheque endorsement",
        "params": {
          "_amount": ", endorsed amount, the endorsement amount can be part of balance of old cheque",
          "_effectiveTime": ", new effectiveTime of note",
          "_newCommitment": ", new commitment from frontend",
          "_nullifierHash": ", old nullifierHashe",
          "_oldCommitment": ", old commitment which will be endorsed",
          "_orderStatus": ", old cheque order type, 0- to Bearer cheque, 1- to order cheque",
          "_proof": ", Proof of zkSNARK",
          "_recipient": ", new recipient address, if orderStatus is 0, the _recipient is sender. Otherwise the _recipient is to order",
          "_relayer": ", relayer address",
          "_root": ", root of merkle tree"
        }
      },
      "getLastRoot()": {
        "details": "Returns the last root"
      },
      "hashLeftRight(bytes32,bytes32)": {
        "details": "Hash 2 tree leaves, returns MiMC(_left, _right)"
      },
      "isKnownRoot(bytes32)": {
        "details": "Whether the root is present in the root history"
      },
      "isSpent(bytes32)": {
        "details": "whether a note is already spent "
      },
      "isSpentArray(bytes32[])": {
        "details": "whether an array of notes is already spent "
      },
      "updateVerifier(address)": {
        "details": "allow operator to update SNARK verification keys. This is needed to update keys after the final trusted setup ceremony is held. After that operator rights are supposed to be transferred to zero address"
      },
      "withdraw(bytes,bytes32,bytes32,address,address,uint256,uint256,bytes32)": {
        "details": "Withdraw a deposit from the contract. `proof` is a zkSNARK proof data, and input is an array of circuit public inputs `input` array consists of: - merkle root of all deposits in the contract - hash of unique deposit nullifier to prevent double spends - the recipient of funds - optional fee that goes to the transaction sender (usually a relay)",
        "params": {
          "_fee": ", relayer decide the fee amount"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}