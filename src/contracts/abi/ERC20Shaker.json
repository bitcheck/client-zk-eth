{
  "contractName": "ERC20Shaker",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IVerifier",
          "name": "_verifier",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_denomination",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_merkleTreeHeight",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_commonWithdrawAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "commitment",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "leafIndex",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "orderStatus",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "effectiveTime",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "nullifierHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "FIELD_SIZE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ROOT_HISTORY_SIZE",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ZERO_VALUE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "commonWithdrawAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "councilAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentRootIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "denomination",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "_commitments",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "_orderStatus",
          "type": "uint8"
        },
        {
          "internalType": "address payable",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_effectiveTime",
          "type": "uint256"
        }
      ],
      "name": "depositERC20Batch",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_nullifierHash",
          "type": "bytes32"
        },
        {
          "internalType": "address payable",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_relayer",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "_orderStatus",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_oldCommitment",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_newCommitment",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_effectiveTime",
          "type": "uint256"
        }
      ],
      "name": "endorse",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "filledSubtrees",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLastRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getRelayerWithdrawAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_left",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_right",
          "type": "bytes32"
        }
      ],
      "name": "hashLeftRight",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        }
      ],
      "name": "isKnownRoot",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_nullifierHash",
          "type": "bytes32"
        }
      ],
      "name": "isSpent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_nullifierHashes",
          "type": "bytes32[]"
        }
      ],
      "name": "isSpentArray",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "spent",
          "type": "bool[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "levels",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lockCommitments",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_nullifierHash",
          "type": "bytes32"
        },
        {
          "internalType": "address payable",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_relayer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_refund",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_commitment",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "lockDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "lockReason",
      "outputs": [
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "datetime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "locker",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "refund",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "nextIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roots",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_councilAddress",
          "type": "address"
        }
      ],
      "name": "setCouncial",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "unlockDeposit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_commonWithdrawAddress",
          "type": "address"
        }
      ],
      "name": "updateCommonWithdrawAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOperator",
          "type": "address"
        }
      ],
      "name": "updateOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_relayer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_withdrawAddress",
          "type": "address"
        }
      ],
      "name": "updateRelayer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_newVerifier",
          "type": "address"
        }
      ],
      "name": "updateVerifier",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "verifier",
      "outputs": [
        {
          "internalType": "contract IVerifier",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_nullifierHash",
          "type": "bytes32"
        },
        {
          "internalType": "address payable",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_relayer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_refund",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_commitment",
          "type": "bytes32"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "zeros",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IVerifier\",\"name\":\"_verifier\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_denomination\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_merkleTreeHeight\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_commonWithdrawAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"leafIndex\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"orderStatus\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"effectiveTime\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"nullifierHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"FIELD_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ROOT_HISTORY_SIZE\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ZERO_VALUE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"commonWithdrawAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"councilAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentRootIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"denomination\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"_commitments\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"_orderStatus\",\"type\":\"uint8\"},{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_effectiveTime\",\"type\":\"uint256\"}],\"name\":\"depositERC20Batch\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_nullifierHash\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_relayer\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_orderStatus\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_oldCommitment\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_newCommitment\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_effectiveTime\",\"type\":\"uint256\"}],\"name\":\"endorse\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"filledSubtrees\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLastRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRelayerWithdrawAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_right\",\"type\":\"bytes32\"}],\"name\":\"hashLeftRight\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"}],\"name\":\"isKnownRoot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_nullifierHash\",\"type\":\"bytes32\"}],\"name\":\"isSpent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_nullifierHashes\",\"type\":\"bytes32[]\"}],\"name\":\"isSpentArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"spent\",\"type\":\"bool[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"levels\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lockCommitments\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_nullifierHash\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_relayer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_refund\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_commitment\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"lockDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"lockReason\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"datetime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"locker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roots\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_councilAddress\",\"type\":\"address\"}],\"name\":\"setCouncial\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"unlockDeposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_commonWithdrawAddress\",\"type\":\"address\"}],\"name\":\"updateCommonWithdrawAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOperator\",\"type\":\"address\"}],\"name\":\"updateOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_relayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_withdrawAddress\",\"type\":\"address\"}],\"name\":\"updateRelayer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newVerifier\",\"type\":\"address\"}],\"name\":\"updateVerifier\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"verifier\",\"outputs\":[{\"internalType\":\"contract IVerifier\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_nullifierHash\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_relayer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_refund\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_commitment\",\"type\":\"bytes32\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zeros\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"depositERC20Batch(uint256[],bytes32[],uint8,address,uint256)\":{\"details\":\"Deposit a set of amount and commitments\",\"params\":{\"_amounts\":\", array of ERC20 amount\",\"_commitments\":\", array of commitments\",\"_effectiveTime\":\", effective time of the Withdrawal\",\"_orderStatus\":\", status of deposit, 0: cheque for bearer, 1: cheque for order\",\"_recipient\":\", recipient address if cheque for order\"}},\"endorse(bytes,bytes32,bytes32,address,address,uint8,uint256,bytes32,bytes32,uint256)\":{\"details\":\"this function is for cheque endorsement\",\"params\":{\"_amount\":\", endorsed amount, the endorsement amount can be part of balance of old cheque\",\"_effectiveTime\":\", new effectiveTime of note\",\"_newCommitment\":\", new commitment from frontend\",\"_nullifierHash\":\", old nullifierHashe\",\"_oldCommitment\":\", old commitment which will be endorsed\",\"_orderStatus\":\", old cheque order type, 0- to Bearer cheque, 1- to order cheque\",\"_proof\":\", Proof of zkSNARK\",\"_recipient\":\", new recipient address, if orderStatus is 0, the _recipient is sender. Otherwise the _recipient is to order\",\"_relayer\":\", relayer address\",\"_root\":\", root of merkle tree\"}},\"getLastRoot()\":{\"details\":\"Returns the last root\"},\"getRelayerWithdrawAddress()\":{\"details\":\"get relayer Withdrawal address \"},\"hashLeftRight(bytes32,bytes32)\":{\"details\":\"Hash 2 tree leaves, returns MiMC(_left, _right)\"},\"isKnownRoot(bytes32)\":{\"details\":\"Whether the root is present in the root history\"},\"isSpent(bytes32)\":{\"details\":\"whether a note is already spent \"},\"isSpentArray(bytes32[])\":{\"details\":\"whether an array of notes is already spent \"},\"lockDeposit(bytes,bytes32,bytes32,address,address,uint256,uint256,bytes32,string)\":{\"details\":\"lock commitment, this operation can be only called by note holder \"},\"setCouncial(address)\":{\"details\":\"set council address \"},\"unlockDeposit(uint256)\":{\"details\":\"unlock commitment by council \"},\"updateCommonWithdrawAddress(address)\":{\"details\":\"update commonWithdrawAddress \"},\"updateOperator(address)\":{\"details\":\"operator can change his address \"},\"updateRelayer(address,address)\":{\"details\":\"update authority relayer \"},\"updateVerifier(address)\":{\"details\":\"allow operator to update SNARK verification keys. This is needed to update keys after the final trusted setup ceremony is held. After that operator rights are supposed to be transferred to zero address\"},\"withdraw(bytes,bytes32,bytes32,address,address,uint256,uint256,bytes32)\":{\"details\":\"Withdraw a deposit from the contract. `proof` is a zkSNARK proof data, and input is an array of circuit public inputs `input` array consists of: - merkle root of all deposits in the contract - hash of unique deposit nullifier to prevent double spends - the recipient of funds - optional fee that goes to the transaction sender (usually a relay)\",\"params\":{\"_fee\":\", relayer decide the fee amount\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/guqianfeng/web/my_dapps/hunbi/tornado-core/contracts/ERC20Shaker.sol\":\"ERC20Shaker\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/guqianfeng/web/my_dapps/hunbi/tornado-core/contracts/ERC20Shaker.sol\":{\"keccak256\":\"0xc0569518864bd536fdd1c517e71db87316dab48c0eade8783bb60840a5d9c79d\",\"urls\":[\"bzz-raw://81a4df169bfdfdc3b8a26c43d5ddaec91931281540611edde41909acc419bd6b\",\"dweb:/ipfs/QmUHhB7VQXfKK3iY6mjYrD5gG7LaFoR5XccwZ7SDTpvS25\"]},\"/Users/guqianfeng/web/my_dapps/hunbi/tornado-core/contracts/MerkleTreeWithHistory.sol\":{\"keccak256\":\"0x671cc9268dd70c47d18795f7e37fc4df11763fcbcca026edcf163f4239036254\",\"urls\":[\"bzz-raw://9c36a207ed164b60a514eae89bfb15e5b4de4b346c4a89a7a1cb50a940bc699d\",\"dweb:/ipfs/QmbPEqFJAGMpYduLEFsbPazyBsYWcjRtpth8X26wCHALwk\"]},\"/Users/guqianfeng/web/my_dapps/hunbi/tornado-core/contracts/ReentrancyGuard.sol\":{\"keccak256\":\"0x1f0687b27b70098e945c0673bad1a2a9ff1b7300cb15b66411804474e3d0bc22\",\"urls\":[\"bzz-raw://c5ab9cad47ff8a3aeb90a3976ee5f293fa469f33ba11eb5df327f736951ecdd1\",\"dweb:/ipfs/QmWoRR8NtLS7hLKsuMskotVGZP6tmtevn7MSKrQYK2SrJL\"]},\"/Users/guqianfeng/web/my_dapps/hunbi/tornado-core/contracts/SafeMath.sol\":{\"keccak256\":\"0x28ffe1fc796e4c7b098bf83160d62b28fa2fa57fe58583cb1c8ae071dabf8a15\",\"urls\":[\"bzz-raw://e8d70c999f19cb42cfbe34f2212ad12ebea4db423ccaf1fc93771480f957d721\",\"dweb:/ipfs/QmfH2vvRxM2MCcDmzgEqpNmgtkcgUXFLszjJnyd21JAdi9\"]},\"/Users/guqianfeng/web/my_dapps/hunbi/tornado-core/contracts/Shaker.sol\":{\"keccak256\":\"0x60634bb2b24403b5440e27b453349dd62db413c2bad97dbbe76e3f4367ce0a6d\",\"urls\":[\"bzz-raw://29bfbadf73c0c6695a17498801b2d6a142a0156b8474894209046433a2d2419f\",\"dweb:/ipfs/QmTodSm6uWXe8KAtb3hTLQVRhTWJ2zmXrJjN1pWAhdn3ku\"]}},\"version\":1}",
  "bytecode": "0x6080604052600380546001600160401b031916905560006069819055606a553480156200002b57600080fd5b506040516200358138038062003581833981810160405260c08110156200005157600080fd5b508051602082015160408301516060840151608085015160a090950151939492939192909185858585858263ffffffff8116620000c05760405162461bcd60e51b8152600401808060200182810382526027815260200180620034f86027913960400191505060405180910390fd5b60208163ffffffff1610620001075760405162461bcd60e51b81526004018080602001828103825260228152602001806200353f6022913960400191505060405180910390fd5b6000805463ffffffff191663ffffffff83161781556002805460018181019092557f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c600080516020620034b78339815191529091018190558154808301835592829052600080516020620035618339815191529092018290555b60005463ffffffff9081169082161015620001f557620001ab82806001600160e01b03620002b616565b600280546001818101909255600080516020620034b78339815191520182905580548082018255600082905260008051602062003561833981519152018290559092500162000181565b506200020b81806001600160e01b03620002b616565b6004555050600160685583620002535760405162461bcd60e51b8152600401808060200182810382526025815260200180620034926025913960400191505060405180910390fd5b606b80546001600160a01b03199081166001600160a01b0397881617909155606c8054821693871693909317909255606e939093556076805482169385169390931790925550607980549091169290911691909117905550620004a39350505050565b60006000805160206200351f83398151915283106200031c576040805162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c64604482015290519081900360640190fd5b6000805160206200351f83398151915282106200036b5760405162461bcd60e51b8152600401808060200182810382526021815260200180620034d76021913960400191505060405180910390fd5b6040805163f47d33b560e01b81526004810185905260006024820181905282518693919273__Hasher________________________________9263f47d33b592604480840193829003018186803b158015620003c657600080fd5b505af4158015620003db573d6000803e3d6000fd5b505050506040513d6040811015620003f257600080fd5b50805160209091015190925090506000805160206200351f833981519152848308915073__Hasher________________________________63f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b1580156200046c57600080fd5b505af415801562000481573d6000803e3d6000fd5b505050506040513d60408110156200049857600080fd5b505195945050505050565b612fdf80620004b36000396000f3fe6080604052600436106102045760003560e01c806390eeb02b11610118578063cd87a3b4116100a0578063ec7329591161006f578063ec7329591461097b578063eece3bd514610990578063f178e47c14610a85578063fc0c546a14610aaf578063fc7e9c6f14610ac457610204565b8063cd87a3b414610872578063da90803914610887578063e5285dcc14610927578063e82955881461095157610204565b8063a8be3cd6116100e7578063a8be3cd614610715578063ac7475ed146107eb578063ad7a672f1461081e578063ba70f75714610833578063c2b40ae41461084857610204565b806390eeb02b146105cf57806397fc007c146105e45780639fa12d0b14610617578063a4cab45c146106e257610204565b806354b45fc31161019b5780636d9833e31161016a5780636d9833e31461047857806377b9de8e146104b6578063807c7ba3146104e0578063827a26001461050a5780638bca6d16146105ba57610204565b806354b45fc31461033b578063570ca7351461036e5780635c64ae911461038357806362bc0cd61461046357610204565b806338bf282e116101d757806338bf282e146102b3578063414a37ba146102e35780634d10b2fb146102f85780634ecf518b1461030d57610204565b806315d232db146102095780631a39d8ef1461023a578063266c0aa7146102615780632b7ac3f31461029e575b600080fd5b34801561021557600080fd5b5061021e610ad9565b604080516001600160a01b039092168252519081900360200190f35b34801561024657600080fd5b5061024f610b4b565b60408051918252519081900360200190f35b34801561026d57600080fd5b5061029c6004803603604081101561028457600080fd5b506001600160a01b0381358116916020013516610b51565b005b3480156102aa57600080fd5b5061021e610bc8565b3480156102bf57600080fd5b5061024f600480360360408110156102d657600080fd5b5080359060200135610bd7565b3480156102ef57600080fd5b5061024f610db8565b34801561030457600080fd5b5061021e610dca565b34801561031957600080fd5b50610322610dd9565b6040805163ffffffff9092168252519081900360200190f35b34801561034757600080fd5b5061029c6004803603602081101561035e57600080fd5b50356001600160a01b0316610de5565b34801561037a57600080fd5b5061021e610e50565b34801561038f57600080fd5b506103ad600480360360208110156103a657600080fd5b5035610e5f565b6040805160ff88166020808301919091529181018790526001600160a01b0380871660608301528581166080830152841660a082015260c0810183905260e08082528951908201528851909182916101008301918b019080838360005b8381101561042257818101518382015260200161040a565b50505050905090810190601f16801561044f5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b34801561046f57600080fd5b5061021e610f38565b34801561048457600080fd5b506104a26004803603602081101561049b57600080fd5b5035610f47565b604080519115158252519081900360200190f35b3480156104c257600080fd5b5061029c600480360360208110156104d957600080fd5b5035610fba565b3480156104ec57600080fd5b5061024f6004803603602081101561050357600080fd5b503561104d565b61029c600480360361014081101561052157600080fd5b810190602081018135600160201b81111561053b57600080fd5b82018360208201111561054d57600080fd5b803590602001918460018302840111600160201b8311171561056e57600080fd5b91935091508035906020810135906001600160a01b03604082013581169160608101359091169060ff6080820135169060a08101359060c08101359060e081013590610100013561106b565b3480156105c657600080fd5b5061024f611764565b3480156105db57600080fd5b5061032261176a565b3480156105f057600080fd5b5061029c6004803603602081101561060757600080fd5b50356001600160a01b0316611776565b34801561062357600080fd5b506106926004803603602081101561063a57600080fd5b810190602081018135600160201b81111561065457600080fd5b82018360208201111561066657600080fd5b803590602001918460208302840111600160201b8311171561068757600080fd5b5090925090506117e1565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156106ce5781810151838201526020016106b6565b505050509050019250505060405180910390f35b3480156106ee57600080fd5b5061029c6004803603602081101561070557600080fd5b50356001600160a01b0316611869565b61029c600480360360a081101561072b57600080fd5b810190602081018135600160201b81111561074557600080fd5b82018360208201111561075757600080fd5b803590602001918460208302840111600160201b8311171561077857600080fd5b919390929091602081019035600160201b81111561079557600080fd5b8201836020820111156107a757600080fd5b803590602001918460208302840111600160201b831117156107c857600080fd5b919350915060ff813516906001600160a01b0360208201351690604001356118d4565b3480156107f757600080fd5b5061029c6004803603602081101561080e57600080fd5b50356001600160a01b03166119d3565b34801561082a57600080fd5b5061024f611a3e565b34801561083f57600080fd5b5061024f611a44565b34801561085457600080fd5b5061024f6004803603602081101561086b57600080fd5b5035611a64565b34801561087e57600080fd5b50610322611a78565b61029c600480360361010081101561089e57600080fd5b810190602081018135600160201b8111156108b857600080fd5b8201836020820111156108ca57600080fd5b803590602001918460018302840111600160201b831117156108eb57600080fd5b91935091508035906020810135906001600160a01b03604082013581169160608101359091169060808101359060a08101359060c00135611a7d565b34801561093357600080fd5b506104a26004803603602081101561094a57600080fd5b50356120b1565b34801561095d57600080fd5b5061024f6004803603602081101561097457600080fd5b50356120c6565b34801561098757600080fd5b5061024f6120d3565b61024f60048036036101208110156109a757600080fd5b810190602081018135600160201b8111156109c157600080fd5b8201836020820111156109d357600080fd5b803590602001918460018302840111600160201b831117156109f457600080fd5b919390928235926020810135926001600160a01b03604083013581169360608401359091169260808101359260a08201359260c08301359261010081019060e00135600160201b811115610a4757600080fd5b820183602082011115610a5957600080fd5b803590602001918460018302840111600160201b83111715610a7a57600080fd5b5090925090506120f7565b348015610a9157600080fd5b5061024f60048036036020811015610aa857600080fd5b5035612425565b348015610abb57600080fd5b5061021e612432565b348015610ad057600080fd5b50610322612441565b336000908152607560205260408120546001600160a01b0316610b2d5760405162461bcd60e51b8152600401808060200182810382526024815260200180612f3e6024913960400191505060405180910390fd5b50336000908152607560205260409020546001600160a01b03165b90565b60695481565b606c546001600160a01b03163314610b9a5760405162461bcd60e51b8152600401808060200182810382526025815260200180612f626025913960400191505060405180910390fd5b6001600160a01b03918216600090815260756020526040902080546001600160a01b03191691909216179055565b606b546001600160a01b031681565b6000600080516020612ea18339815191528310610c3b576040805162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c64604482015290519081900360640190fd5b600080516020612ea18339815191528210610c875760405162461bcd60e51b8152600401808060200182810382526021815260200180612e246021913960400191505060405180910390fd5b6040805163f47d33b560e01b81526004810185905260006024820181905282518693919273__Hasher________________________________9263f47d33b592604480840193829003018186803b158015610ce157600080fd5b505af4158015610cf5573d6000803e3d6000fd5b505050506040513d6040811015610d0b57600080fd5b5080516020909101519092509050600080516020612ea1833981519152848308915073__Hasher________________________________63f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b158015610d8357600080fd5b505af4158015610d97573d6000803e3d6000fd5b505050506040513d6040811015610dad57600080fd5b505195945050505050565b600080516020612ea183398151915281565b6076546001600160a01b031681565b60005463ffffffff1681565b606c546001600160a01b03163314610e2e5760405162461bcd60e51b8152600401808060200182810382526025815260200180612f626025913960400191505060405180910390fd5b606d80546001600160a01b0319166001600160a01b0392909216919091179055565b606c546001600160a01b031681565b60776020908152600091825260409182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452909291839190830182828015610ef65780601f10610ecb57610100808354040283529160200191610ef6565b820191906000526020600020905b815481529060010190602001808311610ed957829003601f168201915b50505060018401546002850154600386015460048701546005880154600690980154969760ff909416969295506001600160a01b039182169450811692169087565b606d546001600160a01b031681565b600081610f5657506000610fb5565b60035463ffffffff165b60048163ffffffff1660648110610f7357fe5b0154831415610f86576001915050610fb5565b63ffffffff8116610f95575060645b6003546000199091019063ffffffff80831691161415610f605760009150505b919050565b606d546001600160a01b031633146110035760405162461bcd60e51b815260040180806020018281038252602c815260200180612ec1602c913960400191505060405180910390fd5b6002607760006078848154811061101657fe5b9060005260206000200154815260200190815260200160002060010160006101000a81548160ff021916908360ff16021790555050565b6078818154811061105a57fe5b600091825260209091200154905081565b600260685414156110b1576040805162461bcd60e51b815260206004820152601f6024820152600080516020612ced833981519152604482015290519081900360640190fd5b6002606855600083815260776020526040902060019081015460ff16141561111a576040805162461bcd60e51b8152602060048201526017602482015276151a1a5cc819195c1bdcda5d081dd85cc81b1bd8dad959604a1b604482015290519081900360640190fd5b60008381526070602052604090205460ff1661117d576040805162461bcd60e51b815260206004820152601b60248201527f4f6c6420636f6d6d69746d656e742063616e206e6f742066696e640000000000604482015290519081900360640190fd5b60008281526070602052604090205460ff16156111cb5760405162461bcd60e51b8152600401808060200182810382526025815260200180612dda6025913960400191505060405180910390fd5b6000888152606f602052604090205460ff161561122f576040805162461bcd60e51b815260206004820152601f60248201527f546865206e6f746520686173206265656e20616c7265616479207370656e7400604482015290519081900360640190fd5b61123889610f47565b611289576040805162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f7400000000604482015290519081900360640190fd5b6000838152607160205260409020546112e9576040805162461bcd60e51b815260206004820152601f60248201527f4e6f2062616c616e636520616d6f756e74206f6620746869732070726f6f6600604482015290519081900360640190fd5b600083815260716020526040812054851061131257600084815260716020526040902054611314565b845b90506000811161136b576040805162461bcd60e51b815260206004820152601d60248201527f526566756e6420616d6f756e742063616e206e6f74206265207a65726f000000604482015290519081900360640190fd5b60008481526072602052604090205460ff1660011480156113a257506000848152607360205260409020546001600160a01b031633145b806113bc575060008481526072602052604090205460ff16155b6113f75760405162461bcd60e51b8152600401808060200182810382526024815260200180612f876024913960400191505060405180910390fd5b606b60009054906101000a90046001600160a01b03166001600160a01b031663695ef6f98d8d6040518060c001604052808f60001c81526020018e60001c81526020018d6001600160a01b031681526020018c6001600160a01b031681526020018b60ff1681526020018a8152506040518463ffffffff1660e01b8152600401808060200183600660200280838360005b838110156114a0578181015183820152602001611488565b505050509050018281038252858582818152602001925080828437600081840152601f19601f820116905080830192505050945050505050602060405180830381600087803b1580156114f257600080fd5b505af1158015611506573d6000803e3d6000fd5b505050506040513d602081101561151c57600080fd5b505161156f576040805162461bcd60e51b815260206004820152601960248201527f496e76616c696420656e646f7273656d656e742070726f6f6600000000000000604482015290519081900360640190fd5b600061157a84612454565b905060008311801561159a57506000858152607460205260409020544210155b156115b55760008481526074602052604090208390556115cc565b600085815260746020526040808220548683529120555b6000848152607060209081526040808320805460ff199081166001908117909255607184528285208b905560729093529220805460ff8b16921682179055146116155733611617565b885b600085815260736020908152604080832080546001600160a01b0319166001600160a01b03959095169490941790935587825260719052205461165a90836125eb565b60008681526071602052604090208190551561167757600061167a565b60015b60008b8152606f6020908152604091829020805493151560ff1990941693909317909255805163ffffffff84168152429281019290925260ff8916828201526001600160a01b038b166060830152608082018590525185917ff052b28ca720e670068c23c54488dc5b4db3ed42fde7c3fd2d0ea7aee06406eb919081900360a00190a2604080516000808252602082018d9052818301526060810184905290516001600160a01b038a16917f6d7aac54bd3d1c91db3b1fd7b8d6cb45324ad6b5e373c0f0ea4d7b2606c4c2c8919081900360800190a2505060016068555050505050505050505050565b606e5481565b60035463ffffffff1681565b606c546001600160a01b031633146117bf5760405162461bcd60e51b8152600401808060200182810382526025815260200180612f626025913960400191505060405180910390fd5b606b80546001600160a01b0319166001600160a01b0392909216919091179055565b60408051828152602080840282010190915260609082801561180d578160200160208202803883390190505b50905060005b828110156118625761183684848381811061182a57fe5b905060200201356120b1565b1561185a57600182828151811061184957fe5b911515602092830291909101909101525b600101611813565b5092915050565b606c546001600160a01b031633146118b25760405162461bcd60e51b8152600401808060200182810382526025815260200180612f626025913960400191505060405180910390fd5b607680546001600160a01b0319166001600160a01b0392909216919091179055565b6002606854141561191a576040805162461bcd60e51b815260206004820152601f6024820152600080516020612ced833981519152604482015290519081900360640190fd5b600260685560ff8316158061193257508260ff166001145b61196d5760405162461bcd60e51b8152600401808060200182810382526026815260200180612d0d6026913960400191505060405180910390fd5b6001600160a01b03821661198057600080fd5b60005b868110156119c4576119bc88888381811061199a57fe5b905060200201358787848181106119ad57fe5b90506020020135868686612648565b600101611983565b50506001606855505050505050565b606c546001600160a01b03163314611a1c5760405162461bcd60e51b8152600401808060200182810382526025815260200180612f626025913960400191505060405180910390fd5b606c80546001600160a01b0319166001600160a01b0392909216919091179055565b606a5481565b60035460009060049063ffffffff1660648110611a5d57fe5b0154905090565b60048160648110611a7157fe5b0154905081565b606481565b60026068541415611ac3576040805162461bcd60e51b815260206004820152601f6024820152600080516020612ced833981519152604482015290519081900360640190fd5b6002606855600081815260776020526040902060019081015460ff161415611b2c576040805162461bcd60e51b8152602060048201526017602482015276151a1a5cc819195c1bdcda5d081dd85cc81b1bd8dad959604a1b604482015290519081900360640190fd5b6000868152606f602052604090205460ff1615611b90576040805162461bcd60e51b815260206004820152601f60248201527f546865206e6f746520686173206265656e20616c7265616479207370656e7400604482015290519081900360640190fd5b611b9987610f47565b611bea576040805162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f7400000000604482015290519081900360640190fd5b60008181526072602052604090205460ff166001148015611c2457506000818152607360205260409020546001600160a01b038681169116145b80611c3e575060008181526072602052604090205460ff16155b611c795760405162461bcd60e51b8152600401808060200182810382526027815260200180612db36027913960400191505060405180910390fd5b600081815260716020526040902054611cd9576040805162461bcd60e51b815260206004820152601f60248201527f4e6f2062616c616e636520616d6f756e74206f6620746869732070726f6f6600604482015290519081900360640190fd5b6000818152607160205260408120548310611d0257600082815260716020526040902054611d04565b825b905060008111611d5b576040805162461bcd60e51b815260206004820152601d60248201527f526566756e6420616d6f756e742063616e206e6f74206265207a65726f000000604482015290519081900360640190fd5b600082815260746020526040902054421015611da85760405162461bcd60e51b815260040180806020018281038252602d815260200180612e74602d913960400191505060405180910390fd5b83811015611de75760405162461bcd60e51b8152600401808060200182810382526025815260200180612dff6025913960400191505060405180910390fd5b606b546040805160c080820183528b8252602082018b90526001600160a01b038a81168385015289811660608401526080830189905260a08301889052925163695ef6f960e01b8152929093169263695ef6f9928e928e9290916004810191829160240190849080838360005b83811015611e6c578181015183820152602001611e54565b505050509050018281038252858582818152602001925080828437600081840152601f19601f820116905080830192505050945050505050602060405180830381600087803b158015611ebe57600080fd5b505af1158015611ed2573d6000803e3d6000fd5b505050506040513d6020811015611ee857600080fd5b5051611f34576040805162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b604482015290519081900360640190fd5b60008281526072602052604081205460ff16600114611f535786611f6c565b6000838152607360205260409020546001600160a01b03165b33600090815260756020526040812054919250906001600160a01b031615611fac57336000908152607560205260409020546001600160a01b0316611fb9565b6076546001600160a01b03165b9050611fc7828288866127d5565b600084815260716020526040902054611fe6908463ffffffff6125eb16565b600085815260716020526040902055606954612008908463ffffffff6125eb16565b60695560008481526071602052604090205415612026576000612029565b60015b60008a8152606f6020908152604091829020805460ff19169315159390931790925580516001600160a01b038b811682529281018c9052808201899052606081018690529051918916917f6d7aac54bd3d1c91db3b1fd7b8d6cb45324ad6b5e373c0f0ea4d7b2606c4c2c8916080908290030190a25050600160685550505050505050505050565b6000908152606f602052604090205460ff1690565b6002818154811061105a57fe5b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b60006002606854141561213f576040805162461bcd60e51b815260206004820152601f6024820152600080516020612ced833981519152604482015290519081900360640190fd5b6002606881905550606b60009054906101000a90046001600160a01b03166001600160a01b031663695ef6f98d8d6040518060c001604052808f60001c81526020018e60001c81526020018d6001600160a01b031681526020018c6001600160a01b031681526020018b81526020018a8152506040518463ffffffff1660e01b8152600401808060200183600660200280838360005b838110156121ed5781810151838201526020016121d5565b505050509050018281038252858582818152602001925080828437600081840152601f19601f820116905080830192505050945050505050602060405180830381600087803b15801561223f57600080fd5b505af1158015612253573d6000803e3d6000fd5b505050506040513d602081101561226957600080fd5b50516122b5576040805162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b604482015290519081900360640190fd5b6040518060e0016040528084848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093855250506001602080850191909152426040808601919091526001600160a01b03808f1660608701528d1660808601523360a086015260c09094018a9052888352607781529290912083518051919361235193508492910190612c54565b5060208201516001828101805460ff191660ff909316929092179091556040830151600283015560608301516003830180546001600160a01b03199081166001600160a01b03938416179091556080850151600485018054831691841691909117905560a0850151600585018054909216921691909117905560c09092015160069091015560788054808301825560008290527f8dc6fb69531d98d70dc0420e638d2dfd04e09e1ec783ede9aac77da9c5a0dac4019590955593546068949094555050506000190198975050505050505050565b6001818154811061105a57fe5b6079546001600160a01b031681565b600354600160201b900463ffffffff1681565b60035460008054909163ffffffff600160201b909104811691811660020a168114156124b15760405162461bcd60e51b815260040180806020018281038252602f815260200180612d33602f913960400191505060405180910390fd5b6003805463ffffffff600160201b80830482166001019091160267ffffffff000000001990911617905582600080805b60005463ffffffff908116908216101561258957600185166125455783925060028163ffffffff168154811061251357fe5b906000526020600020015491508360018263ffffffff168154811061253457fe5b600091825260209091200155612569565b60018163ffffffff168154811061255857fe5b906000526020600020015492508391505b6125738383610bd7565b9350600263ffffffff86160494506001016124e1565b5060035460649063ffffffff908116600101166003805463ffffffff19169290910663ffffffff9081169290921790819055849160049116606481106125cb57fe5b01555050600354600160201b900463ffffffff1660001901949350505050565b600082821115612642576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b60008481526070602052604090205460ff16156126965760405162461bcd60e51b8152600401808060200182810382526021815260200180612eed6021913960400191505060405180910390fd5b60006126a185612454565b90506126ac866127f7565b6000858152607060209081526040808320805460ff199081166001908117909255607184528285208b905560729093529220805460ff8816921682179055146126f557336126f7565b825b600086815260736020526040902080546001600160a01b0319166001600160a01b03929092169190911790554282106127305781612732565b425b600086815260746020526040902055606954612754908763ffffffff61284216565b606955606a5461276a908763ffffffff61284216565b606a556040805163ffffffff8316815242602082015260ff8616818301526001600160a01b038516606082015260808101849052905186917ff052b28ca720e670068c23c54488dc5b4db3ed42fde7c3fd2d0ea7aee06406eb919081900360a00190a2505050505050565b6127e1848383036128a3565b81156127f1576127f183836128a3565b50505050565b34156128345760405162461bcd60e51b8152600401808060200182810382526030815260200180612f0e6030913960400191505060405180910390fd5b61283f333083612a6e565b50565b60008282018381101561289c576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b607954604080516001600160a01b038581166024830152604480830186905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b178152925182516000956060959316939282918083835b602083106129205780518252601f199092019160209182019101612901565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612982576040519150601f19603f3d011682016040523d82523d6000602084013e612987565b606091505b5091509150816129d2576040805162461bcd60e51b81526020600482015260116024820152706e6f7420656e6f75676820746f6b656e7360781b604482015290519081900360640190fd5b8051156127f1578051602014612a195760405162461bcd60e51b815260040180806020018281038252602a815260200180612d62602a913960400191505060405180910390fd5b808060200190516020811015612a2e57600080fd5b50519150816127f15760405162461bcd60e51b8152600401808060200182810382526027815260200180612d8c6027913960400191505060405180910390fd5b607954604080516001600160a01b0386811660248301528581166044830152606480830186905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b178152925182516000956060959316939282918083835b60208310612af35780518252601f199092019160209182019101612ad4565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612b55576040519150601f19603f3d011682016040523d82523d6000602084013e612b5a565b606091505b509150915081612bb1576040805162461bcd60e51b815260206004820152601960248201527f6e6f7420656e6f75676820616c6c6f77656420746f6b656e7300000000000000604482015290519081900360640190fd5b805115612c4d578051602014612bf85760405162461bcd60e51b815260040180806020018281038252602a815260200180612d62602a913960400191505060405180910390fd5b808060200190516020811015612c0d57600080fd5b5051915081612c4d5760405162461bcd60e51b815260040180806020018281038252602f815260200180612e45602f913960400191505060405180910390fd5b5050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612c9557805160ff1916838001178555612cc2565b82800160010185558215612cc2579182015b82811115612cc2578251825591602001919060010190612ca7565b50612cce929150612cd2565b5090565b610b4891905b80821115612cce5760008155600101612cd856fe5265656e7472616e637947756172643a207265656e7472616e742063616c6c00546865726520617265206f6e6c79203220636865717565207374617475733a2030206f7220314d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656166732063616e20626520616464656464617461206c656e6774682073686f756c64206265206569746865722030206f722033322062797465736e6f7420656e6f75676820746f6b656e732e20546f6b656e2072657475726e732066616c73652e526563697069656e74206973206e6f7420746865206f726967696e616c20726563697069656e74546865206e657720636f6d6d69746d656e7420686173206265656e207375626d6974746564526566756e6420616d6f756e742073686f756c64206265206d6f7265207468616e206665655f72696768742073686f756c6420626520696e7369646520746865206669656c646e6f7420656e6f75676820616c6c6f77656420746f6b656e732e20546f6b656e2072657475726e732066616c73652e546865206465706f736974206973206c6f636b656420756e74696c207468652065666665637469766554696d6530644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000014f6e6c7920636f756e63696c206163636f756e742063616e2063616c6c20746869732066756e6374696f6e2e54686520636f6d6d69746d656e7420686173206265656e207375626d69747465644554482076616c756520697320737570706f73656420746f206265203020666f7220455243323020696e7374616e63654f6e6c792072656c617965722063616e2063616c6c20746869732066756e6374696f6e2e4f6e6c79206f70657261746f722063616e2063616c6c20746869732066756e6374696f6e2e53656e646572206973206e6f7420746865206f726967696e616c20726563697069656e74a265627a7a72315820c3a293eaad9279245f288ea07d4037201c4689e07d024e4558e905a0e0d5234864736f6c6343000511003264656e6f6d696e6174696f6e2073686f756c642062652067726561746572207468616e2030405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5f72696768742073686f756c6420626520696e7369646520746865206669656c645f747265654c6576656c732073686f756c642062652067726561746572207468616e207a65726f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000015f747265654c6576656c732073686f756c64206265206c657373207468616e203332b10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6",
  "deployedBytecode": "0x6080604052600436106102045760003560e01c806390eeb02b11610118578063cd87a3b4116100a0578063ec7329591161006f578063ec7329591461097b578063eece3bd514610990578063f178e47c14610a85578063fc0c546a14610aaf578063fc7e9c6f14610ac457610204565b8063cd87a3b414610872578063da90803914610887578063e5285dcc14610927578063e82955881461095157610204565b8063a8be3cd6116100e7578063a8be3cd614610715578063ac7475ed146107eb578063ad7a672f1461081e578063ba70f75714610833578063c2b40ae41461084857610204565b806390eeb02b146105cf57806397fc007c146105e45780639fa12d0b14610617578063a4cab45c146106e257610204565b806354b45fc31161019b5780636d9833e31161016a5780636d9833e31461047857806377b9de8e146104b6578063807c7ba3146104e0578063827a26001461050a5780638bca6d16146105ba57610204565b806354b45fc31461033b578063570ca7351461036e5780635c64ae911461038357806362bc0cd61461046357610204565b806338bf282e116101d757806338bf282e146102b3578063414a37ba146102e35780634d10b2fb146102f85780634ecf518b1461030d57610204565b806315d232db146102095780631a39d8ef1461023a578063266c0aa7146102615780632b7ac3f31461029e575b600080fd5b34801561021557600080fd5b5061021e610ad9565b604080516001600160a01b039092168252519081900360200190f35b34801561024657600080fd5b5061024f610b4b565b60408051918252519081900360200190f35b34801561026d57600080fd5b5061029c6004803603604081101561028457600080fd5b506001600160a01b0381358116916020013516610b51565b005b3480156102aa57600080fd5b5061021e610bc8565b3480156102bf57600080fd5b5061024f600480360360408110156102d657600080fd5b5080359060200135610bd7565b3480156102ef57600080fd5b5061024f610db8565b34801561030457600080fd5b5061021e610dca565b34801561031957600080fd5b50610322610dd9565b6040805163ffffffff9092168252519081900360200190f35b34801561034757600080fd5b5061029c6004803603602081101561035e57600080fd5b50356001600160a01b0316610de5565b34801561037a57600080fd5b5061021e610e50565b34801561038f57600080fd5b506103ad600480360360208110156103a657600080fd5b5035610e5f565b6040805160ff88166020808301919091529181018790526001600160a01b0380871660608301528581166080830152841660a082015260c0810183905260e08082528951908201528851909182916101008301918b019080838360005b8381101561042257818101518382015260200161040a565b50505050905090810190601f16801561044f5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b34801561046f57600080fd5b5061021e610f38565b34801561048457600080fd5b506104a26004803603602081101561049b57600080fd5b5035610f47565b604080519115158252519081900360200190f35b3480156104c257600080fd5b5061029c600480360360208110156104d957600080fd5b5035610fba565b3480156104ec57600080fd5b5061024f6004803603602081101561050357600080fd5b503561104d565b61029c600480360361014081101561052157600080fd5b810190602081018135600160201b81111561053b57600080fd5b82018360208201111561054d57600080fd5b803590602001918460018302840111600160201b8311171561056e57600080fd5b91935091508035906020810135906001600160a01b03604082013581169160608101359091169060ff6080820135169060a08101359060c08101359060e081013590610100013561106b565b3480156105c657600080fd5b5061024f611764565b3480156105db57600080fd5b5061032261176a565b3480156105f057600080fd5b5061029c6004803603602081101561060757600080fd5b50356001600160a01b0316611776565b34801561062357600080fd5b506106926004803603602081101561063a57600080fd5b810190602081018135600160201b81111561065457600080fd5b82018360208201111561066657600080fd5b803590602001918460208302840111600160201b8311171561068757600080fd5b5090925090506117e1565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156106ce5781810151838201526020016106b6565b505050509050019250505060405180910390f35b3480156106ee57600080fd5b5061029c6004803603602081101561070557600080fd5b50356001600160a01b0316611869565b61029c600480360360a081101561072b57600080fd5b810190602081018135600160201b81111561074557600080fd5b82018360208201111561075757600080fd5b803590602001918460208302840111600160201b8311171561077857600080fd5b919390929091602081019035600160201b81111561079557600080fd5b8201836020820111156107a757600080fd5b803590602001918460208302840111600160201b831117156107c857600080fd5b919350915060ff813516906001600160a01b0360208201351690604001356118d4565b3480156107f757600080fd5b5061029c6004803603602081101561080e57600080fd5b50356001600160a01b03166119d3565b34801561082a57600080fd5b5061024f611a3e565b34801561083f57600080fd5b5061024f611a44565b34801561085457600080fd5b5061024f6004803603602081101561086b57600080fd5b5035611a64565b34801561087e57600080fd5b50610322611a78565b61029c600480360361010081101561089e57600080fd5b810190602081018135600160201b8111156108b857600080fd5b8201836020820111156108ca57600080fd5b803590602001918460018302840111600160201b831117156108eb57600080fd5b91935091508035906020810135906001600160a01b03604082013581169160608101359091169060808101359060a08101359060c00135611a7d565b34801561093357600080fd5b506104a26004803603602081101561094a57600080fd5b50356120b1565b34801561095d57600080fd5b5061024f6004803603602081101561097457600080fd5b50356120c6565b34801561098757600080fd5b5061024f6120d3565b61024f60048036036101208110156109a757600080fd5b810190602081018135600160201b8111156109c157600080fd5b8201836020820111156109d357600080fd5b803590602001918460018302840111600160201b831117156109f457600080fd5b919390928235926020810135926001600160a01b03604083013581169360608401359091169260808101359260a08201359260c08301359261010081019060e00135600160201b811115610a4757600080fd5b820183602082011115610a5957600080fd5b803590602001918460018302840111600160201b83111715610a7a57600080fd5b5090925090506120f7565b348015610a9157600080fd5b5061024f60048036036020811015610aa857600080fd5b5035612425565b348015610abb57600080fd5b5061021e612432565b348015610ad057600080fd5b50610322612441565b336000908152607560205260408120546001600160a01b0316610b2d5760405162461bcd60e51b8152600401808060200182810382526024815260200180612f3e6024913960400191505060405180910390fd5b50336000908152607560205260409020546001600160a01b03165b90565b60695481565b606c546001600160a01b03163314610b9a5760405162461bcd60e51b8152600401808060200182810382526025815260200180612f626025913960400191505060405180910390fd5b6001600160a01b03918216600090815260756020526040902080546001600160a01b03191691909216179055565b606b546001600160a01b031681565b6000600080516020612ea18339815191528310610c3b576040805162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c64604482015290519081900360640190fd5b600080516020612ea18339815191528210610c875760405162461bcd60e51b8152600401808060200182810382526021815260200180612e246021913960400191505060405180910390fd5b6040805163f47d33b560e01b81526004810185905260006024820181905282518693919273__Hasher________________________________9263f47d33b592604480840193829003018186803b158015610ce157600080fd5b505af4158015610cf5573d6000803e3d6000fd5b505050506040513d6040811015610d0b57600080fd5b5080516020909101519092509050600080516020612ea1833981519152848308915073__Hasher________________________________63f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b158015610d8357600080fd5b505af4158015610d97573d6000803e3d6000fd5b505050506040513d6040811015610dad57600080fd5b505195945050505050565b600080516020612ea183398151915281565b6076546001600160a01b031681565b60005463ffffffff1681565b606c546001600160a01b03163314610e2e5760405162461bcd60e51b8152600401808060200182810382526025815260200180612f626025913960400191505060405180910390fd5b606d80546001600160a01b0319166001600160a01b0392909216919091179055565b606c546001600160a01b031681565b60776020908152600091825260409182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452909291839190830182828015610ef65780601f10610ecb57610100808354040283529160200191610ef6565b820191906000526020600020905b815481529060010190602001808311610ed957829003601f168201915b50505060018401546002850154600386015460048701546005880154600690980154969760ff909416969295506001600160a01b039182169450811692169087565b606d546001600160a01b031681565b600081610f5657506000610fb5565b60035463ffffffff165b60048163ffffffff1660648110610f7357fe5b0154831415610f86576001915050610fb5565b63ffffffff8116610f95575060645b6003546000199091019063ffffffff80831691161415610f605760009150505b919050565b606d546001600160a01b031633146110035760405162461bcd60e51b815260040180806020018281038252602c815260200180612ec1602c913960400191505060405180910390fd5b6002607760006078848154811061101657fe5b9060005260206000200154815260200190815260200160002060010160006101000a81548160ff021916908360ff16021790555050565b6078818154811061105a57fe5b600091825260209091200154905081565b600260685414156110b1576040805162461bcd60e51b815260206004820152601f6024820152600080516020612ced833981519152604482015290519081900360640190fd5b6002606855600083815260776020526040902060019081015460ff16141561111a576040805162461bcd60e51b8152602060048201526017602482015276151a1a5cc819195c1bdcda5d081dd85cc81b1bd8dad959604a1b604482015290519081900360640190fd5b60008381526070602052604090205460ff1661117d576040805162461bcd60e51b815260206004820152601b60248201527f4f6c6420636f6d6d69746d656e742063616e206e6f742066696e640000000000604482015290519081900360640190fd5b60008281526070602052604090205460ff16156111cb5760405162461bcd60e51b8152600401808060200182810382526025815260200180612dda6025913960400191505060405180910390fd5b6000888152606f602052604090205460ff161561122f576040805162461bcd60e51b815260206004820152601f60248201527f546865206e6f746520686173206265656e20616c7265616479207370656e7400604482015290519081900360640190fd5b61123889610f47565b611289576040805162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f7400000000604482015290519081900360640190fd5b6000838152607160205260409020546112e9576040805162461bcd60e51b815260206004820152601f60248201527f4e6f2062616c616e636520616d6f756e74206f6620746869732070726f6f6600604482015290519081900360640190fd5b600083815260716020526040812054851061131257600084815260716020526040902054611314565b845b90506000811161136b576040805162461bcd60e51b815260206004820152601d60248201527f526566756e6420616d6f756e742063616e206e6f74206265207a65726f000000604482015290519081900360640190fd5b60008481526072602052604090205460ff1660011480156113a257506000848152607360205260409020546001600160a01b031633145b806113bc575060008481526072602052604090205460ff16155b6113f75760405162461bcd60e51b8152600401808060200182810382526024815260200180612f876024913960400191505060405180910390fd5b606b60009054906101000a90046001600160a01b03166001600160a01b031663695ef6f98d8d6040518060c001604052808f60001c81526020018e60001c81526020018d6001600160a01b031681526020018c6001600160a01b031681526020018b60ff1681526020018a8152506040518463ffffffff1660e01b8152600401808060200183600660200280838360005b838110156114a0578181015183820152602001611488565b505050509050018281038252858582818152602001925080828437600081840152601f19601f820116905080830192505050945050505050602060405180830381600087803b1580156114f257600080fd5b505af1158015611506573d6000803e3d6000fd5b505050506040513d602081101561151c57600080fd5b505161156f576040805162461bcd60e51b815260206004820152601960248201527f496e76616c696420656e646f7273656d656e742070726f6f6600000000000000604482015290519081900360640190fd5b600061157a84612454565b905060008311801561159a57506000858152607460205260409020544210155b156115b55760008481526074602052604090208390556115cc565b600085815260746020526040808220548683529120555b6000848152607060209081526040808320805460ff199081166001908117909255607184528285208b905560729093529220805460ff8b16921682179055146116155733611617565b885b600085815260736020908152604080832080546001600160a01b0319166001600160a01b03959095169490941790935587825260719052205461165a90836125eb565b60008681526071602052604090208190551561167757600061167a565b60015b60008b8152606f6020908152604091829020805493151560ff1990941693909317909255805163ffffffff84168152429281019290925260ff8916828201526001600160a01b038b166060830152608082018590525185917ff052b28ca720e670068c23c54488dc5b4db3ed42fde7c3fd2d0ea7aee06406eb919081900360a00190a2604080516000808252602082018d9052818301526060810184905290516001600160a01b038a16917f6d7aac54bd3d1c91db3b1fd7b8d6cb45324ad6b5e373c0f0ea4d7b2606c4c2c8919081900360800190a2505060016068555050505050505050505050565b606e5481565b60035463ffffffff1681565b606c546001600160a01b031633146117bf5760405162461bcd60e51b8152600401808060200182810382526025815260200180612f626025913960400191505060405180910390fd5b606b80546001600160a01b0319166001600160a01b0392909216919091179055565b60408051828152602080840282010190915260609082801561180d578160200160208202803883390190505b50905060005b828110156118625761183684848381811061182a57fe5b905060200201356120b1565b1561185a57600182828151811061184957fe5b911515602092830291909101909101525b600101611813565b5092915050565b606c546001600160a01b031633146118b25760405162461bcd60e51b8152600401808060200182810382526025815260200180612f626025913960400191505060405180910390fd5b607680546001600160a01b0319166001600160a01b0392909216919091179055565b6002606854141561191a576040805162461bcd60e51b815260206004820152601f6024820152600080516020612ced833981519152604482015290519081900360640190fd5b600260685560ff8316158061193257508260ff166001145b61196d5760405162461bcd60e51b8152600401808060200182810382526026815260200180612d0d6026913960400191505060405180910390fd5b6001600160a01b03821661198057600080fd5b60005b868110156119c4576119bc88888381811061199a57fe5b905060200201358787848181106119ad57fe5b90506020020135868686612648565b600101611983565b50506001606855505050505050565b606c546001600160a01b03163314611a1c5760405162461bcd60e51b8152600401808060200182810382526025815260200180612f626025913960400191505060405180910390fd5b606c80546001600160a01b0319166001600160a01b0392909216919091179055565b606a5481565b60035460009060049063ffffffff1660648110611a5d57fe5b0154905090565b60048160648110611a7157fe5b0154905081565b606481565b60026068541415611ac3576040805162461bcd60e51b815260206004820152601f6024820152600080516020612ced833981519152604482015290519081900360640190fd5b6002606855600081815260776020526040902060019081015460ff161415611b2c576040805162461bcd60e51b8152602060048201526017602482015276151a1a5cc819195c1bdcda5d081dd85cc81b1bd8dad959604a1b604482015290519081900360640190fd5b6000868152606f602052604090205460ff1615611b90576040805162461bcd60e51b815260206004820152601f60248201527f546865206e6f746520686173206265656e20616c7265616479207370656e7400604482015290519081900360640190fd5b611b9987610f47565b611bea576040805162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f7400000000604482015290519081900360640190fd5b60008181526072602052604090205460ff166001148015611c2457506000818152607360205260409020546001600160a01b038681169116145b80611c3e575060008181526072602052604090205460ff16155b611c795760405162461bcd60e51b8152600401808060200182810382526027815260200180612db36027913960400191505060405180910390fd5b600081815260716020526040902054611cd9576040805162461bcd60e51b815260206004820152601f60248201527f4e6f2062616c616e636520616d6f756e74206f6620746869732070726f6f6600604482015290519081900360640190fd5b6000818152607160205260408120548310611d0257600082815260716020526040902054611d04565b825b905060008111611d5b576040805162461bcd60e51b815260206004820152601d60248201527f526566756e6420616d6f756e742063616e206e6f74206265207a65726f000000604482015290519081900360640190fd5b600082815260746020526040902054421015611da85760405162461bcd60e51b815260040180806020018281038252602d815260200180612e74602d913960400191505060405180910390fd5b83811015611de75760405162461bcd60e51b8152600401808060200182810382526025815260200180612dff6025913960400191505060405180910390fd5b606b546040805160c080820183528b8252602082018b90526001600160a01b038a81168385015289811660608401526080830189905260a08301889052925163695ef6f960e01b8152929093169263695ef6f9928e928e9290916004810191829160240190849080838360005b83811015611e6c578181015183820152602001611e54565b505050509050018281038252858582818152602001925080828437600081840152601f19601f820116905080830192505050945050505050602060405180830381600087803b158015611ebe57600080fd5b505af1158015611ed2573d6000803e3d6000fd5b505050506040513d6020811015611ee857600080fd5b5051611f34576040805162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b604482015290519081900360640190fd5b60008281526072602052604081205460ff16600114611f535786611f6c565b6000838152607360205260409020546001600160a01b03165b33600090815260756020526040812054919250906001600160a01b031615611fac57336000908152607560205260409020546001600160a01b0316611fb9565b6076546001600160a01b03165b9050611fc7828288866127d5565b600084815260716020526040902054611fe6908463ffffffff6125eb16565b600085815260716020526040902055606954612008908463ffffffff6125eb16565b60695560008481526071602052604090205415612026576000612029565b60015b60008a8152606f6020908152604091829020805460ff19169315159390931790925580516001600160a01b038b811682529281018c9052808201899052606081018690529051918916917f6d7aac54bd3d1c91db3b1fd7b8d6cb45324ad6b5e373c0f0ea4d7b2606c4c2c8916080908290030190a25050600160685550505050505050505050565b6000908152606f602052604090205460ff1690565b6002818154811061105a57fe5b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b60006002606854141561213f576040805162461bcd60e51b815260206004820152601f6024820152600080516020612ced833981519152604482015290519081900360640190fd5b6002606881905550606b60009054906101000a90046001600160a01b03166001600160a01b031663695ef6f98d8d6040518060c001604052808f60001c81526020018e60001c81526020018d6001600160a01b031681526020018c6001600160a01b031681526020018b81526020018a8152506040518463ffffffff1660e01b8152600401808060200183600660200280838360005b838110156121ed5781810151838201526020016121d5565b505050509050018281038252858582818152602001925080828437600081840152601f19601f820116905080830192505050945050505050602060405180830381600087803b15801561223f57600080fd5b505af1158015612253573d6000803e3d6000fd5b505050506040513d602081101561226957600080fd5b50516122b5576040805162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b604482015290519081900360640190fd5b6040518060e0016040528084848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093855250506001602080850191909152426040808601919091526001600160a01b03808f1660608701528d1660808601523360a086015260c09094018a9052888352607781529290912083518051919361235193508492910190612c54565b5060208201516001828101805460ff191660ff909316929092179091556040830151600283015560608301516003830180546001600160a01b03199081166001600160a01b03938416179091556080850151600485018054831691841691909117905560a0850151600585018054909216921691909117905560c09092015160069091015560788054808301825560008290527f8dc6fb69531d98d70dc0420e638d2dfd04e09e1ec783ede9aac77da9c5a0dac4019590955593546068949094555050506000190198975050505050505050565b6001818154811061105a57fe5b6079546001600160a01b031681565b600354600160201b900463ffffffff1681565b60035460008054909163ffffffff600160201b909104811691811660020a168114156124b15760405162461bcd60e51b815260040180806020018281038252602f815260200180612d33602f913960400191505060405180910390fd5b6003805463ffffffff600160201b80830482166001019091160267ffffffff000000001990911617905582600080805b60005463ffffffff908116908216101561258957600185166125455783925060028163ffffffff168154811061251357fe5b906000526020600020015491508360018263ffffffff168154811061253457fe5b600091825260209091200155612569565b60018163ffffffff168154811061255857fe5b906000526020600020015492508391505b6125738383610bd7565b9350600263ffffffff86160494506001016124e1565b5060035460649063ffffffff908116600101166003805463ffffffff19169290910663ffffffff9081169290921790819055849160049116606481106125cb57fe5b01555050600354600160201b900463ffffffff1660001901949350505050565b600082821115612642576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b60008481526070602052604090205460ff16156126965760405162461bcd60e51b8152600401808060200182810382526021815260200180612eed6021913960400191505060405180910390fd5b60006126a185612454565b90506126ac866127f7565b6000858152607060209081526040808320805460ff199081166001908117909255607184528285208b905560729093529220805460ff8816921682179055146126f557336126f7565b825b600086815260736020526040902080546001600160a01b0319166001600160a01b03929092169190911790554282106127305781612732565b425b600086815260746020526040902055606954612754908763ffffffff61284216565b606955606a5461276a908763ffffffff61284216565b606a556040805163ffffffff8316815242602082015260ff8616818301526001600160a01b038516606082015260808101849052905186917ff052b28ca720e670068c23c54488dc5b4db3ed42fde7c3fd2d0ea7aee06406eb919081900360a00190a2505050505050565b6127e1848383036128a3565b81156127f1576127f183836128a3565b50505050565b34156128345760405162461bcd60e51b8152600401808060200182810382526030815260200180612f0e6030913960400191505060405180910390fd5b61283f333083612a6e565b50565b60008282018381101561289c576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b607954604080516001600160a01b038581166024830152604480830186905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b178152925182516000956060959316939282918083835b602083106129205780518252601f199092019160209182019101612901565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612982576040519150601f19603f3d011682016040523d82523d6000602084013e612987565b606091505b5091509150816129d2576040805162461bcd60e51b81526020600482015260116024820152706e6f7420656e6f75676820746f6b656e7360781b604482015290519081900360640190fd5b8051156127f1578051602014612a195760405162461bcd60e51b815260040180806020018281038252602a815260200180612d62602a913960400191505060405180910390fd5b808060200190516020811015612a2e57600080fd5b50519150816127f15760405162461bcd60e51b8152600401808060200182810382526027815260200180612d8c6027913960400191505060405180910390fd5b607954604080516001600160a01b0386811660248301528581166044830152606480830186905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b178152925182516000956060959316939282918083835b60208310612af35780518252601f199092019160209182019101612ad4565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612b55576040519150601f19603f3d011682016040523d82523d6000602084013e612b5a565b606091505b509150915081612bb1576040805162461bcd60e51b815260206004820152601960248201527f6e6f7420656e6f75676820616c6c6f77656420746f6b656e7300000000000000604482015290519081900360640190fd5b805115612c4d578051602014612bf85760405162461bcd60e51b815260040180806020018281038252602a815260200180612d62602a913960400191505060405180910390fd5b808060200190516020811015612c0d57600080fd5b5051915081612c4d5760405162461bcd60e51b815260040180806020018281038252602f815260200180612e45602f913960400191505060405180910390fd5b5050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612c9557805160ff1916838001178555612cc2565b82800160010185558215612cc2579182015b82811115612cc2578251825591602001919060010190612ca7565b50612cce929150612cd2565b5090565b610b4891905b80821115612cce5760008155600101612cd856fe5265656e7472616e637947756172643a207265656e7472616e742063616c6c00546865726520617265206f6e6c79203220636865717565207374617475733a2030206f7220314d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656166732063616e20626520616464656464617461206c656e6774682073686f756c64206265206569746865722030206f722033322062797465736e6f7420656e6f75676820746f6b656e732e20546f6b656e2072657475726e732066616c73652e526563697069656e74206973206e6f7420746865206f726967696e616c20726563697069656e74546865206e657720636f6d6d69746d656e7420686173206265656e207375626d6974746564526566756e6420616d6f756e742073686f756c64206265206d6f7265207468616e206665655f72696768742073686f756c6420626520696e7369646520746865206669656c646e6f7420656e6f75676820616c6c6f77656420746f6b656e732e20546f6b656e2072657475726e732066616c73652e546865206465706f736974206973206c6f636b656420756e74696c207468652065666665637469766554696d6530644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000014f6e6c7920636f756e63696c206163636f756e742063616e2063616c6c20746869732066756e6374696f6e2e54686520636f6d6d69746d656e7420686173206265656e207375626d69747465644554482076616c756520697320737570706f73656420746f206265203020666f7220455243323020696e7374616e63654f6e6c792072656c617965722063616e2063616c6c20746869732066756e6374696f6e2e4f6e6c79206f70657261746f722063616e2063616c6c20746869732066756e6374696f6e2e53656e646572206973206e6f7420746865206f726967696e616c20726563697069656e74a265627a7a72315820c3a293eaad9279245f288ea07d4037201c4689e07d024e4558e905a0e0d5234864736f6c63430005110032",
  "sourceMap": "728:2267:0:-;;;1430:34:2;;;-1:-1:-1;;;;;;1468:27:2;;;1463:1;977:30:10;;;;1040:31;;788:296:0;5:2:-1;;;;30:1;27;20:12;5:2;788:296:0;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;788:296:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1646:15:2;;;1638:67;;;;-1:-1:-1;;;1638:67:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1733:2;1719:11;:16;;;1711:63;;;;-1:-1:-1;;;1711:63:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1780:6;:20;;-1:-1:-1;;1780:20:2;;;;;;;1854:5;27:10:-1;;-1:-1;23:18;;;45:23;;;1088:77:2;-1:-1:-1;;;;;;;;;;;1854:23:2;;;;;;27:10:-1;;23:18;;;45:23;;1883:32:2;;;;-1:-1:-1;;;;;;;;;;;1883:32:2;;;;;;1922:175;1945:6;;;;;;1941:10;;;;1922:175;;;1980:39;1994:11;;-1:-1:-1;;;;;1980:13:2;:39;:::i;:::-;2027:5;27:10:-1;;39:1;23:18;;;45:23;;;-1:-1;;;;;;;;;;;2027:23:2;;;;27:10:-1;;23:18;;;45:23;;-1:-1;2058:32:2;;;-1:-1:-1;;;;;;;;;;;2058:32:2;;;;1966:53;;-1:-1:-1;1953:3:2;1922:175;;;-1:-1:-1;2114:39:2;2128:11;;-1:-1:-1;;;;;2114:13:2;:39;:::i;:::-;2103:5;:50;-1:-1:-1;;1629:1:8;1744:7;:22;3499:17:10;3491:67;;;;-1:-1:-1;;;3491:67:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3568:8;:20;;-1:-1:-1;;;;;;3568:20:10;;;-1:-1:-1;;;;;3568:20:10;;;;;;;3598:8;:20;;;;;;;;;;;;;;3628:12;:28;;;;3666:21;:46;;;;;;;;;;;;;;-1:-1:-1;1065:5:0;:14;;;;;;;;;;;;;;;-1:-1:-1;728:2267:0;;-1:-1:-1;;;;728:2267:0;2230:445:2;2305:7;-1:-1:-1;;;;;;;;;;;2328:27:2;;2320:72;;;;;-1:-1:-1;;;2320:72:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2406:28:2;;2398:74;;;;-1:-1:-1;;;2398:74:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2538:23;;;-1:-1:-1;;;2538:23:2;;;;;;;;2478:9;2538:23;;;;;;;;2498:5;;2478:9;;2538:6;;:17;;:23;;;;;;;;;;:6;:23;;;5:2:-1;;;;30:1;27;20:12;5:2;2538:23:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2538:23:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2538:23:2;;;;;;;;;-1:-1:-1;2538:23:2;-1:-1:-1;;;;;;;;;;;;2589:6:2;2578:1;2571:38;2567:42;;2624:6;:17;2642:1;2645;2624:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2624:23:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2624:23:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2624:23:2;;2230:445;-1:-1:-1;;;;;2230:445:2:o;728:2267:0:-;;;;;;;",
  "deployedSourceMap": "728:2267:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13627:124:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13627:124:10;;;:::i;:::-;;;;-1:-1:-1;;;;;13627:124:10;;;;;;;;;;;;;;977:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;977:30:10;;;:::i;:::-;;;;;;;;;;;;;;;;13427:143;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13427:143:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;13427:143:10;;;;;;;;;;:::i;:::-;;1122:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1122:25:10;;;:::i;2230:445:2:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2230:445:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2230:445:2;;;;;;;:::i;933:114::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;933:114:2;;;:::i;1786:36:10:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1786:36:10;;;:::i;1209:20:2:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1209:20:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14006:117:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14006:117:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14006:117:10;-1:-1:-1;;;;;14006:117:10;;:::i;1313:23::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1313:23:10;;;:::i;2189:48::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2189:48:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2189:48:10;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2189:48:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2189:48:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1342:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1342:29:10;;;:::i;3553:342:2:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3553:342:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3553:342:2;;:::i;:::-;;;;;;;;;;;;;;;;;;15199:114:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15199:114:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15199:114:10;;:::i;2243:32::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2243:32:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2243:32:10;;:::i;9590:2701::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;9590:2701:10;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;9590:2701:10;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;9590:2701:10;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;9590:2701:10;;-1:-1:-1;9590:2701:10;-1:-1:-1;9590:2701:10;;;;;;;;-1:-1:-1;;;;;9590:2701:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1378:27::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1378:27:10;;;:::i;1430:34:2:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1430:34:2;;;:::i;13099:119:10:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13099:119:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13099:119:10;-1:-1:-1;;;;;13099:119:10;;:::i;12536:327::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12536:327:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12536:327:10;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;12536:327:10;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;12536:327:10;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;12536:327:10;;-1:-1:-1;12536:327:10;-1:-1:-1;12536:327:10;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12536:327:10;;;;;;;;;;;;;;;;;13806:154;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13806:154:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13806:154:10;-1:-1:-1;;;;;13806:154:10;;:::i;4085:506::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4085:506:10;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;4085:506:10;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4085:506:10;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;4085:506:10;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;4085:506:10;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4085:506:10;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;4085:506:10;;-1:-1:-1;4085:506:10;-1:-1:-1;4085:506:10;;;;;-1:-1:-1;;;;;4085:506:10;;;;;;;;;;:::i;13272:108::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13272:108:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13272:108:10;-1:-1:-1;;;;;13272:108:10;;:::i;1040:31::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1040:31:10;;;:::i;3941:93:2:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3941:93:2;;;:::i;1549:39::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1549:39:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1549:39:2;;:::i;1499:46::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1499:46:2;;;:::i;6594:2065:10:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;6594:2065:10;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;6594:2065:10;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6594:2065:10;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6594:2065:10;;-1:-1:-1;6594:2065:10;-1:-1:-1;6594:2065:10;;;;;;;;-1:-1:-1;;;;;6594:2065:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;12349:122::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12349:122:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12349:122:10;;:::i;1404:22:2:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1404:22:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1404:22:2;;:::i;1051:114::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1051:114:2;;;:::i;14215:929:10:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;14215:929:10;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;14215:929:10;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14215:929:10;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14215:929:10;;;;;;;;;;;;-1:-1:-1;;;;;14215:929:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;14215:929:10;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14215:929:10;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;14215:929:10;;-1:-1:-1;14215:929:10;-1:-1:-1;14215:929:10;:::i;1369:31:2:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1369:31:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1369:31:2;;:::i;763:20:0:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;763:20:0;;;:::i;1468:27:2:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1468:27:2;;;:::i;13627:124:10:-;2458:10;13698:7;2449:20;;;:8;:20;;;;;;-1:-1:-1;;;;;2449:20:10;2441:85;;;;-1:-1:-1;;;2441:85:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13733:10:10;13724:20;;;;:8;:20;;;;;;-1:-1:-1;;;;;13724:20:10;2536:1;13627:124;:::o;977:30::-;;;;:::o;13427:143::-;2336:8;;-1:-1:-1;;;;;2336:8:10;2322:10;:22;2314:72;;;;-1:-1:-1;;;2314:72:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13526:18:10;;;;;;;:8;:18;;;;;:37;;-1:-1:-1;;;;;;13526:37:10;;;;;;;;13427:143::o;1122:25::-;;;-1:-1:-1;;;;;1122:25:10;;:::o;2230:445:2:-;2305:7;-1:-1:-1;;;;;;;;;;;2328:27:2;;2320:72;;;;;-1:-1:-1;;;2320:72:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2406:28:2;;2398:74;;;;-1:-1:-1;;;2398:74:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2538:23;;;-1:-1:-1;;;2538:23:2;;;;;;;;2478:9;2538:23;;;;;;;;2498:5;;2478:9;;2538:6;;:17;;:23;;;;;;;;;;:6;:23;;;5:2:-1;;;;30:1;27;20:12;5:2;2538:23:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2538:23:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2538:23:2;;;;;;;;;-1:-1:-1;2538:23:2;-1:-1:-1;;;;;;;;;;;;2589:6:2;2578:1;2571:38;2567:42;;2624:6;:17;2642:1;2645;2624:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2624:23:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2624:23:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2624:23:2;;2230:445;-1:-1:-1;;;;;2230:445:2:o;933:114::-;-1:-1:-1;;;;;;;;;;;933:114:2;:::o;1786:36:10:-;;;-1:-1:-1;;;;;1786:36:10;;:::o;1209:20:2:-;;;;;;:::o;14006:117:10:-;2336:8;;-1:-1:-1;;;;;2336:8:10;2322:10;:22;2314:72;;;;-1:-1:-1;;;2314:72:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14084:14;:32;;-1:-1:-1;;;;;;14084:32:10;-1:-1:-1;;;;;14084:32:10;;;;;;;;;;14006:117::o;1313:23::-;;;-1:-1:-1;;;;;1313:23:10;;:::o;2189:48::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2189:48:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2189:48:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2189:48:10;;;;-1:-1:-1;2189:48:10;;;;;;:::o;1342:29::-;;;-1:-1:-1;;;;;1342:29:10;;:::o;3553:342:2:-;3609:4;3625:10;3621:43;;-1:-1:-1;3652:5:2;3645:12;;3621:43;3680:16;;;;3702:171;3726:5;3732:1;3726:8;;;;;;;;;;;3717:5;:17;3713:53;;;3753:4;3746:11;;;;;3713:53;3777:6;;;3773:52;;-1:-1:-1;1542:3:2;3773:52;3855:16;;-1:-1:-1;;3832:3:2;;;;3855:16;3850:21;;;3855:16;;3850:21;;3702:171;;3885:5;3878:12;;;3553:342;;;;:::o;15199:114:10:-;2607:14;;-1:-1:-1;;;;;2607:14:10;2593:10;:28;2585:85;;;;-1:-1:-1;;;2585:85:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15305:1;15264:10;:31;15275:15;15291:2;15275:19;;;;;;;;;;;;;;;;15264:31;;;;;;;;;;;:38;;;:42;;;;;;;;;;;;;;;;;;15199:114;:::o;2243:32::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2243:32:10;:::o;9590:2701::-;1672:1:8;2261:7;;:19;;2253:63;;;;;-1:-1:-1;;;2253:63:8;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2253:63:8;;;;;;;;;;;;;;;1672:1;2391:7;:18;10196:26:10;;;;:10;:26;;;;;:33;;;;;;;:38;;10188:74;;;;;-1:-1:-1;;;10188:74:10;;;;;;;;;;;;-1:-1:-1;;;10188:74:10;;;;;;;;;;;;;;;10280:27;;;;:11;:27;;;;;;;;10272:67;;;;;-1:-1:-1;;;10272:67:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;10358:27;;;;:11;:27;;;;;;;;10357:28;10349:78;;;;-1:-1:-1;;;10349:78:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10446:31;;;;:15;:31;;;;;;;;10445:32;10437:76;;;;;-1:-1:-1;;;10437:76:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;10531:18;10543:5;10531:11;:18::i;:::-;10523:59;;;;;-1:-1:-1;;;10523:59:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;10626:1;10600:23;;;:7;:23;;;;;;10592:71;;;;;-1:-1:-1;;;10592:71:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;10673:20;10706:23;;;:7;:23;;;;;;10696:33;;:69;;10742:23;;;;:7;:23;;;;;;10696:69;;;10732:7;10696:69;10673:92;;10825:1;10810:12;:16;10802:58;;;;;-1:-1:-1;;;10802:58:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;10879:29;;;;:13;:29;;;;;;;;;:34;:78;;;;-1:-1:-1;10931:26:10;;;;:10;:26;;;;;;-1:-1:-1;;;;;10931:26:10;10917:10;:40;10879:78;10878:118;;;-1:-1:-1;10962:29:10;;;;:13;:29;;;;;;;;:34;10878:118;10870:168;;;;-1:-1:-1;;;10870:168:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11057:8;;;;;;;;;-1:-1:-1;;;;;11057:8:10;-1:-1:-1;;;;;11057:20:10;;11078:6;;11057:228;;;;;;;;11108:5;11100:14;;11057:228;;;;11137:14;11129:23;;11057:228;;;;11175:10;-1:-1:-1;;;;;11167:19:10;11057:228;;;;11208:8;-1:-1:-1;;;;;11200:17:10;11057:228;;;;11240:12;11232:21;;11057:228;;;;11267:7;11057:228;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;11057:228:10;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;11057:228:10;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11057:228:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11057:228:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11057:228:10;11049:266;;;;;-1:-1:-1;;;11049:266:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;11365:20;11388:23;11396:14;11388:7;:23::i;:::-;11365:46;;11441:1;11424:14;:18;:71;;;;-1:-1:-1;11465:30:10;;;;:14;:30;;;;;;11446:15;:49;;11424:71;11421:214;;;11497:30;;;;:14;:30;;;;;:47;;;11421:214;;;11605:30;;;;:14;:30;;;;;;;11572;;;;;:63;11421:214;11671:27;;;;:11;:27;;;;;;;;:34;;-1:-1:-1;;11671:34:10;;;11701:4;11671:34;;;;;;11715:7;:23;;;;;:33;;;11758:13;:29;;;;;:44;;11671:34;11758:44;;;;;;;;11841:17;:43;;11874:10;11841:43;;;11861:10;11841:43;11812:26;;;;:10;:26;;;;;;;;:72;;-1:-1:-1;;;;;;11812:72:10;-1:-1:-1;;;;;11812:72:10;;;;;;;;;;;11953:23;;;:7;:23;;;;:41;;11981:12;11953:27;:41::i;:::-;11927:23;;;;:7;:23;;;;;:67;;;12038:28;:43;;12076:5;12038:43;;;12069:4;12038:43;12004:31;;;;:15;:31;;;;;;;;;:77;;;;;-1:-1:-1;;12004:77:10;;;;;;;;;;12105:97;;;;;;;12144:15;12105:97;;;;;;;12004:77;12105:97;;;;;;-1:-1:-1;;;;;12105:97:10;;;;;;;;;;;;;12113:14;;12105:97;;;;;;;;;;12217:67;;;12236:3;12217:67;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12217:67:10;;;;;;;;;;;;;-1:-1:-1;;1629:1:8;2564:7;:22;-1:-1:-1;;;;;;;;;;;9590:2701:10:o;1378:27::-;;;;:::o;1430:34:2:-;;;;;;:::o;13099:119:10:-;2336:8;;-1:-1:-1;;;;;2336:8:10;2322:10;:22;2314:72;;;;-1:-1:-1;;;2314:72:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13177:8;:34;;-1:-1:-1;;;;;;13177:34:10;-1:-1:-1;;;;;13177:34:10;;;;;;;;;;13099:119::o;12536:327::-;12656:35;;;;;;;;;;;;;;;;12617:19;;12667:16;12656:35;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;12656:35:10;-1:-1:-1;12648:43:10;-1:-1:-1;12705:6:10;12701:156;12717:27;;;12701:156;;;12769:28;12777:16;;12794:1;12777:19;;;;;;;;;;;;;12769:7;:28::i;:::-;12765:82;;;12828:4;12817:5;12823:1;12817:8;;;;;;;;:15;;;:8;;;;;;;;;;;:15;12765:82;12746:3;;12701:156;;;;12536:327;;;;:::o;13806:154::-;2336:8;;-1:-1:-1;;;;;2336:8:10;2322:10;:22;2314:72;;;;-1:-1:-1;;;2314:72:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13907:21;:46;;-1:-1:-1;;;;;;13907:46:10;-1:-1:-1;;;;;13907:46:10;;;;;;;;;;13806:154::o;4085:506::-;1672:1:8;2261:7;;:19;;2253:63;;;;;-1:-1:-1;;;2253:63:8;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2253:63:8;;;;;;;;;;;;;;;1672:1;2391:7;:18;4294:17:10;;;;;:38;;;4315:12;:17;;4331:1;4315:17;4294:38;4286:89;;;;-1:-1:-1;;;4286:89:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4393:26:10;;4385:35;;;;;;4439:9;4435:150;4454:19;;;4435:150;;;4494:80;4503:8;;4512:1;4503:11;;;;;;;;;;;;;4516:12;;4529:1;4516:15;;;;;;;;;;;;;4533:12;4547:10;4559:14;4494:8;:80::i;:::-;4475:3;;4435:150;;;-1:-1:-1;;1629:1:8;2564:7;:22;-1:-1:-1;;;;;;4085:506:10:o;13272:108::-;2336:8;;-1:-1:-1;;;;;2336:8:10;2322:10;:22;2314:72;;;;-1:-1:-1;;;2314:72:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13350:8;:23;;-1:-1:-1;;;;;;13350:23:10;-1:-1:-1;;;;;13350:23:10;;;;;;;;;;13272:108::o;1040:31::-;;;;:::o;3941:93:2:-;4012:16;;3984:7;;4006:5;;4012:16;;4006:23;;;;;;;;;3999:30;;3941:93;:::o;1549:39::-;;;;;;;;;;;;;-1:-1:-1;1549:39:2;:::o;1499:46::-;1542:3;1499:46;:::o;6594:2065:10:-;1672:1:8;2261:7;;:19;;2253:63;;;;;-1:-1:-1;;;2253:63:8;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2253:63:8;;;;;;;;;;;;;;;1672:1;2391:7;:18;6905:23:10;;;;:10;:23;;;;;:30;;;;;;;:35;;6897:71;;;;;-1:-1:-1;;;6897:71:10;;;;;;;;;;;;-1:-1:-1;;;6897:71:10;;;;;;;;;;;;;;;6987:31;;;;:15;:31;;;;;;;;6986:32;6978:76;;;;;-1:-1:-1;;;6978:76:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;7072:18;7084:5;7072:11;:18::i;:::-;7064:59;;;;;-1:-1:-1;;;7064:59:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;7175:26;;;;:13;:26;;;;;;;;;:31;:72;;;;-1:-1:-1;7224:23:10;;;;:10;:23;;;;;;-1:-1:-1;;;;;7210:37:10;;;7224:23;;7210:37;7175:72;7174:109;;;-1:-1:-1;7252:26:10;;;;:13;:26;;;;;;;;:31;7174:109;7166:162;;;;-1:-1:-1;;;7166:162:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7369:1;7346:20;;;:7;:20;;;;;;7338:68;;;;;-1:-1:-1;;;7338:68:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;7416:20;7449;;;:7;:20;;;;;;7439:30;;:63;;7482:20;;;;:7;:20;;;;;;7439:63;;;7472:7;7439:63;7416:86;;7562:1;7547:12;:16;7539:58;;;;;-1:-1:-1;;;7539:58:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;7634:27;;;;:14;:27;;;;;;7615:15;:46;;7607:104;;;;-1:-1:-1;;;7607:104:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7745:4;7729:12;:20;;7721:70;;;;-1:-1:-1;;;7721:70:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7810:8;;:212;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7919:19:10;;;7810:212;;;;7953:17;;;7810:212;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7810:212:10;;:8;;;;;:20;;7831:6;;;;7810:212;;;;;;;;;;;;;;;;:8;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7810:212:10;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7810:212:10;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7810:212:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7810:212:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7810:212:10;7802:247;;;;;-1:-1:-1;;;7802:247:10;;;;;;;;;;;;-1:-1:-1;;;7802:247:10;;;;;;;;;;;;;;;8064:25;8092:26;;;:13;:26;;;;;;;;;:31;:70;;8152:10;8092:70;;;8126:23;;;;:10;:23;;;;;;-1:-1:-1;;;;;8126:23:10;8092:70;8207:10;8172:23;8198:20;;;:8;:20;;;;;;8064:98;;-1:-1:-1;8172:23:10;-1:-1:-1;;;;;8198:20:10;:36;:83;;8270:10;8261:20;;;;:8;:20;;;;;;-1:-1:-1;;;;;8261:20:10;8198:83;;;8237:21;;-1:-1:-1;;;;;8237:21:10;8198:83;8172:109;;8291:65;8308:9;8319:15;8337:4;8343:12;8291:16;:65::i;:::-;8394:20;;;;:7;:20;;;;;;:38;;8419:12;8394:38;:24;:38;:::i;:::-;8371:20;;;;:7;:20;;;;;:61;8456:11;;:29;;8472:12;8456:29;:15;:29;:::i;:::-;8442:11;:43;8529:20;;;;:7;:20;;;;;;:25;:40;;8564:5;8529:40;;;8557:4;8529:40;8495:31;;;;:15;:31;;;;;;;;;:74;;-1:-1:-1;;8495:74:10;;;;;;;;;;;8584:68;;-1:-1:-1;;;;;8584:68:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1629:1:8;2564:7;:22;-1:-1:-1;;;;;;;;;;6594:2065:10:o;12349:122::-;12410:4;12433:31;;;:15;:31;;;;;;;;;12349:122::o;1404:22:2:-;;;;;;;;;;1051:114;1088:77;1051:114;:::o;14215:929:10:-;14556:7;1672:1:8;2261:7;;:19;;2253:63;;;;;-1:-1:-1;;;2253:63:8;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2253:63:8;;;;;;;;;;;;;;;1672:1;2391:7;:18;;;;14583:8:10;;;;;;;;;-1:-1:-1;;;;;14583:8:10;-1:-1:-1;;;;;14583:20:10;;14604:6;;14583:212;;;;;;;;14634:5;14626:14;;14583:212;;;;14663:14;14655:23;;14583:212;;;;14700:10;-1:-1:-1;;;;;14692:19:10;14583:212;;;;14734:8;-1:-1:-1;;;;;14726:17:10;14583:212;;;;14758:4;14583:212;;;;14777:7;14583:212;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14583:212:10;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14583:212:10;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14583:212:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14583:212:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14583:212:10;14575:247;;;;;-1:-1:-1;;;14575:247:10;;;;;;;;;;;;-1:-1:-1;;;14575:247:10;;;;;;;;;;;;;;;14867:183;;;;;;;;14891:12;;14867:183;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;-1:-1;14867:183:10;;;-1:-1:-1;;14918:1:10;14867:183;;;;;;;;14934:15;14867:183;;;;;;;;-1:-1:-1;;;;;14867:183:10;;;;;;;;;;;;;15009:10;14867:183;;;;;;;;;;;14841:23;;;:10;:23;;;;;;:209;;;;:23;;:209;;-1:-1:-1;14841:23:10;;:209;;;;:::i;:::-;-1:-1:-1;14841:209:10;;;;;;;;;;-1:-1:-1;;14841:209:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;14841:209:10;;;-1:-1:-1;;;;;14841:209:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15060:15;27:10:-1;;23:18;;;45:23;;-1:-1;15060:33:10;;;;;;;;;15110:22;;2564:7:8;:22;;;;-1:-1:-1;;;;;15110:26:10;;14215:929;-1:-1:-1;;;;;;;;14215:929:10:o;1369:31:2:-;;;;;;;;;;763:20:0;;;-1:-1:-1;;;;;763:20:0;;:::o;1468:27:2:-;;;-1:-1:-1;;;1468:27:2;;;;;:::o;2679:802::-;2770:9;;2728:12;2820:6;;2728:12;;2770:9;-1:-1:-1;;;2770:9:2;;;;;;2820:6;;2816:1;2809:17;2793:33;;;;2785:93;;;;-1:-1:-1;;;2785:93:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2884:9;:14;;;-1:-1:-1;;;2884:14:2;;;;;2897:1;2884:14;;;;;-1:-1:-1;;2884:14:2;;;;;;2931:5;-1:-1:-1;;;2980:355:2;3003:6;;;;;;2999:10;;;;2980:355;;;3028:16;;;3024:225;;3068:16;3061:23;;3102:5;3108:1;3102:8;;;;;;;;;;;;;;;;;;3094:16;;3141;3121:14;3136:1;3121:17;;;;;;;;;;;;;;;;;;;:36;3024:225;;;3189:14;3204:1;3189:17;;;;;;;;;;;;;;;;;;3182:24;;3224:16;3216:24;;3024:225;3276:26;3290:4;3296:5;3276:13;:26::i;:::-;3257:45;-1:-1:-1;3327:1:2;3311:17;;;;;-1:-1:-1;3011:3:2;;2980:355;;;-1:-1:-1;3361:16:2;;1542:3;;3360:42;3361:16;;;;:20;3360:42;3341:16;:61;;-1:-1:-1;;3341:61:2;3360:42;;;;3341:61;;;;;;;;;;;;3434:16;;3408:5;;3414:16;3408:23;;;;;;;;:42;-1:-1:-1;;3463:9:2;;-1:-1:-1;;;3463:9:2;;;;-1:-1:-1;;3463:13:2;;2679:802;-1:-1:-1;;;;2679:802:2:o;231:179:9:-;289:7;321:1;316;:6;;308:49;;;;;-1:-1:-1;;;308:49:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;379:5:9;;;231:179::o;5136:848:10:-;5292:24;;;;:11;:24;;;;;;;;5291:25;5283:71;;;;-1:-1:-1;;;5283:71:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5365:20;5388;5396:11;5388:7;:20::i;:::-;5365:43;;5418:24;5434:7;5418:15;:24::i;:::-;5461;;;;:11;:24;;;;;;;;:31;;-1:-1:-1;;5461:31:10;;;5488:4;5461:31;;;;;;5502:7;:20;;;;;:30;;;5542:13;:26;;;;;:41;;5461:31;5542:41;;;;;;;;5619:17;:43;;5652:10;5619:43;;;5639:10;5619:43;5593:23;;;;:10;:23;;;;;:69;;-1:-1:-1;;;;;;5593:69:10;-1:-1:-1;;;;;5593:69:10;;;;;;;;;;5719:15;5702:32;;:67;;5755:14;5702:67;;;5737:15;5702:67;5672:27;;;;:14;:27;;;;;:97;5793:11;;:24;;5809:7;5793:24;:15;:24;:::i;:::-;5779:11;:38;5842:12;;:25;;5859:7;5842:25;:16;:25;:::i;:::-;5827:12;:40;5883:94;;;;;;;;5919:15;5883:94;;;;;;;;;;;-1:-1:-1;;;;;5883:94:10;;;;;;;;;;;;;;5891:11;;5883:94;;;;;;;;;;5136:848;;;;;;:::o;1293:558:0:-;1502:46;1521:10;1543:4;1533:7;:14;1502:18;:46::i;:::-;1558:8;;1554:63;;1576:34;1595:8;1605:4;1576:18;:34::i;:::-;1293:558;;;;:::o;1088:201::-;1153:9;:14;1145:75;;;;-1:-1:-1;;;1145:75:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1226:58;1249:10;1269:4;1276:7;1226:22;:58::i;:::-;1088:201;:::o;49:176:9:-;107:7;138:5;;;161:6;;;;153:46;;;;;-1:-1:-1;;;153:46:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;217:1;49:176;-1:-1:-1;;;49:176:9:o;2449:544:0:-;2558:5;;2569:63;;;-1:-1:-1;;;;;2569:63:0;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;2569:63:0;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;2558:75:0;;;;2523:12;;2537:17;;2558:5;;;2569:63;2558:75;;;;25:18:-1;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2558:75:0;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;2522:111:0;;;;2647:7;2639:37;;;;;-1:-1:-1;;;2639:37:0;;;;;;;;;;;;-1:-1:-1;;;2639:37:0;;;;;;;;;;;;;;;2776:11;;:15;2772:217;;2809:4;:11;2824:2;2809:17;2801:72;;;;-1:-1:-1;;;2801:72:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2902:4;2891:24;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2891:24:0;;-1:-1:-1;2891:24:0;2923:59;;;;-1:-1:-1;;;2923:59:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1855:590;1983:5;;1994:74;;;-1:-1:-1;;;;;1994:74:0;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1994:74:0;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;1983:86:0;;;;1948:12;;1962:17;;1983:5;;;1994:74;1983:86;;;;25:18:-1;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1983:86:0;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;1947:122:0;;;;2083:7;2075:45;;;;;-1:-1:-1;;;2075:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;2220:11;;:15;2216:225;;2253:4;:11;2268:2;2253:17;2245:72;;;;-1:-1:-1;;;2245:72:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2346:4;2335:24;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2335:24:0;;-1:-1:-1;2335:24:0;2367:67;;;;-1:-1:-1;;;2367:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1855:590;;;;;:::o;728:2267::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;728:2267:0;;;-1:-1:-1;728:2267:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "/**\n *  $$$$$$\\  $$\\                 $$\\                           \n * $$  __$$\\ $$ |                $$ |                          \n * $$ /  \\__|$$$$$$$\\   $$$$$$\\  $$ |  $$\\  $$$$$$\\   $$$$$$\\  \n * \\$$$$$$\\  $$  __$$\\  \\____$$\\ $$ | $$  |$$  __$$\\ $$  __$$\\ \n *  \\____$$\\ $$ |  $$ | $$$$$$$ |$$$$$$  / $$$$$$$$ |$$ |  \\__|\n * $$\\   $$ |$$ |  $$ |$$  __$$ |$$  _$$<  $$   ____|$$ |      \n * \\$$$$$$  |$$ |  $$ |\\$$$$$$$ |$$ | \\$$\\ \\$$$$$$$\\ $$ |      \n *  \\______/ \\__|  \\__| \\_______|\\__|  \\__| \\_______|\\__|\n * $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n * ____________________________________________________________\n*/\n\npragma solidity 0.5.17;\n// pragma experimental ABIEncoderV2;\n\nimport \"./Shaker.sol\";\n\ncontract ERC20Shaker is Shaker {\n  address public token;\n\n  constructor(\n    IVerifier _verifier,\n    uint256 _denomination,\n    uint32 _merkleTreeHeight,\n    address _operator,\n    address _commonWithdrawAddress,\n    address _token\n  ) Shaker(_verifier, _denomination, _merkleTreeHeight, _operator, _commonWithdrawAddress) public {\n    token = _token;\n  }\n\n  function _processDeposit(uint256 _amount) internal {\n    require(msg.value == 0, \"ETH value is supposed to be 0 for ERC20 instance\");\n    _safeErc20TransferFrom(msg.sender, address(this), _amount);\n  }\n\n  function _processWithdraw(address payable _recipient, address _relayer, uint256 _fee, uint256 _refund) internal {\n    // require(msg.value == _refund, \"Incorrect refund amount received by the contract\");\n\n    _safeErc20Transfer(_recipient, _refund - _fee);\n    if (_fee > 0) {\n      _safeErc20Transfer(_relayer, _fee);\n    }\n\n    // if (_refund > 0) {\n    //   (bool success, ) = _recipient.call.value(_refund)(\"\");\n    //   if (!success) {\n    //     // let's return _refund back to the relayer\n    //     _relayer.transfer(_refund);\n    //   }\n    // }\n  }\n\n  function _safeErc20TransferFrom(address _from, address _to, uint256 _amount) internal {\n    (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd /* transferFrom */, _from, _to, _amount));\n    require(success, \"not enough allowed tokens\");\n\n    // if contract returns some data lets make sure that is `true` according to standard\n    if (data.length > 0) {\n      require(data.length == 32, \"data length should be either 0 or 32 bytes\");\n      success = abi.decode(data, (bool));\n      require(success, \"not enough allowed tokens. Token returns false.\");\n    }\n  }\n\n  function _safeErc20Transfer(address _to, uint256 _amount) internal {\n    (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb /* transfer */, _to, _amount));\n    require(success, \"not enough tokens\");\n\n    // if contract returns some data lets make sure that is `true` according to standard\n    if (data.length > 0) {\n      require(data.length == 32, \"data length should be either 0 or 32 bytes\");\n      success = abi.decode(data, (bool));\n      require(success, \"not enough tokens. Token returns false.\");\n    }\n  }\n}\n",
  "sourcePath": "/Users/guqianfeng/web/my_dapps/hunbi/tornado-core/contracts/ERC20Shaker.sol",
  "ast": {
    "absolutePath": "/Users/guqianfeng/web/my_dapps/hunbi/tornado-core/contracts/ERC20Shaker.sol",
    "exportedSymbols": {
      "ERC20Shaker": [
        199
      ]
    },
    "id": 200,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "642:23:0"
      },
      {
        "absolutePath": "/Users/guqianfeng/web/my_dapps/hunbi/tornado-core/contracts/Shaker.sol",
        "file": "./Shaker.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 200,
        "sourceUnit": 2090,
        "src": "704:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "Shaker",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2089,
              "src": "752:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Shaker_$2089",
                "typeString": "contract Shaker"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "752:6:0"
          }
        ],
        "contractDependencies": [
          671,
          890,
          2089
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 199,
        "linearizedBaseContracts": [
          199,
          2089,
          890,
          671
        ],
        "name": "ERC20Shaker",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 199,
            "src": "763:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "763:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 32,
              "nodeType": "Block",
              "src": "1059:25:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 28,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1065:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 29,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "1073:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1065:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 31,
                  "nodeType": "ExpressionStatement",
                  "src": "1065:14:0"
                }
              ]
            },
            "documentation": null,
            "id": 33,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 21,
                    "name": "_verifier",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8,
                    "src": "972:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVerifier_$1040",
                      "typeString": "contract IVerifier"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 22,
                    "name": "_denomination",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10,
                    "src": "983:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 23,
                    "name": "_merkleTreeHeight",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12,
                    "src": "998:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 24,
                    "name": "_operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14,
                    "src": "1017:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 25,
                    "name": "_commonWithdrawAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16,
                    "src": "1028:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 26,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 20,
                  "name": "Shaker",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2089,
                  "src": "965:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Shaker_$2089_$",
                    "typeString": "type(contract Shaker)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "965:86:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "name": "_verifier",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "805:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVerifier_$1040",
                    "typeString": "contract IVerifier"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7,
                    "name": "IVerifier",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1040,
                    "src": "805:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVerifier_$1040",
                      "typeString": "contract IVerifier"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10,
                  "name": "_denomination",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "830:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "830:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12,
                  "name": "_merkleTreeHeight",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "857:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "857:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14,
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "887:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "887:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16,
                  "name": "_commonWithdrawAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "910:30:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "910:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "946:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "946:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "799:165:0"
            },
            "returnParameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1059:0:0"
            },
            "scope": 199,
            "src": "788:296:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 55,
              "nodeType": "Block",
              "src": "1139:150:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 42,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 39,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4125,
                            "src": "1153:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 40,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1153:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 41,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1166:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1153:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4554482076616c756520697320737570706f73656420746f206265203020666f7220455243323020696e7374616e6365",
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1169:50:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b14b0818f1fdc710b92ba7e1ce725992b43e47a5b220b1b890f352eeac2e1d5e",
                          "typeString": "literal_string \"ETH value is supposed to be 0 for ERC20 instance\""
                        },
                        "value": "ETH value is supposed to be 0 for ERC20 instance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b14b0818f1fdc710b92ba7e1ce725992b43e47a5b220b1b890f352eeac2e1d5e",
                          "typeString": "literal_string \"ETH value is supposed to be 0 for ERC20 instance\""
                        }
                      ],
                      "id": 38,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4128,
                        4129
                      ],
                      "referencedDeclaration": 4129,
                      "src": "1145:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1145:75:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "1145:75:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 47,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4125,
                          "src": "1249:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 48,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1249:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 50,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4151,
                            "src": "1269:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Shaker_$199",
                              "typeString": "contract ERC20Shaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Shaker_$199",
                              "typeString": "contract ERC20Shaker"
                            }
                          ],
                          "id": 49,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1261:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1261:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 52,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "1276:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 46,
                      "name": "_safeErc20TransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 143,
                      "src": "1226:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1226:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "1226:58:0"
                }
              ]
            },
            "documentation": null,
            "id": 56,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processDeposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "1113:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1113:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1112:17:0"
            },
            "returnParameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1139:0:0"
            },
            "scope": 199,
            "src": "1088:201:0",
            "stateMutability": "nonpayable",
            "superFunction": 1385,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 84,
              "nodeType": "Block",
              "src": "1405:446:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 68,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1521:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 69,
                          "name": "_refund",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "1533:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 70,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "1543:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1533:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 67,
                      "name": "_safeErc20Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 198,
                      "src": "1502:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1502:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "1502:46:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 74,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "1558:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 75,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1565:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1558:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 83,
                  "nodeType": "IfStatement",
                  "src": "1554:63:0",
                  "trueBody": {
                    "id": 82,
                    "nodeType": "Block",
                    "src": "1568:49:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 78,
                              "name": "_relayer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "1595:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 79,
                              "name": "_fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "1605:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 77,
                            "name": "_safeErc20Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "1576:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1576:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 81,
                        "nodeType": "ExpressionStatement",
                        "src": "1576:34:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 85,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processWithdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "1319:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1319:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "name": "_relayer",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "1347:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1347:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "1365:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1365:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64,
                  "name": "_refund",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "1379:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1379:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1318:77:0"
            },
            "returnParameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1405:0:0"
            },
            "scope": 199,
            "src": "1293:558:0",
            "stateMutability": "nonpayable",
            "superFunction": 1610,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 142,
              "nodeType": "Block",
              "src": "1941:504:0",
              "statements": [
                {
                  "assignments": [
                    95,
                    97
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 95,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 142,
                      "src": "1948:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 94,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1948:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 97,
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "scope": 142,
                      "src": "1962:17:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 96,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1962:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 108,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30783233623837326464",
                            "id": 102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2017:10:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_599290589_by_1",
                              "typeString": "int_const 599290589"
                            },
                            "value": "0x23b872dd"
                          },
                          {
                            "argumentTypes": null,
                            "id": 103,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87,
                            "src": "2048:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 104,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89,
                            "src": "2055:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 105,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91,
                            "src": "2060:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_599290589_by_1",
                              "typeString": "int_const 599290589"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 100,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4112,
                            "src": "1994:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1994:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1994:74:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 98,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "1983:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 99,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1983:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1983:86:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1947:122:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 110,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "2083:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f7420656e6f75676820616c6c6f77656420746f6b656e73",
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2092:27:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b31c8a8545ea674c554dd2f6bad7d7bd1dfe923a25150b76350dc6970bf3ff5c",
                          "typeString": "literal_string \"not enough allowed tokens\""
                        },
                        "value": "not enough allowed tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b31c8a8545ea674c554dd2f6bad7d7bd1dfe923a25150b76350dc6970bf3ff5c",
                          "typeString": "literal_string \"not enough allowed tokens\""
                        }
                      ],
                      "id": 109,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4128,
                        4129
                      ],
                      "referencedDeclaration": 4129,
                      "src": "2075:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2075:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "2075:45:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 114,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "2220:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2220:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2234:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2220:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 141,
                  "nodeType": "IfStatement",
                  "src": "2216:225:0",
                  "trueBody": {
                    "id": 140,
                    "nodeType": "Block",
                    "src": "2237:204:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 119,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 97,
                                  "src": "2253:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 120,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2253:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "3332",
                                "id": 121,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2268:2:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_32_by_1",
                                  "typeString": "int_const 32"
                                },
                                "value": "32"
                              },
                              "src": "2253:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "64617461206c656e6774682073686f756c64206265206569746865722030206f72203332206279746573",
                              "id": 123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2272:44:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_22b4652a1c8fbdfc6305c7ee289e87caf6a45e5ae327ee8f67eb64ba36d62560",
                                "typeString": "literal_string \"data length should be either 0 or 32 bytes\""
                              },
                              "value": "data length should be either 0 or 32 bytes"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_22b4652a1c8fbdfc6305c7ee289e87caf6a45e5ae327ee8f67eb64ba36d62560",
                                "typeString": "literal_string \"data length should be either 0 or 32 bytes\""
                              }
                            ],
                            "id": 118,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4128,
                              4129
                            ],
                            "referencedDeclaration": 4129,
                            "src": "2245:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2245:72:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 125,
                        "nodeType": "ExpressionStatement",
                        "src": "2245:72:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 126,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 95,
                            "src": "2325:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 129,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 97,
                                "src": "2346:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "id": 130,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2353:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bool_$",
                                      "typeString": "type(bool)"
                                    },
                                    "typeName": "bool"
                                  }
                                ],
                                "id": 131,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2352:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bool_$",
                                  "typeString": "type(bool)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_type$_t_bool_$",
                                  "typeString": "type(bool)"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 127,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4112,
                                "src": "2335:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "decode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2335:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2335:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2325:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 134,
                        "nodeType": "ExpressionStatement",
                        "src": "2325:34:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 136,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 95,
                              "src": "2375:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6e6f7420656e6f75676820616c6c6f77656420746f6b656e732e20546f6b656e2072657475726e732066616c73652e",
                              "id": 137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2384:49:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6cfae212a217874b58247660ff4d75d72aa825e8f2120480a7da09cf7efa221d",
                                "typeString": "literal_string \"not enough allowed tokens. Token returns false.\""
                              },
                              "value": "not enough allowed tokens. Token returns false."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6cfae212a217874b58247660ff4d75d72aa825e8f2120480a7da09cf7efa221d",
                                "typeString": "literal_string \"not enough allowed tokens. Token returns false.\""
                              }
                            ],
                            "id": 135,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4128,
                              4129
                            ],
                            "referencedDeclaration": 4129,
                            "src": "2367:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2367:67:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "2367:67:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 143,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeErc20TransferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "1887:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1887:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "1902:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1902:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "1915:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1915:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1886:45:0"
            },
            "returnParameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1941:0:0"
            },
            "scope": 199,
            "src": "1855:590:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 197,
              "nodeType": "Block",
              "src": "2516:477:0",
              "statements": [
                {
                  "assignments": [
                    151,
                    153
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 151,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 197,
                      "src": "2523:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 150,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2523:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 153,
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "scope": 197,
                      "src": "2537:17:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 152,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2537:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 163,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30786139303539636262",
                            "id": 158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2592:10:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2835717307_by_1",
                              "typeString": "int_const 2835717307"
                            },
                            "value": "0xa9059cbb"
                          },
                          {
                            "argumentTypes": null,
                            "id": 159,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 145,
                            "src": "2619:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 160,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 147,
                            "src": "2624:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2835717307_by_1",
                              "typeString": "int_const 2835717307"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 156,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4112,
                            "src": "2569:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2569:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2569:63:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 154,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "2558:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2558:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2558:75:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2522:111:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 165,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "2647:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f7420656e6f75676820746f6b656e73",
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2656:19:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73949bcdc07934e9395e82489bb22c4742e057960a2c090d38e53d68d3caf52a",
                          "typeString": "literal_string \"not enough tokens\""
                        },
                        "value": "not enough tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73949bcdc07934e9395e82489bb22c4742e057960a2c090d38e53d68d3caf52a",
                          "typeString": "literal_string \"not enough tokens\""
                        }
                      ],
                      "id": 164,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4128,
                        4129
                      ],
                      "referencedDeclaration": 4129,
                      "src": "2639:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2639:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "2639:37:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 169,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "2776:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2776:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2790:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2776:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 196,
                  "nodeType": "IfStatement",
                  "src": "2772:217:0",
                  "trueBody": {
                    "id": 195,
                    "nodeType": "Block",
                    "src": "2793:196:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 174,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 153,
                                  "src": "2809:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 175,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2809:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "3332",
                                "id": 176,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2824:2:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_32_by_1",
                                  "typeString": "int_const 32"
                                },
                                "value": "32"
                              },
                              "src": "2809:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "64617461206c656e6774682073686f756c64206265206569746865722030206f72203332206279746573",
                              "id": 178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2828:44:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_22b4652a1c8fbdfc6305c7ee289e87caf6a45e5ae327ee8f67eb64ba36d62560",
                                "typeString": "literal_string \"data length should be either 0 or 32 bytes\""
                              },
                              "value": "data length should be either 0 or 32 bytes"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_22b4652a1c8fbdfc6305c7ee289e87caf6a45e5ae327ee8f67eb64ba36d62560",
                                "typeString": "literal_string \"data length should be either 0 or 32 bytes\""
                              }
                            ],
                            "id": 173,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4128,
                              4129
                            ],
                            "referencedDeclaration": 4129,
                            "src": "2801:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2801:72:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 180,
                        "nodeType": "ExpressionStatement",
                        "src": "2801:72:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 181,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 151,
                            "src": "2881:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 184,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 153,
                                "src": "2902:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "id": 185,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2909:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bool_$",
                                      "typeString": "type(bool)"
                                    },
                                    "typeName": "bool"
                                  }
                                ],
                                "id": 186,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2908:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bool_$",
                                  "typeString": "type(bool)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_type$_t_bool_$",
                                  "typeString": "type(bool)"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 182,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4112,
                                "src": "2891:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "decode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2891:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2891:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2881:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 189,
                        "nodeType": "ExpressionStatement",
                        "src": "2881:34:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 191,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 151,
                              "src": "2931:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6e6f7420656e6f75676820746f6b656e732e20546f6b656e2072657475726e732066616c73652e",
                              "id": 192,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2940:41:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_38fa5aabf87e9f42de902eb4d9022484dde7943d80702b79ba468e9fc08f5e5e",
                                "typeString": "literal_string \"not enough tokens. Token returns false.\""
                              },
                              "value": "not enough tokens. Token returns false."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_38fa5aabf87e9f42de902eb4d9022484dde7943d80702b79ba468e9fc08f5e5e",
                                "typeString": "literal_string \"not enough tokens. Token returns false.\""
                              }
                            ],
                            "id": 190,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4128,
                              4129
                            ],
                            "referencedDeclaration": 4129,
                            "src": "2923:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2923:59:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 194,
                        "nodeType": "ExpressionStatement",
                        "src": "2923:59:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeErc20Transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 198,
                  "src": "2477:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2477:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 147,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 198,
                  "src": "2490:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2490:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2476:30:0"
            },
            "returnParameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2516:0:0"
            },
            "scope": 199,
            "src": "2449:544:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 200,
        "src": "728:2267:0"
      }
    ],
    "src": "642:2354:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/guqianfeng/web/my_dapps/hunbi/tornado-core/contracts/ERC20Shaker.sol",
    "exportedSymbols": {
      "ERC20Shaker": [
        199
      ]
    },
    "id": 200,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "642:23:0"
      },
      {
        "absolutePath": "/Users/guqianfeng/web/my_dapps/hunbi/tornado-core/contracts/Shaker.sol",
        "file": "./Shaker.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 200,
        "sourceUnit": 2090,
        "src": "704:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "Shaker",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2089,
              "src": "752:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Shaker_$2089",
                "typeString": "contract Shaker"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "752:6:0"
          }
        ],
        "contractDependencies": [
          671,
          890,
          2089
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 199,
        "linearizedBaseContracts": [
          199,
          2089,
          890,
          671
        ],
        "name": "ERC20Shaker",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 199,
            "src": "763:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "763:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 32,
              "nodeType": "Block",
              "src": "1059:25:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 28,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1065:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 29,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "1073:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1065:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 31,
                  "nodeType": "ExpressionStatement",
                  "src": "1065:14:0"
                }
              ]
            },
            "documentation": null,
            "id": 33,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 21,
                    "name": "_verifier",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8,
                    "src": "972:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVerifier_$1040",
                      "typeString": "contract IVerifier"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 22,
                    "name": "_denomination",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10,
                    "src": "983:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 23,
                    "name": "_merkleTreeHeight",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12,
                    "src": "998:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 24,
                    "name": "_operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14,
                    "src": "1017:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 25,
                    "name": "_commonWithdrawAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16,
                    "src": "1028:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 26,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 20,
                  "name": "Shaker",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2089,
                  "src": "965:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Shaker_$2089_$",
                    "typeString": "type(contract Shaker)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "965:86:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "name": "_verifier",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "805:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVerifier_$1040",
                    "typeString": "contract IVerifier"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7,
                    "name": "IVerifier",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1040,
                    "src": "805:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVerifier_$1040",
                      "typeString": "contract IVerifier"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10,
                  "name": "_denomination",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "830:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "830:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12,
                  "name": "_merkleTreeHeight",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "857:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "857:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14,
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "887:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "887:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16,
                  "name": "_commonWithdrawAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "910:30:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "910:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "946:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "946:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "799:165:0"
            },
            "returnParameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1059:0:0"
            },
            "scope": 199,
            "src": "788:296:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 55,
              "nodeType": "Block",
              "src": "1139:150:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 42,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 39,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4125,
                            "src": "1153:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 40,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1153:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 41,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1166:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1153:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4554482076616c756520697320737570706f73656420746f206265203020666f7220455243323020696e7374616e6365",
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1169:50:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b14b0818f1fdc710b92ba7e1ce725992b43e47a5b220b1b890f352eeac2e1d5e",
                          "typeString": "literal_string \"ETH value is supposed to be 0 for ERC20 instance\""
                        },
                        "value": "ETH value is supposed to be 0 for ERC20 instance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b14b0818f1fdc710b92ba7e1ce725992b43e47a5b220b1b890f352eeac2e1d5e",
                          "typeString": "literal_string \"ETH value is supposed to be 0 for ERC20 instance\""
                        }
                      ],
                      "id": 38,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4128,
                        4129
                      ],
                      "referencedDeclaration": 4129,
                      "src": "1145:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1145:75:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "1145:75:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 47,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4125,
                          "src": "1249:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 48,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1249:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 50,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4151,
                            "src": "1269:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Shaker_$199",
                              "typeString": "contract ERC20Shaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Shaker_$199",
                              "typeString": "contract ERC20Shaker"
                            }
                          ],
                          "id": 49,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1261:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1261:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 52,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "1276:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 46,
                      "name": "_safeErc20TransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 143,
                      "src": "1226:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1226:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "1226:58:0"
                }
              ]
            },
            "documentation": null,
            "id": 56,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processDeposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "1113:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1113:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1112:17:0"
            },
            "returnParameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1139:0:0"
            },
            "scope": 199,
            "src": "1088:201:0",
            "stateMutability": "nonpayable",
            "superFunction": 1385,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 84,
              "nodeType": "Block",
              "src": "1405:446:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 68,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1521:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 69,
                          "name": "_refund",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "1533:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 70,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "1543:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1533:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 67,
                      "name": "_safeErc20Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 198,
                      "src": "1502:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1502:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "1502:46:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 74,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "1558:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 75,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1565:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1558:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 83,
                  "nodeType": "IfStatement",
                  "src": "1554:63:0",
                  "trueBody": {
                    "id": 82,
                    "nodeType": "Block",
                    "src": "1568:49:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 78,
                              "name": "_relayer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "1595:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 79,
                              "name": "_fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "1605:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 77,
                            "name": "_safeErc20Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "1576:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1576:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 81,
                        "nodeType": "ExpressionStatement",
                        "src": "1576:34:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 85,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processWithdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "1319:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1319:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "name": "_relayer",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "1347:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1347:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "1365:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1365:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64,
                  "name": "_refund",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "1379:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1379:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1318:77:0"
            },
            "returnParameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1405:0:0"
            },
            "scope": 199,
            "src": "1293:558:0",
            "stateMutability": "nonpayable",
            "superFunction": 1610,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 142,
              "nodeType": "Block",
              "src": "1941:504:0",
              "statements": [
                {
                  "assignments": [
                    95,
                    97
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 95,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 142,
                      "src": "1948:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 94,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1948:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 97,
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "scope": 142,
                      "src": "1962:17:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 96,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1962:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 108,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30783233623837326464",
                            "id": 102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2017:10:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_599290589_by_1",
                              "typeString": "int_const 599290589"
                            },
                            "value": "0x23b872dd"
                          },
                          {
                            "argumentTypes": null,
                            "id": 103,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87,
                            "src": "2048:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 104,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89,
                            "src": "2055:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 105,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91,
                            "src": "2060:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_599290589_by_1",
                              "typeString": "int_const 599290589"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 100,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4112,
                            "src": "1994:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1994:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1994:74:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 98,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "1983:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 99,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1983:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1983:86:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1947:122:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 110,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "2083:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f7420656e6f75676820616c6c6f77656420746f6b656e73",
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2092:27:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b31c8a8545ea674c554dd2f6bad7d7bd1dfe923a25150b76350dc6970bf3ff5c",
                          "typeString": "literal_string \"not enough allowed tokens\""
                        },
                        "value": "not enough allowed tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b31c8a8545ea674c554dd2f6bad7d7bd1dfe923a25150b76350dc6970bf3ff5c",
                          "typeString": "literal_string \"not enough allowed tokens\""
                        }
                      ],
                      "id": 109,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4128,
                        4129
                      ],
                      "referencedDeclaration": 4129,
                      "src": "2075:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2075:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "2075:45:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 114,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "2220:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2220:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2234:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2220:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 141,
                  "nodeType": "IfStatement",
                  "src": "2216:225:0",
                  "trueBody": {
                    "id": 140,
                    "nodeType": "Block",
                    "src": "2237:204:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 119,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 97,
                                  "src": "2253:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 120,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2253:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "3332",
                                "id": 121,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2268:2:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_32_by_1",
                                  "typeString": "int_const 32"
                                },
                                "value": "32"
                              },
                              "src": "2253:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "64617461206c656e6774682073686f756c64206265206569746865722030206f72203332206279746573",
                              "id": 123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2272:44:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_22b4652a1c8fbdfc6305c7ee289e87caf6a45e5ae327ee8f67eb64ba36d62560",
                                "typeString": "literal_string \"data length should be either 0 or 32 bytes\""
                              },
                              "value": "data length should be either 0 or 32 bytes"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_22b4652a1c8fbdfc6305c7ee289e87caf6a45e5ae327ee8f67eb64ba36d62560",
                                "typeString": "literal_string \"data length should be either 0 or 32 bytes\""
                              }
                            ],
                            "id": 118,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4128,
                              4129
                            ],
                            "referencedDeclaration": 4129,
                            "src": "2245:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2245:72:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 125,
                        "nodeType": "ExpressionStatement",
                        "src": "2245:72:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 126,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 95,
                            "src": "2325:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 129,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 97,
                                "src": "2346:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "id": 130,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2353:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bool_$",
                                      "typeString": "type(bool)"
                                    },
                                    "typeName": "bool"
                                  }
                                ],
                                "id": 131,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2352:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bool_$",
                                  "typeString": "type(bool)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_type$_t_bool_$",
                                  "typeString": "type(bool)"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 127,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4112,
                                "src": "2335:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "decode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2335:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2335:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2325:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 134,
                        "nodeType": "ExpressionStatement",
                        "src": "2325:34:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 136,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 95,
                              "src": "2375:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6e6f7420656e6f75676820616c6c6f77656420746f6b656e732e20546f6b656e2072657475726e732066616c73652e",
                              "id": 137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2384:49:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6cfae212a217874b58247660ff4d75d72aa825e8f2120480a7da09cf7efa221d",
                                "typeString": "literal_string \"not enough allowed tokens. Token returns false.\""
                              },
                              "value": "not enough allowed tokens. Token returns false."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6cfae212a217874b58247660ff4d75d72aa825e8f2120480a7da09cf7efa221d",
                                "typeString": "literal_string \"not enough allowed tokens. Token returns false.\""
                              }
                            ],
                            "id": 135,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4128,
                              4129
                            ],
                            "referencedDeclaration": 4129,
                            "src": "2367:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2367:67:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "2367:67:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 143,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeErc20TransferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "1887:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1887:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "1902:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1902:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "1915:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1915:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1886:45:0"
            },
            "returnParameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1941:0:0"
            },
            "scope": 199,
            "src": "1855:590:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 197,
              "nodeType": "Block",
              "src": "2516:477:0",
              "statements": [
                {
                  "assignments": [
                    151,
                    153
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 151,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 197,
                      "src": "2523:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 150,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2523:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 153,
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "scope": 197,
                      "src": "2537:17:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 152,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2537:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 163,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30786139303539636262",
                            "id": 158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2592:10:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2835717307_by_1",
                              "typeString": "int_const 2835717307"
                            },
                            "value": "0xa9059cbb"
                          },
                          {
                            "argumentTypes": null,
                            "id": 159,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 145,
                            "src": "2619:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 160,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 147,
                            "src": "2624:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2835717307_by_1",
                              "typeString": "int_const 2835717307"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 156,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4112,
                            "src": "2569:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2569:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2569:63:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 154,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "2558:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2558:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2558:75:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2522:111:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 165,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "2647:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f7420656e6f75676820746f6b656e73",
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2656:19:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73949bcdc07934e9395e82489bb22c4742e057960a2c090d38e53d68d3caf52a",
                          "typeString": "literal_string \"not enough tokens\""
                        },
                        "value": "not enough tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73949bcdc07934e9395e82489bb22c4742e057960a2c090d38e53d68d3caf52a",
                          "typeString": "literal_string \"not enough tokens\""
                        }
                      ],
                      "id": 164,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4128,
                        4129
                      ],
                      "referencedDeclaration": 4129,
                      "src": "2639:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2639:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "2639:37:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 169,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "2776:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2776:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2790:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2776:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 196,
                  "nodeType": "IfStatement",
                  "src": "2772:217:0",
                  "trueBody": {
                    "id": 195,
                    "nodeType": "Block",
                    "src": "2793:196:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 174,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 153,
                                  "src": "2809:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 175,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2809:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "3332",
                                "id": 176,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2824:2:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_32_by_1",
                                  "typeString": "int_const 32"
                                },
                                "value": "32"
                              },
                              "src": "2809:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "64617461206c656e6774682073686f756c64206265206569746865722030206f72203332206279746573",
                              "id": 178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2828:44:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_22b4652a1c8fbdfc6305c7ee289e87caf6a45e5ae327ee8f67eb64ba36d62560",
                                "typeString": "literal_string \"data length should be either 0 or 32 bytes\""
                              },
                              "value": "data length should be either 0 or 32 bytes"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_22b4652a1c8fbdfc6305c7ee289e87caf6a45e5ae327ee8f67eb64ba36d62560",
                                "typeString": "literal_string \"data length should be either 0 or 32 bytes\""
                              }
                            ],
                            "id": 173,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4128,
                              4129
                            ],
                            "referencedDeclaration": 4129,
                            "src": "2801:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2801:72:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 180,
                        "nodeType": "ExpressionStatement",
                        "src": "2801:72:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 181,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 151,
                            "src": "2881:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 184,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 153,
                                "src": "2902:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "id": 185,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2909:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bool_$",
                                      "typeString": "type(bool)"
                                    },
                                    "typeName": "bool"
                                  }
                                ],
                                "id": 186,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2908:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bool_$",
                                  "typeString": "type(bool)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_type$_t_bool_$",
                                  "typeString": "type(bool)"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 182,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4112,
                                "src": "2891:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "decode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2891:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2891:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2881:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 189,
                        "nodeType": "ExpressionStatement",
                        "src": "2881:34:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 191,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 151,
                              "src": "2931:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6e6f7420656e6f75676820746f6b656e732e20546f6b656e2072657475726e732066616c73652e",
                              "id": 192,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2940:41:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_38fa5aabf87e9f42de902eb4d9022484dde7943d80702b79ba468e9fc08f5e5e",
                                "typeString": "literal_string \"not enough tokens. Token returns false.\""
                              },
                              "value": "not enough tokens. Token returns false."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_38fa5aabf87e9f42de902eb4d9022484dde7943d80702b79ba468e9fc08f5e5e",
                                "typeString": "literal_string \"not enough tokens. Token returns false.\""
                              }
                            ],
                            "id": 190,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4128,
                              4129
                            ],
                            "referencedDeclaration": 4129,
                            "src": "2923:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2923:59:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 194,
                        "nodeType": "ExpressionStatement",
                        "src": "2923:59:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeErc20Transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 198,
                  "src": "2477:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2477:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 147,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 198,
                  "src": "2490:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2490:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2476:30:0"
            },
            "returnParameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2516:0:0"
            },
            "scope": 199,
            "src": "2449:544:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 200,
        "src": "728:2267:0"
      }
    ],
    "src": "642:2354:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0xa945e51eec50ab98c161376f0db4cf2aeba3ec92755fe2fcd388bdbbb80ff196": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "leafIndex",
              "type": "uint32"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "name": "Deposit",
          "type": "event"
        },
        "0x6d7aac54bd3d1c91db3b1fd7b8d6cb45324ad6b5e373c0f0ea4d7b2606c4c2c8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "nullifierHash",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "relayer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Withdrawal",
          "type": "event"
        },
        "0xf052b28ca720e670068c23c54488dc5b4db3ed42fde7c3fd2d0ea7aee06406eb": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "leafIndex",
              "type": "uint32"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "orderStatus",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "effectiveTime",
              "type": "uint256"
            }
          ],
          "name": "Deposit",
          "type": "event"
        }
      },
      "links": {
        "Hasher": "0x7e737480B1743642F0976Df6783E3C0dB452Ea8E"
      },
      "address": "0xDDDD28f8AE6E91BcfD5e93e10339bEa37faC568C",
      "transactionHash": "0x1c5983e145f6da06bf3db762a1c45c2a16517bc927c6ab3ebf8544a1f6d57b59"
    },
    "42": {
      "events": {
        "0xa945e51eec50ab98c161376f0db4cf2aeba3ec92755fe2fcd388bdbbb80ff196": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "leafIndex",
              "type": "uint32"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "name": "Deposit",
          "type": "event"
        },
        "0x6d7aac54bd3d1c91db3b1fd7b8d6cb45324ad6b5e373c0f0ea4d7b2606c4c2c8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "nullifierHash",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "relayer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Withdrawal",
          "type": "event"
        }
      },
      "links": {
        "Hasher": "0xB24DFb23d6A37674AD590Cc1C31fEce6ca512aC7"
      },
      "address": "0x75E04acbF7b62663FEA2E75e05c1715210F3C1EC",
      "transactionHash": "0x3b53440b2865facf9364753de4dadecbecef8d08095495df2fd81d137dd1b8b0"
    },
    "2000": {
      "events": {
        "0xa945e51eec50ab98c161376f0db4cf2aeba3ec92755fe2fcd388bdbbb80ff196": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "leafIndex",
              "type": "uint32"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "name": "Deposit",
          "type": "event"
        },
        "0xe9e508bad6d4c3227e881ca19068f099da81b5164dd6d62b2eaf1e8bc6c34931": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "nullifierHash",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "relayer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            }
          ],
          "name": "Withdrawal",
          "type": "event"
        },
        "0x6d7aac54bd3d1c91db3b1fd7b8d6cb45324ad6b5e373c0f0ea4d7b2606c4c2c8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "nullifierHash",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "relayer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Withdrawal",
          "type": "event"
        },
        "0xf052b28ca720e670068c23c54488dc5b4db3ed42fde7c3fd2d0ea7aee06406eb": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "leafIndex",
              "type": "uint32"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "orderStatus",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "effectiveTime",
              "type": "uint256"
            }
          ],
          "name": "Deposit",
          "type": "event"
        }
      },
      "links": {
        "Hasher": "0x8ca00240beAcb838bBEF0A6dF6327c1A73009144"
      },
      "address": "0xF9F88807690117b31491E34A4863c01303394a34",
      "transactionHash": "0xa04b756139612346a6fd31659b6e37395e44ed64989bf350a427ef6755c3af7e"
    }
  },
  "schemaVersion": "3.2.4",
  "updatedAt": "2020-09-27T01:38:37.803Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "depositERC20Batch(uint256[],bytes32[],uint8,address,uint256)": {
        "details": "Deposit a set of amount and commitments",
        "params": {
          "_amounts": ", array of ERC20 amount",
          "_commitments": ", array of commitments",
          "_effectiveTime": ", effective time of the Withdrawal",
          "_orderStatus": ", status of deposit, 0: cheque for bearer, 1: cheque for order",
          "_recipient": ", recipient address if cheque for order"
        }
      },
      "endorse(bytes,bytes32,bytes32,address,address,uint8,uint256,bytes32,bytes32,uint256)": {
        "details": "this function is for cheque endorsement",
        "params": {
          "_amount": ", endorsed amount, the endorsement amount can be part of balance of old cheque",
          "_effectiveTime": ", new effectiveTime of note",
          "_newCommitment": ", new commitment from frontend",
          "_nullifierHash": ", old nullifierHashe",
          "_oldCommitment": ", old commitment which will be endorsed",
          "_orderStatus": ", old cheque order type, 0- to Bearer cheque, 1- to order cheque",
          "_proof": ", Proof of zkSNARK",
          "_recipient": ", new recipient address, if orderStatus is 0, the _recipient is sender. Otherwise the _recipient is to order",
          "_relayer": ", relayer address",
          "_root": ", root of merkle tree"
        }
      },
      "getLastRoot()": {
        "details": "Returns the last root"
      },
      "getRelayerWithdrawAddress()": {
        "details": "get relayer Withdrawal address "
      },
      "hashLeftRight(bytes32,bytes32)": {
        "details": "Hash 2 tree leaves, returns MiMC(_left, _right)"
      },
      "isKnownRoot(bytes32)": {
        "details": "Whether the root is present in the root history"
      },
      "isSpent(bytes32)": {
        "details": "whether a note is already spent "
      },
      "isSpentArray(bytes32[])": {
        "details": "whether an array of notes is already spent "
      },
      "lockDeposit(bytes,bytes32,bytes32,address,address,uint256,uint256,bytes32,string)": {
        "details": "lock commitment, this operation can be only called by note holder "
      },
      "setCouncial(address)": {
        "details": "set council address "
      },
      "unlockDeposit(uint256)": {
        "details": "unlock commitment by council "
      },
      "updateCommonWithdrawAddress(address)": {
        "details": "update commonWithdrawAddress "
      },
      "updateOperator(address)": {
        "details": "operator can change his address "
      },
      "updateRelayer(address,address)": {
        "details": "update authority relayer "
      },
      "updateVerifier(address)": {
        "details": "allow operator to update SNARK verification keys. This is needed to update keys after the final trusted setup ceremony is held. After that operator rights are supposed to be transferred to zero address"
      },
      "withdraw(bytes,bytes32,bytes32,address,address,uint256,uint256,bytes32)": {
        "details": "Withdraw a deposit from the contract. `proof` is a zkSNARK proof data, and input is an array of circuit public inputs `input` array consists of: - merkle root of all deposits in the contract - hash of unique deposit nullifier to prevent double spends - the recipient of funds - optional fee that goes to the transaction sender (usually a relay)",
        "params": {
          "_fee": ", relayer decide the fee amount"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}